{
    "packages": [
        {
            "category": "game", 
            "binary": "/switch/BlockamokRemix/BlockamokRemix.nro", 
            "updated": "11/10/2024", 
            "name": "BlockamokRemix", 
            "license": "MIT", 
            "title": "Blockamok Remix", 
            "url": "https://github.com/Mode8fx/blockamok", 
            "description": "3D block-dodging action", 
            "author": "Mode8fx", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 10772, 
            "version": "1.0", 
            "filesize": 4874, 
            "details": "Fly through a 3D world of never-ending blocks and survive for as long as you can! Includes customization options for both gameplay and visuals, along with five music tracks.", 
            "app_dls": 85, 
            "md5": "a3f2329680a26ddf50d1e20ec30a1827"
        }, 
        {
            "category": "tool", 
            "binary": "none", 
            "updated": "26/08/2020", 
            "name": "USBBotbase", 
            "license": "n/a", 
            "title": " USB-Botbase", 
            "url": "https://github.com/fishguy6564/USB-Botbase/releases", 
            "description": "control switch via wifi", 
            "author": "fishguy6564", 
            "changelog": "1.1\\n\\nAdds screenshot dumping support\\nChanges writing and dumping methods to use svc calls to be more in parallel to sys-botbase.", 
            "screens": 0, 
            "extracted": 63, 
            "version": "1.1", 
            "filesize": 48, 
            "details": "USB-Botbase is based off of sys-botbase by olliz0r. This versions implements USB support and removes network support.\\n\\nDependencies\\nPython3 is the required version of python needed to run scripts for USB-Botbase.\\nPyusb is necessary in order to communicate to the Nintendo Switch. You can install Pyusb by using the following pip command.\\npip install pyusb\\nA usb backend is necessary. Please use Zadig and install the libusbk driver to your Nintendo Switch by plugging it in while running the sys-module.\\nInstall libusb with this.\\nWarning, Please Read!\\nUsing a hacked switch online CAN get you banned. The developers of sys-botbase and I are not responsible for any damages or bans that may occur when using this. You use this at your OWN risk.", 
            "app_dls": 2365, 
            "md5": "d992afb45d11b898235e88715e6528d6"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/emummc-toggler/emuMMC-Toggle.nro", 
            "updated": "04/07/2019", 
            "name": "emummc-toggler", 
            "license": "GPLv3", 
            "title": "emummc-toggler", 
            "url": "https://github.com/noirscape/emummc-toggler/releases", 
            "description": "Toggle the emummc_enabled on and off from your switch", 
            "author": "noirscape", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 779, 
            "version": "1.1.1", 
            "filesize": 302, 
            "details": "This very simple homebrew just flips the number in emummc/emummc.ini that determines if Atmosphere should load emuMMC.\\n\\nIdea\\n\\nRemoves the need for SD pulls to reboot from emuMMC to sysMMC or vice versa if using fusee-primary.\\n\\nUsage\\n\\nOpen the .nro using the HBL.\\n\\nPress - to toggle emuMMC on or off.\\nPress + to exit the application.\\n\\nDon't attempt to toggle emuMMC if it says something is wrong. That's bad behavior.", 
            "app_dls": 1717, 
            "md5": "5bff36da90a65172e24c879a2ee85626"
        }, 
        {
            "category": "concept", 
            "binary": "/switch/sdl-hello.nro", 
            "updated": "21/07/2018", 
            "name": "sdl-hello", 
            "license": "MIT License", 
            "title": "Hello World", 
            "url": "https://github.com/vgmoose/sdl-hello-world", 
            "description": "Graphical hello world program", 
            "author": "vgmoose", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2069, 
            "version": "1.1", 
            "filesize": 739, 
            "details": "This program displays Hello World on the screen using a bitmap font. Can be compiled with either libtransistor or libnx, see the source link for more details and information.", 
            "app_dls": 1139, 
            "md5": "f1d14a235593bfe8e2431971d2a820b8"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "21/12/2024", 
            "name": "Status-Monitor-Overlay", 
            "license": "GPLv2", 
            "title": "Status-Monitor-Overlay", 
            "url": "https://github.com/masagrator/Status-Monitor-Overlay/releases", 
            "description": "Monitor many stats of Nintendo Switch hardware", 
            "author": "masagrator", 
            "changelog": "1.1.7a\\n\\nAdd support for SaltyNX 1.2.0+ (older versions are now unsupported when it comes to using FPS Graph)\\nFix reading config issue for Mini mode #88\\n\\n1.1.6\\n\\nSmall code refactor which resulted in slightly smaller size\\nSupport SaltyNX 1.0.3+ display refresh rate update logic in FPS Graph to fix issue with graph randomly not adjusting height to refresh rate (if there is older SaltyNX used, overlay will use old logic)\\n\\n1.1.4\\n\\nFix issue with overlay potentially crashing system on overlay's boot related to nv services\\nFix potential issue with sleep mode at 19.0.0+ that was first discovered in sys-clk retronx-team/sys-clk#85\\nFor some reason using tsSessionGetTemperature is enough to crash system while is in sleep mode\\nIt was fixed by moving from ts service to i2c. Readings are not filtered, so reading output and behavior can be slightly different than what we were used to.\\n\\n1.1.3\\n\\nSwitch reading fan rotation level from \"fan\" service to \"pwm\" service\\nThis allows avoiding potential conflict with other homebrew/sysmodules (f.e. Nx-FanControl) because only one process can have fan controller session in \"fan\" service.\\n\\n1.1.2\\n\\nFix Resolutions sometimes going out of bounds in Full Mode\\nUpdate SaltyNX to 0.9.2+ for better compatibility with games using Id Tech engines and Creation Engine\\n\\n1.1.1\\n\\nAdded options to show 2 the best candidates for game's internal resolution in Mini and Full modes.\\nAdded keys to config that can disable showing FPS and Resolutions in Full mode\\nAdded value RES to show key in Mini mode that shows Resolutions.\\nUpdate SaltyNX to 0.9.1+ for better compatibility with games using Id Tech engines\\n\\n1.1.0\\n\\nAdded \"Game Resolutions\" menu to \"Other\" category. More HERE.\\n\\nSaltyNX 0.9.0+ is required for it to work properly\\n\\n1.0.4\\n\\nMoved from c++20 to c++23\\nWith SaltyNX 0.8.0+ FPS Graph mode will adjust height according to received back display refresh rate.\\n\\n1.0.3a\\n\\nFix compability issues with combos from Ultrahand and Tesla configs after implementing #72\\n\\n1.0.3\\n\\nImproved key combo and navigation handling #72 (thanks to @IrneRacoonovich )\\nFixed an issue with battery readings not working after exiting Micro mode multiple times without rebooting Switch (this bug affected also other homebrew reading battery stats with PSM service)\\nFutureproofed for sys-clk IPC updates\\n\\n1.0.2\\n\\nAdd new keys to config: battery_avg_iir_filter and battery_time_left_refreshrate, more in CONFIG\\nChanging battery_avg_iir_filter to true results in period time of average voltage being changed to 45s, and 11.25s for amperage\\nRemoved whole logic behind PR #56 instead relying now on max17050 TTE register\\nChanged i2c communication code to avoid issues with wrong readings (thanks to ~lineon)\\nMove FPS Graph and FPS Counter to one subcategory \"FPS\"\\n\\n1.0.1\\n\\nAllow hiding real frequencies, deltas and target frequencies in Full mode (deltas are not showed if both real + target frequencies are hidden).\\n\\nThis release also includes 2 shadow updates for 1.0.0, which includes fixes for overflowing of real frequencies + deltas, and also fixed RAM positioning calculations in Micro and Mini modes.\\n\\n0.9.2\\n\\n17.0.0 FW issues fixed:\\n\\nSoC and PCB temperatures showing 0\\nCharger Type, Charger Max Voltage and Charger Max Current showing wrong values\\nGeneral changes:\\n\\nSoC and PCB temperatures across all FWs are now showing decimals\\nNext to Battery Power Draw in Full, Mini and Micro modes you can see now also estimated time left before Switch will shutdown (thanks to rkuchkarov for PR #56)\\nIn Micro instead of MB for RAM now you will see GB up to one decimal\\nIn Micro now power draw shows only one decimal\\nFan level will now render only one decimal across all modes\\nMiscellaneous now also shows NVENC and NVJPG clocks (thanks to averne for PR #57)\\nSince 17.0.0 audsnoop is not available, DSP Usage is not shown in Other -> Miscellaneous tab\\n\\n0.9.1\\n\\nNow filepath for Micro mode is not hardcoded, it is retrieved via Tesla Menu.\\n\\nTo use it with changed filename it is required to update Tesla Menu to version at least 1.2.3.\\nOn older versions of Tesla Menu it behaves the same as 0.9.0 version.\\n\\n0.9.0\\n\\nCorrected Battery Power Flow calculation\\nChanged Battery Stats reading to 2 readings per second. Current, Voltage and Power Flow are calculated now via 10 last readings.\\nChanged FPS average calculation to 10 last readings instead of constant averaging\\nAdded Graphs tab with currently only FPS available (Graphs tab won't show for now if you don't have SaltyNX installed)\\nMoved Battery/Charger + Miscellaneous tabs under \"Other\" tab\\nYou can move now FPS Counter + FPS Graph to the bottom and top of screen by pressing ZR + R + D-Pad Down/Up\\n\\n0.8.3\\n\\nAdd Battery Power Flow stat into Full, Mini, Micro modes and Battery/Charger tab\\nAdd Battery Current Flow into Battery/Charger tab\\nChange Battery Voltage from 45s average to average of 5 to match better with Battery Current Flow and get faster responses to changes in voltage at the cost of slightly less accurate readings\\nFix a random issue with allocing memory for reading Wi-Fi password and battery stats\\n\\n0.8.2\\n\\nFix conditional handle leak\\nFix memory leak\\nWorkaround race condition causing random crashes in docked mode\\n\\n0.8.1\\n\\nMove reading FPS from dmnt:cht to SharedMemory. This fixes any stutterings, thread desyncing and cracking sounds you may have encountered when using NX-FPS in games.\\n\\nRequires NX-FPS 0.4+ and SaltyNX 0.5.0+ to read FPS.\\n\\n0.7.1\\n\\nIt adds support for 16.0.0.\\n\\n0.7\\n\\nNew 2 tabs were added:\\n\\nBattery/Charger\\nMiscellaneous\\nYou can now check Battery temperature, max supported charger voltage and current, connected Wi-Fi password and few others.\\n\\n0.6.4\\n\\nAdded support for 14.0.0 FW.\\nIt removed function for reading SoC and PCB temperatures in milli Celsius. 0.6.3 was outputting 0.0C because of that. Now it reads temperature in Celsius without decimals on FW 14.0.0+\\nFixed slow boot time by reimplementing fix from Breeze repository\\n\\n0.6.3\\n\\nFixed button combo\\n\\n0.6.1\\n\\nFix issue related to always forcing opening cheat process with dmnt:cht that sometimes resulted in conflicts with other tools.\\nNow it's checking first if cheat process is opened already.\\n\\n\\n0.6.0\\n\\nIf dmnt:cht is not detected, it's using svc calls to read FPS values for NX-FPS (now only if SaltyNX check failed, FPS Counter won't show).\\nBe aware that not using Atmosphere's dmnt:cht may introduce conflicts with other cheat engines, resulting in crashes or hangs.\\n\\n0.5.4\\n\\nFix issue with CPU Core usage stuck at last value when core usage is at peak.\\n\\n0.5.3\\n\\nUpdated to libnx 3.2.0, which helps with very rare case of crashing overlay if pl sessions are depleted.\\nFixed wrong version inside overlay\\n\\n0.5.2\\n\\nAdded version info for Tesla menu\\nAdded support for SX OS (FPS Counter is not available)", 
            "screens": 0, 
            "extracted": 434, 
            "version": "1.1.7a", 
            "filesize": 194, 
            "details": "Monitor Your hardware in real time!\\n\\nThis is an overlay homebrew dedicated to Nintendo Switch. You need to have installed Tesla environment to use it.\\n\\nTool contains three modes to choose, each one is explained here : https://github.com/masagrator/Status-Monitor-Overlay/blob/master/docs/modes.md\\n\\nYou can exit from selected mode by pressing and holding Left Stick + Right Stick. To exit from main menu press B.\\n\\nIf it's not working in dock, you need to first start Status Monitor, then put Nintendo Switch to dock.\\n\\nWhat is currently supported:\\n\\nCPU Usage for each core (Cores #0-#2 are used by apps/games, Core #3 is used by OS, background processes and also Tesla overlays)\\nGPU Load\\nCPU, GPU & RAM actual frequency\\nUsed RAM categorized to: (not supported by FWs <5.0.0)\\nTotal\\nApplication\\nApplet\\nSystem\\nSystem Unsafe\\nSoC, PCB & Skin temperatures (Skin temperature not supported by FWs <5.0.0)\\nFan Rotation Level\\nPFPS and FPS (with help of NX-FPS, more info in repo. Not installing it results in not showing FPS counters on overlay)\\nPlanned:\\nAdd Graph mode\\n\\nRequirements:\\n\\nFrom 0.4.1 you need Tesla Menu >=1.0.2\\n\\nThanks to:\\n\\nRetroNX channel for helping with coding stuff\\nSunTheCourier for sys-clk-Overlay from which I learned how to make my own Tesla homebrew\\nHerbaciarz for providing screenshots from HDMI Grabber\\nFAQ:\\nQ: This homebrew has any impact on games?\\n\\nA: Negligible, you won't see any difference. Almost everything is done on Core #3, other cores usage is below 0.001%.\\n\\nTroubleshooting:\\nQ: Game sometimes hangs when using Status Monitor Overlay. Why?\\n\\nA: This is because of dmnt:cht nature. Some games don't like that it's peaking constantly at its memory and they stuck. This happens only if you are using NX-FPS plugin. Solution is to just close Status Monitor Overlay (you don't need to close Tesla Menu) and wait few seconds until game will resume.", 
            "app_dls": 55687, 
            "md5": "afed450252d88d23d18863e6cc2e0d8f"
        }, 
        {
            "category": "game", 
            "binary": "/switch/NXoodles/NXoodles.nro", 
            "updated": "18/06/2020", 
            "name": "NXoodles", 
            "license": "GPLv3", 
            "title": "NXoodles!", 
            "url": "https://github.com/MrJPGames/Noodles-/releases", 
            "description": "Noodles! clone for Nintendo Switch", 
            "author": "MrJPGames", 
            "changelog": "1.1\\n\\nYou can now use this with the latest CFW versions, as a result of the libNX update the inputs work once more.\\nNothing else has changed.\\n\\n1.0.1a\\n\\nFix where selecting a level would cause the next level to be loaded instead.\\nFix where rotating tile did not have audio with touch controls\\nB can now be used to rotate a tile counter clockwise\\n\\n1.0.1\\n\\nSound added\\nMenu now allows you to scroll faster by holding a button down\\nMenu allows right and left directions to move 10 levels up or down", 
            "screens": 0, 
            "extracted": 9908, 
            "version": "1.1", 
            "filesize": 4264, 
            "details": "Looking for a relaxing, strategic and addictive puzzle? Find your Zen and become one with Noodles! Tap to spin and connect all the noodle pieces \u2013 once you solve a puzzle, figure out the strategy and beat your own score to get FIVE STARS!", 
            "app_dls": 1217, 
            "md5": "bc6d6fd88c7d5b7f1988a6a5a97e8de6"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Pickr.nro", 
            "updated": "19/07/2018", 
            "name": "Pickr", 
            "license": ".", 
            "title": "Pickr", 
            "url": "https://github.com/BernardoGiordano/Pickr/tree/master/switch", 
            "description": "Port of the game Pickr3DS", 
            "author": "BernardoGiordano", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 1446, 
            "version": "1.1.1-1", 
            "filesize": 350, 
            "details": "Pickr is a port of the game Pickr3DS by BernardoGiordano.\\n\\nThe original idea was founded by Sean M. Tracey.\\n\\n The objective of the game is to tap the odd colour found on the screen until you run out of lives.", 
            "app_dls": 468, 
            "md5": "3b7e068ea37f4896b132177a07461c73"
        }, 
        {
            "category": "game", 
            "binary": "/switch/cannonball-nx/cannonball.nro", 
            "updated": "16/07/2018", 
            "name": "cannonball", 
            "license": "Copyleft", 
            "title": "CannonBall", 
            "url": "https://github.com/lantus/cannonball-nx/releases", 
            "description": "Outrun Engine ported to Switch", 
            "author": "lantus", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 1664, 
            "version": "1.00", 
            "filesize": 686, 
            "details": "Ported to the Switch by MVG. Original release by djyt.\\n\\nOriginal Release - https://github.com/djyt/cannonball\\n\\nNOTE: Arcade roms for Outrun Version B are required to run this engine. The roms are NOT included in the download\\nPlace OutRun Revision B ROMs in roms folder", 
            "app_dls": 6959, 
            "md5": "5dcc81815ec7cce863dc798bbab89cdd"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/nx-locale-switcher/nx-locale-switcher.nro", 
            "updated": "06/02/2022", 
            "name": "nx-locale-switcher", 
            "license": "GPLv3", 
            "title": "nx-locale-switcher", 
            "url": "https://github.com/HamletDuFromage/nx-locale-switcher/releases", 
            "description": "Changes the locale for specific titles on your Nintendo Switch", 
            "author": "HamletDuFromage", 
            "changelog": "1.1.2\\n\\nFixed small typo in confirmation popup\\n\\n1.1.1\\n\\nRefactored some of he code, possible bug fix\\n\\n1.1.0\\n\\nAdded default language selection\\nPress Y to reload the games on the main page", 
            "screens": 2, 
            "extracted": 7749, 
            "version": "1.1.2", 
            "filesize": 2835, 
            "details": "A Nintendo Switch homebrew app that allows you to change the language and region of your games on a per-title basis, directly from your console. This makes use of Atmosph\u00e8re's per-game settings overriding. As such, this WILL NOT work on any other CFW.", 
            "app_dls": 9772, 
            "md5": "3287c33310d59b9bf4247de3608274fe"
        }, 
        {
            "category": "_misc", 
            "binary": "/switch/wiliwili/wiliwili.nro", 
            "updated": "02/11/2024", 
            "name": "wiliwili", 
            "license": "GPLv3", 
            "title": "wiliwili", 
            "url": "https://github.com/xfangfang/wiliwili/releases", 
            "description": "Yet another Bilibili client", 
            "author": "xfangfang", 
            "changelog": "1.5.0\\n\\n[Fixed]: Switch crashes after long playback with cache enabled\\n[Fixed]: Switch crashes on system 19.0.0+ with NSP forwarder issue (requires reinstalling the NSP forwarder)\\n[Fixed]: Crashes related to video sharing dialog\\n[Fixed]: Crashes related to chat page\\n[Fixed]: Blank video cards displayed in the recommendations\\n[Fixed]: Failure to cast to DLNA renderer (still unable to cast videos that require VIP membership or payment)\\n[Added]: Support for blocking uploader in recommendations\\n[Added]: Support for down voting comments\\n[Added]: Support for clearing search history\\n[Added]: Support mpv configurations in custom shader profile\\n[Added]: Added setting for swapping gamepad buttons\\n[Added]: Added setting for autoplay on the detail page\\n[Optimized]: More detailed display of network errors\\n[Optimized]: Adjusted the layout of the setting page\\n\\n1.4.1\\n\\n[Win] Fix not displaying emoji\\n[Win] Fix inability to play videos with proxy turned on\\n[Win] Fix frame rate recognition errors\\n[Win] Fix IME candidate list in the wrong position\\n[Win] Fix ghost touching\\n[PS4] Fix GPU crash caused by playing certain videos\\nFix issues related to live streaming\\nFix some video pop-up API errors\\nFix incorrect activity count on personal page\\nSupport more DLNA clients\\nSupport message related functions\\nOther minor stability improvements, performance optimizations, and detail adjustments\\n\\n1.4.0\\n\\n[Activity page] Added comprehensive activity\\n[Activity page] Fixed occasional failure to load the uploader list\\n[Player] Added TV operation mode\\n[Player] Added 0.25, 3.0, 4.0 video speed options\\n[Player] Added new video ratio modes: Stretch, Fill\\n[Player] Added rt/zr/r2 + up and down to adjust the volume\\n[Player] Added episode list when playing in full screen\\n[Player] Added support for \"OHHHH\" in danmaku\\n[Player] Added 20%, 30%, 40% danmaku transparency options\\n[Player] Side up and down to adjust backlight\\n[Player] Improve performance of danmaku\\n[Player] Fixed failure to load history progress in some cases\\n[Player] Fixed video mirroring issue with hardware decoding\\n[Search page] Added more detailed search categories\\n[Search page] Reducing unnecessary network requests\\nOther minor stability improvements, performance optimizations, and detail adjustments\\n\\n1.3.0\\n\\nOptimize: error display for easier readability\\nFix: the issue of danmaku speed not following when video speed is adjusted\\nFix: partial malfunction of custom shaders for videos\\nFix: the issue of adding duplicate tabs on the right when automatically switching videos\\nFix: the problem of skipping one episode when automatically switching videos\\nFix: some live videos without sound\\nFix: the inability to automatically load the next page in the list for specific screen sizes\\nNew: [i18n] Italian translation\\nNew: [Player] Mirror video\\nNew: [Player] Force set video aspect ratio\\nNew: [Player] Allow automatic skipping of opening and ending credits\\nNew: [Player] Customize video aspect ratio and opening and ending credits for anime\\nNew: [Player] Progress bar can be clicked directly\\nNew: [Player] Highlight progress bar\\nNew: [Player] Menu anti-mistouch lock\\nNew: [Player] Display replay button when playback ends and pauses\\nNew: [Danmaku] Custom font (place danmaku.ttf in the wiliwili configuration directory)\\nNew: [Danmaku] Intelligent anti-occlusion\\nNew: [Danmaku] Adjust font outline style (outline, shadow, etc.)\\nNew: [Danmaku] Adjust rendering resolution\\nNew: [Danmaku] Support advanced danmaku (default off)\\nNew: [Network] tls certificate verification switch\\nNew: [Network] http proxy\\nOther minor stability improvements, performance optimizations, and detail adjustments\\n\\n1.2.2\\n\\nFixed live streaming danmaku cannot be displayed\\nFix possible crash when opening live streaming page\\n\\n1.2.1\\n\\nFix the issue of insufficient display of live streaming danmaku\\nFixed some live streaming rooms not being able to obtain video links\\nFix gif comment not displaying\\nLive streaming UI adjustment\\nLive streaming displays more error hint\\n\\n1.2.0\\n\\nSupport hardware decoding in NintendoSwitch. Thanks to @averne\\nAutomatically refresh video links after being idle for a long time\\nSupport for custom layout: https://github.com/xfangfang/wiliwili_theme\\nAdapt to external screens of different sizes\\nOther minor adjustments that may affect the user experience\\n\\n1.1.1\\n\\nUpdate NSP forwarder version\\nFixed API error (Occurred after 7/25)\\nFixed crash with hos lower than 16.0 (2162-0002)\\nFixed no audio sometimes in the video\\n\\n1.1.0\\n\\nFixed mpv crash when playing videos with cache enabled\\nAdd live streaming danmaku\\nAdd support for DLNA casting\\nAdd watch-later page\\nAdd DLNA support, Entry: Settings / Utilities / DLNA casting\\nOther minor modifications\\n\\n1.0.1\\n\\nFix some API error\\nImprove comment styles\\nImprove the touch experience\\nAdd TV style search page\\nVideo collection support\\nAdd many custom settings\\n\\n0.6.0\\n\\nIncreased stability\\nPlayerActivity: like/coin/favorite/follow, video comment, danmaku customization, rewrite episode page and introduction page\\nPGC: display relevant episodes and recommended episodes\\nPersonal homepage: Add Anime and Series page\\ni18n: Korean/Japanese/Ryukyuan, Special thanks to DDinghoya & kuragehimekurara1\\nSwitch: Add a new NSP forwarder\\nOthers: optimize touch, Improve network access speed, Fix image cache leak, some UI repairs and fine-tuning...\\n\\n0.5.0\\n\\nIncreased stability\\nFix the problem that it does not output 1080P in dock mode\\nAdd several playback settings\\nThe player supports touch and drag to adjust the progress\\nNew player hot keys\\n\\n0.4.2\\n\\nUpdate the video url api\\nFix incomplete all-activities page content\\nPlayer OSD fine-tuning\\n\\n0.4.1\\n\\nThis version reduces the frequency of crash. It is recommended that all users update to this version\\n\\nReduce crash when opening videos\\nSupport searching videos without login\\nHistory can be clicked to enter the live broadcast room\\nAdd video quality option (key: \"+\")\\nAnimation, interface style fine-tuning\\nDanmaku display enhancement\\nTraditional Chinese Translation Enhancement\\nUpdate ffmpeg (5.1.1) and mpv (0.34.1)\\n\\n0.4.0\\n\\nSolve live broadcast errors\\nSolve long time playback error\\nAdded some null pointer checks\\nSupport in-app installation of nsp forwarder (entrance: Settings / Tools / Tutorial / Install Desktop Icons)\\nEnrich more settings\\nPage font/style/function fine-tuning\\nSupport Windows compile and run", 
            "screens": 0, 
            "extracted": 40534, 
            "version": "1.5.0", 
            "filesize": 18952, 
            "details": "wiliwili is an Unofficial 3rd party Bilibili client, which provides switch users with the possibility to watch videos from Bilibili.\\n\\nBilibili is a video website mainly for Chinese users, so the default language setting is Chinese.\\n\\nBecause of copyright issues, videos refreshed using this app are different in different regions of the world.\\n", 
            "app_dls": 8104, 
            "md5": "878b7c212a24da175725ae44513f0093"
        }, 
        {
            "category": "game", 
            "binary": "/switch/sdlpal/sdlpal.nro", 
            "updated": "22/02/2024", 
            "name": "pal", 
            "license": "GPLv3", 
            "title": "Legend of Sword and Fairy", 
            "url": "https://github.com/usineur/sdlpal/releases", 
            "description": "Legend of Sword and Fairy port", 
            "author": "usineur", 
            "changelog": "1.1-nx\\n\\nFix aspect ratio (thanks to @palxex )\\n\\n1.0-nx\\n\\nInitial release\\n\\n1.3 (old gbatemp release)\\n\\n\\nNo code changes, just bump to sync version number with Vita", 
            "screens": 0, 
            "extracted": 243646, 
            "version": "1.1-nx", 
            "filesize": 141161, 
            "details": "Li Xiaoyao, the protagonist of the game, is an orphan who lives with his aunt in a small fishing village near Suzhou, China. When his aunt falls sick, Li travels across the sea to a mystical island in search of a cure for his aunt. He meets a maiden Zhao Ling'er, whom he falls in love with. Although he was forced by Zhao's nanny to marry Zhao and remain on the island forever, he manages to escape with the medicine and succeeds in healing his aunt. However, he loses memory of his encounter on the island because he was tricked into consuming a memory-erasing drug earlier. When he meets Zhao again, he does not remember her but still saves her from a group of enemies, who have destroyed her home and murdered her nanny. He then decides to accompany her to southwestern China in search of her mother, who might still be alive.\\n\\nFollow the source link for more detailed instruction and controls.", 
            "app_dls": 13474, 
            "md5": "28f08d4cc6ddf4e96e8a3029edb2a768"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Bejeweled-NX/Bejeweled_NX.nro", 
            "updated": "09/01/2019", 
            "name": "Bejeweled-NX", 
            "license": "GPLv3", 
            "title": "Bejeweled NX", 
            "url": "https://github.com/Manurocker95/Bejeweled-NX/releases", 
            "description": "Bejeweled Port", 
            "author": "Manurocker95", 
            "changelog": "v1.0 Initial Release", 
            "screens": 0, 
            "extracted": 25417, 
            "version": "1.0", 
            "filesize": 18480, 
            "details": "No official info provided by the developer .\\n\\n\\nNintendo switch port of  the classic Bejeweled.", 
            "app_dls": 5281, 
            "md5": "518d0e59a0f5c9a05cc84b58d1b497bc"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Pong/Pong.nro", 
            "updated": "16/07/2018", 
            "name": "pong", 
            "license": ".", 
            "title": "Switch Pong", 
            "url": "https://github.com/TheKgg/switch-pong", 
            "description": "Pong", 
            "author": "Thekgg", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 231, 
            "version": "1.0.1", 
            "filesize": 94, 
            "details": "Pong for the Nintendo Switch written using libnx.\\n\\nController 1 is the left bar, controller 2 is the right bar. Use the left stick to move.", 
            "app_dls": 3431, 
            "md5": "d088a590692a8e464489d27203ebcb3f"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/ezremote-client.nro", 
            "updated": "15/12/2024", 
            "name": "ezRemoteClient", 
            "license": "GPLv3", 
            "title": "ezRemote Client", 
            "url": "https://github.com/cy33hc/switch-ezremote-client", 
            "description": "Remote File Manager for FTP, SMB, WebDAV", 
            "author": "cy33hc", 
            "changelog": "1.06\\n\\nFix an issue that would delete the local file after uploading using webdav and the server does not return a http 200 status code\\n\\n1.04\\n\\nAdd support for archive.org download URLs\\nThis allows you to browse and download the files\\nOnly supports parsing of the download URL (ie the URL where you see a list of files). Example\\narchive_org_screen1\tarchive_org_screen2\timage\\nAdd ability to use the ZL button to go up a directory\\nAdded support for WebDAV servers that don't support http HEAD request. Fixes download issues from real-debrid webdav\\n\\n1.03\\n\\nUpdated Progress Dialog to show Avg Transfer Speed instead of percentage completed\\nImplemented wrap around while scrolling file list\\nFix crash caused by invalid SMB url\\n\\n1.02\\n\\nimprove speed extracting compressed files from SMB\\nfixed connecting to FTP server by using hostname\\nupdate Simplified Chinese\\nadded Ukrainian language", 
            "screens": 0, 
            "extracted": 34175, 
            "version": "1.06", 
            "filesize": 18293, 
            "details": "A File Manager application that allows you to connect the Switch to remote FTP, SMB, WebDAV servers to transfer and manage files.", 
            "app_dls": 6138, 
            "md5": "93d8d8f88c0552f85be1a0e172d2f2f9"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/eBookReaderSwitch/eBookReaderSwitch-0.4.0.nro", 
            "updated": "04/10/2021", 
            "name": "eBookReaderSwitch", 
            "license": "n/a", 
            "title": "eBookReaderSwitch", 
            "url": "https://github.com/SeanOMik/eBookReaderSwitch/releases", 
            "description": "ebook / pdf reader", 
            "author": "SeanOMik", 
            "changelog": "0.4.0\\n\\nSimple touch controls, that's it.\\nTouch the bottom/top of the screen to zoom in/out and left/right to change the page.\\nMinor input fixes and tweaks on the status bar icons.\\n\\n0.3.1-beta\\n\\nBuilt with the latest version of LibNX, now it works with AMS 19.4\\n\\n0.3.0-beta\\n\\nMoronigranja got the file format issues with some pdfs, and all epub, cbz, and xps.\\n\\n0.2.2-beta\\n\\nAll button prompts are now images instead of text.\\nExample: \" 'B' - Exit \" is replaced with \" (switch_b_control.png) Exit \" (terrible explanation).\\nPossibly unsupported file formats now have an image to the left of the file.\\n\\n0.2.1-beta\\n\\nNow saves page numbers in \"/switch/eBookReader/saved_pages.cfg\"\\nNew app icon image (ugly but works).\\n\\n0.2.0-beta\\n\\nBuilt with the new LibNx update so controls will work fine in 9.0.0.\\nAdded dark mode, enabled by default (press \"-\" to toggle).\\nDue to me just inverting colors, colored images wouldn't look so nice.\\nWhen reading a book there is a help menu if you press the \"+\" button.\\nThe book folder is created by default on the start.\\n\\n0.1.1-beta\\n\\nApparently some people couldn't start the app, should be fixed\\nIn portrait mode, the text now displays at the top of the screen instead of the side.", 
            "screens": 0, 
            "extracted": 43810, 
            "version": "0.4.0", 
            "filesize": 29735, 
            "details": "This is a project I've recently just started working on again. Currently its using MuPDF as its backend. Currently only most pdf files work.\\n\\nCurrent State:\\n\\nIt finally works!\\nSo far, only MOST of the PDF files I've tested works.\\nJust about ALL of the code isn't even mine but taken from an old commit of NX-Shell.", 
            "app_dls": 6848, 
            "md5": "48b31a22b800bc7642fd6a85491d1436"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "25/02/2023", 
            "name": "fastCFWswitch", 
            "license": "GPLv2", 
            "title": "fastCFWswitch", 
            "url": "https://github.com/Hartie95/fastCFWswitch", 
            "description": "Overlay to reboot into payloads", 
            "author": "Hartie95", 
            "changelog": "1.3.1\\n\\nUpdated libtesla for 16.0.0 compability\\n\\n1.3.0\\n\\nfastCFWswitch now uses the more secure way to reboot (ams:bpc)\\nThis should reduce the amount of possible fs corruptions\\nSXOS and reinx still use the old, manual reboot\\n\\n1.2.0\\n\\nThis release adds support for hekates boot to ums feature.\\nTo use it, create an entry with the ums field set to one of the values defined in the README\\n\\n1.1.1\\n\\nThis release mostly just adds some small internal changes, like an update to the latest libTesla version, and a few internal refactorings.\\nIt also adds an error message on Mariko switches, since those don't support reboot to payload.", 
            "screens": 1, 
            "extracted": 882, 
            "version": "1.3.1", 
            "filesize": 326, 
            "details": "A tesla based overlay to boot into different payloads on the Nintendo Switch.\\n\\nSetup the tesla menu and nx-ovlloader\\nModify the configuration in /config/fastCFWSwitch/config.ini\\n\\nConfiguration :\\nhttps://github.com/Hartie95/fastCFWswitch#configuration\\n", 
            "app_dls": 8631, 
            "md5": "149a1d491a79b69333ad051ebc64a8c5"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/retroarch_switch.nro", 
            "updated": "16/07/2018", 
            "name": "snes9x_2010", 
            "license": "none listed", 
            "title": "SNES9x_2010", 
            "url": "https://gbatemp.net/threads/retroarch-switch.492920/", 
            "description": "A SNES Retroarch Core", 
            "author": "Retroarch", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 3744, 
            "version": "beta", 
            "filesize": 1199, 
            "details": "A very beta version of this core , games play from the SD card.\\n\\nScreen settings\\nGame Saves\\nButton Config\\nAnalog input.", 
            "app_dls": 22999, 
            "md5": "dec666da38411f7c191c7d1b7bc82cca"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Fifteen-NX/Fifteen_NX.nro", 
            "updated": "16/02/2019", 
            "name": "Fifteen-NX", 
            "license": "GPLv3", 
            "title": "Fifteen NX", 
            "url": "https://github.com/Manurocker95/FifteenNX/releases", 
            "description": "Fifteen Puzzle Game ", 
            "author": "Manurocker95", 
            "changelog": "v1.0 \\n\\nInitial Release.", 
            "screens": 0, 
            "extracted": 23524, 
            "version": "1.0", 
            "filesize": 16571, 
            "details": "Fifteen Puzzle game for the Switch.\\n\\nNote : No info provided from the author.", 
            "app_dls": 378, 
            "md5": "0099bcd4429bb66d4790943e44110794"
        }, 
        {
            "category": "game", 
            "binary": "/switch/xrick/xrick.nro", 
            "updated": "13/09/2019", 
            "name": "xrick", 
            "license": "n/a", 
            "title": "xrick", 
            "url": "https://github.com/C0Ck3r/xrick/releases", 
            "description": "xrick switch port", 
            "author": "C0Ck3r", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 8867, 
            "version": "0.0.1", 
            "filesize": 4264, 
            "details": "Instructions\\n\\nWalk through the maps, avoid traps, kill the Bad Guys ... and try to stay alive long enough to accomplish your mission!\\n\\nRick can fire bullets, lay sticks of dynamite, walk, crawl, climb, and also poke walls or Bad Guys with his stick. Poking walls can trigger traps, open doors, etc. although sometime a dynamite stick or a bullet is needed ... go figure. Rick starts with six bullets in his gun, and six sticks of dynamite, as shown by the icons at the top of the screen.\\n\\nControls\\n\\nUse the D-Pad to control Rick and use the following action combinations\\n\\nB+UP = fire a bullet.\\nB+DOWN = lay a stick of dynamite\\nB+LEFT, B+RIGHT = poke a wall (or anything else) with your stick", 
            "app_dls": 1292, 
            "md5": "881941e36d67303de77b6711418dd3a3"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/psnes/psnes.nro", 
            "updated": "12/09/2023", 
            "name": "psnes", 
            "license": "n/a", 
            "title": "pSNES", 
            "url": "https://github.com/Cpasjuste/pemu/releases", 
            "description": "A Snes9x port", 
            "author": "Cpasjuste", 
            "changelog": "6.7.1\\n\\ncommon: cleanup media loading code\\ncommon: add unknown files even if it doesn't exist in gamelist.xml\\ncommon: change menus items position\\ncommon: fix games paths starting with ./\\ncommon: fix medias paths with recalbox gamelist.xml format\\ncommon: add ability to use custom gamelist.xml file in roms folders, overriding embedded (romfs) gamelist.xml\\ncommon: add SHOW_AVAILABLE menu option to hide missing files/roms/systems from gamelist (restart required)\\npsnes: bump to latest git revision (153965e5f2fbb0b638868ac3fa89ff8b0363d22c)\\n\\n6.6\\n\\ncommon: fix adding favorites in some cases\\ncommon: revert roms paths to default if not available\\n\\n6.5\\n\\npgen: fix hidden roms when file extension len is 2 (switch/vita/ps4)\\nvita: fix fps counter\\npgen: fix sram loading\\ncommon: disable config overwrite by default\\ninput: fix inputs not always cleared before processing\\npgen: fix emulation for roms size > 8MB\\npnes: remove load_archive hacks (use libarchive)\\npnes: use 0ldsk00l repo\\nlinux: hopefully fix missing shared libaries\\n\\n6.4\\n\\npgen: check for missing mega-cd bios on loading\\npgen: save per game mega-cd backup ram\\npgen: fix state saving (vita)\\npgen: fix scd_bram_cart.brm size\\npgen: add sram saving support\\npsnes: remove deprecated high res option\\npsnes: add AUDIO_SYNC option (on: perfect audio, off: minor audio stuttering in favor of fps)\\nvita: add more optimisations flags (improve fps)\\nvita: add WAIT_RENDERING option (improve fps but not working with effects)\\ncommon: fix wrong keys assignment in help bar (hopefully)\\ncommon: improve audio handling\\n\\n5.2\\n\\ncommon: fix audio sync (50hz roms in psnes/pnes and a few games like seiken densetsu 3)\\ncommon(skins): make menu text outline bigger\\ncommon(skins): fix fonts vertical positions\\ncommon: fix font padding and outline position\\ncommon: update gamelists (move to emulationstation format, lower memory usage)\\npfbneo: fix some games detected as clones (X-Men - Konami, ...)\\nswitch (pnes/psnes): update romlist help texture\\nswitch: fix single joycon mode for new c2d input (thanks R-YaTian)\\nlinux: add buttons gfx, enable some joystick buttons (wip)\\ncommon: general improvements to enhance the user's experience...\\n\\n5.1\\n\\npnes/psnes: disable auto aspect ratio scaling mode\\npnes/psnes: improve scaling\\npsnes: fix 50hz audio\\n\\n5.0\\n\\nfbneo: bump core to git rev e44cd75\\nfbneo: add system switch with fire buttons 5-6 (L/R)\\ninput: add menu1 and menu2 keys config option\\nupdate all databases\\nadd crt-geom-flat (for selected systems)\\nadd ps4 support\\nmany changes...\\n\\n4.4\\n\\npnes: update for latest pemu changes\\npfbn: add nes console support\\npfbn: update fbneo core to commit 89f2b6d\\nall: add \"big_preview\" skin\\nall: romlist: fix lower/upper cases sorting\\nall: romlist: don't filter on file extension, show any files in roms folder\\nall: load previews from default folders even if the game do not exist in database (\"media/mixrbv2/.png\", \"media/video/.mp4\")\\nall: add \"no preview\" image when no preview found\\nall: add a few effects to preview images/videos\\nall: further improvements to overall system stability and other minor adjustments have been made to enhance the user experience\\n\\n4.3\\n\\npsnes: fix audio crackling\\npsnes: hide unneeded options from options menu\\npsnes: allow listing unknown files in rom listing\\npsnes: add BLOCK_INVALID_VRAM option\\npsnes: add TRANSPARENCY option\\npsnes: add DISPLAY_MESSAGES option\\npsnes: add FRAMESKIP, TURBO_MODE and TURBO_FRAMESKIP options\\npsnes: allow frameskip on switch, while not really needed...\\npsnes: update snes9x core to latest version (03/31/2020, 432fc08498b33190a41ae659c3c5fccbeb5b8b3e)\\npsnes: include all pFBN changes since last pSNES release (a lot)\\nall: add SHOW_REAL_NAMES ui option to show zip names (or fbn names) instead screenscraper name in rom listing\\nall: lower videos previews size (1/2 size, 20 seconds instead 36).\\n\\n3.4\\n\\nupdate to latest snes9x git (2019-03-28)\\nfix save states loading\\nuse bigger font size for menus\\nfix crash in some games (cool world...)\\nfix uppercase roms not detected\\n\\n3.1\\n\\nskins: use zipped skins (put zipped skins in \"skins\" directory)\\nskins: add skin selection to main options menu\\nskins: change \"skin\" path to \"skins\"\\nskins: change \"ROM_ITEM\" name/type to \"TEXT\"\\nskins: add \"color_missing\", \"color_not_working\" and \"highlight_use_text_color\" options to \"ROM_LIST > TEXT\" skin config\\noptions menu: set states options menu at the first place, for easier in game access\\nstates menu: fix bug to return to main menu with back button\\nstates: allow loading a rom with it's state from the main rom menu\\nstates menu: add tween position for a better effect\\nswitch: input: use joystick click/press for either start (left joycon) or select (right joycon) on single joycon mode\\n\\n\\nUses OpenGL now! New libretro shaders as well", 
            "screens": 0, 
            "extracted": 43557, 
            "version": "6.7.1", 
            "filesize": 15215, 
            "details": "Installation\\n\\ncopy 'psnes' directory to '/switch/' directory on sdcard\\ncopy roms to '/switch/psnes/roms/' directory on sdcard\\n\\nInformation\\n\\n\\npSNES 'should' work on any firmware (based on libnx and snes9x.git)\\npSNES actually support save states, 2x, 3x, fit, fit 4/3 and fullscreen hardware linear scaling and a simple (but nice?) ui.\\npSNES ui support titles images (png), named as the rom name with png extension instead zip, in the 'previews' directory (to be created if needed).\\npSNES does not actually support high resolution games...\\npSNES use a database file for rom handling. You'll need a 'db.xml' file located alongside the application. The current 'db.xml' file comes from 'Hyperspin' website, and only contains USA 'good rom / no-intro' set. Your rom files must be zipped and named as per this set. You'll find in the 'database' directory this file as backup/reference (Super Nintendo Entertainment System - hyperspin.xml) + a complete set from dat-o-matic (datomatic.no-intro.org). Rename this file to 'db.xml' and (re)place it in the same directory as the executable to use this one. You can make your own database file with filtering from this great website.", 
            "app_dls": 69183, 
            "md5": "9ef25dc4250fb025f36d9517d375b688"
        }, 
        {
            "category": "game", 
            "binary": "/switch/manaplus/manaplus.nro", 
            "updated": "01/05/2020", 
            "name": "manaplus", 
            "license": "GPLv2", 
            "title": "ManaPlus", 
            "url": "https://github.com/Cpasjuste/ManaPlus/releases", 
            "description": "The Mana Plus Client", 
            "author": "Cpasjuste", 
            "changelog": "n/a", 
            "screens": 4, 
            "extracted": 110712, 
            "version": "v1.9.3.23-1", 
            "filesize": 93369, 
            "details": "ManaPlus is a free OpenSource 2D MMORPG client for Evol Online, The mana world and similar servers.\\n\\nAt the moment ManaPlus is only fully supported client by Evol Online, The mana world, Land of fire (non free content) and other games.\\n\\nManaPlus supports tmwAthena, evol, hercules.\\n\\nMore information can be found on the source link and also @ http://manaplus.org/features", 
            "app_dls": 573, 
            "md5": "1724df5f5e9efff13251d9c128f391ce"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/untitled/untitled.nro", 
            "updated": "29/04/2023", 
            "name": "Untitled", 
            "license": "MIT", 
            "title": "Untitled", 
            "url": "https://github.com/ITotalJustice/untitled", 
            "description": "Batch title-uninstaller", 
            "author": "ITotalJustice", 
            "changelog": "1.3.0\\n\\nlists corrupted games\\noption to stop scanning for games and exit early\\noption to select all games for deletion\\nminor ui improvements\\nadd missing assets folder", 
            "screens": 0, 
            "extracted": 651, 
            "version": "1.3.0", 
            "filesize": 244, 
            "details": "Select multiple titles at once, and delete them with a click of a button.\\n\\nMuch faster than deleting them one-by-one via Data Management.", 
            "app_dls": 9405, 
            "md5": "82b9a98d127dec9cf233553201e39b77"
        }, 
        {
            "category": "game", 
            "binary": "/switch/pinballnx/pinball.nro", 
            "updated": "25/04/2021", 
            "name": "pinballnx", 
            "license": "MIT", 
            "title": "pinballnx", 
            "url": "https://github.com/minkcv/pinballnx/releases", 
            "description": "Pinball Game for Nintendo Switch", 
            "author": "minkcv", 
            "changelog": "1.0\\n\\nUpdated for compatibility with horizon os 10.0.3.\\n\\n0.9\\n\\nNo changes detailed.\\n\\n0.8\\n\\nUpdated table layout\\n\\n0.7\\n\\nNew features, fixes, performance improvements", 
            "screens": 0, 
            "extracted": 10056, 
            "version": "1.0", 
            "filesize": 4401, 
            "details": "A homebrew pinball game for the nintendo switch. Currently a work in progress.\\n\\nTake the joycons off and turn the display to portrait.\\n\\nControls :\\n----------\\n\\nFlippers: L and R\\nPull Plunger: Either Stick Down\\nPause: Minus\\nNew Game: B\\nQuit: Plus", 
            "app_dls": 3121, 
            "md5": "abc4dd213d23e9978e95119b2f23f56f"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Factorial_NX.nro", 
            "updated": "01/06/2023", 
            "name": "FactorNX", 
            "license": "n/a", 
            "title": "Factor NX", 
            "url": "https://github.com/Zamacian/Factorial-NX", 
            "description": "A Nintendo Switch homebrew to calculate", 
            "author": "Zamacian", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 417, 
            "version": "1.0.1", 
            "filesize": 143, 
            "details": "Factorial-NX\\n\\nA Nintendo Switch homebrew to calculate the factorial of a number.\\n\\nBecause 2^63 is the highest number the switch supports, you can't go over 25 factorial.\\nNote that I made this Homebrew only to learn how to use the basics of libnx and isn't really useful.\\nCommands :\\nTo make things easier, let's just say that the number you want to factor is called Jeffrey\\na to add 1 to Jeffrey\\nb to subtract 1 from Jeffrey\\nx or y to set Jeffrey to 0\\nany trigger (r/l/zr/zl) to clear the console\\nMinus (-) to factor Jeffrey\\nPlus (+) to exit the Homebrew\\nEverything else will show you the 'help' menu\\nWhat to know :\\nThe letter shown before the value of the number is what executed the action :\\n(A) means you added 1 by pressing A\\n(B) means you substracted 1 by pressing B\\n(X) or (Y) means you set the number to 0 by pressing X or Y", 
            "app_dls": 80, 
            "md5": "0e4cabb831ce781e0a8435d1d6de4184"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Q3ArenaNX/Q3ArenaNX.nro", 
            "updated": "29/06/2023", 
            "name": "Q3ArenaNX", 
            "license": "GPLv2", 
            "title": "Q3ArenaNX", 
            "url": "https://github.com/faithvoid/OpenArenaNX/", 
            "description": "Quake III Arena (port)", 
            "author": "faithvoid", 
            "changelog": "v0.7.8.1 - Hotfix\\n\\nRe-compiled with the new libNX for newer firmwares!\\n\\nv0.7.8 - Renderer Upgrade\\n\\nAll builds now compile with renderergl2 as default. In my experience this makes a few things look a bit better, might(?) smooth out performance, and futureproofs everything a touch (in case someone wanted to implement a newer renderer engine later down the line).\\n\\nIf upgrading from a previous build, all you need to replace is OpenArenaNX.nro / Q3ArenaNX.nro\\n\\nv0.7.7 - Better Gyro Support\\n\\nGyro now automatically detects whether the user's controller is in handheld or wireless mode and adjusts the axis accordingly. Haven't tested with a pro controller, but would imagine it should work fine, as the fix specifically targets handheld mode. This means apart from finding slightly more natural gyro defaults for both handheld and wireless mode, the end user can enjoy seamless gyro controls between input methods.\\n\\nIf updating an older version, extract to the original folder and replace all files when prompted.\\n\\nv0.7.6 - Basic Gyro Support\\n\\nRewrote fgsfdsfgs's sdl_input_nx.c from ioquake3-nx to reference current HID refactor names, therefore enabling basic gyro support. (albeit technically incomplete due to no automatic switching of yaw axis to yaw/roll between controllers.)\\n\\nGyro can be enabled from the control settings in the main menu. The stock gyro configuration is meant for handheld use, so if you're using a pro/wireless controller you'll have to also type \"/in_gyromouse_yaw_axis 1\" (and if you want to go back to handheld type the last command with a 0 instead of 1). Gyro speed can be adjusted by adjusting the mouse speed.", 
            "screens": 0, 
            "extracted": 10827, 
            "version": "0.7.8.1", 
            "filesize": 4273, 
            "details": "A port of ioquake3 for the Nintendo Switch. Compatible with both controllers (including WIP gyroscope support!) and keyboard + mouse controls! Based off of ioquake3 1.36.\\n\\nInstallation:\\n\\n- Copy baseq3 from a copy of Quake III Arena (demo or full version) to the Q3ArenaNX folder, making sure not to replace any files.\\n- Launch via HBMenu (by pressing R, not album!)\\n- Start fragging!\\n\\nKnown Issues:\\n- Sleep mode will crash the game and potentially Horizon. Still ironing out why this happens, so be cautious.\\n- A small amount of slowdown can happen during really hectic battles in larger maps.\\n- If you switch between controller and keyboard + mouse input mid-match, your camera may start spinning wildly. Just press ESC/+, click with your desired input, then press ESC/+ again and it should resolve it. This might not even be a real bug and might just be my wireless keyboard, but I'm putting it here just to be safe.", 
            "app_dls": 3921, 
            "md5": "20073c797a076c1a05ec6a3bd61b8485"
        }, 
        {
            "category": "game", 
            "binary": "/switch/maxpayne/max_nx.nro", 
            "updated": "14/03/2021", 
            "name": "max_nx", 
            "license": "MIT", 
            "title": "Max Payne Mobile", 
            "url": "https://github.com/fgsfdsfgs/max_nx/releases", 
            "description": "Max Payne portable version.", 
            "author": "fgsfdsfgs", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 7982, 
            "version": "r1", 
            "filesize": 3219, 
            "details": "This is a wrapper/port of the Android version of Max Payne Mobile. It loads the original game binary, patches it and runs it. This is probably not entirely stable yet, so expect issues.\\n\\nThis is a port of the PS Vita version adapted to work on the Switch with AArch64 .so files.\\n\\n\\nYou're going to need:\\n\\n.apk file for version 1.7 (latest version at the time of writing) that includes arm64-v8a libraries;\\n.obb file for version 1.6 or 1.7 (usually located at /sdcard/android/obb/com.rockstar.maxpayne/main.3.com.rockstar.maxpayne.obb).\\nBoth files can be obtained from your phone if you have a copy of the game installed. Both files can be opened or extracted with anything that can extract .zip files.\\n\\nTo install:\\n\\nCreate a folder called maxpayne in the switch folder on your SD card.\\nExtract the contents of the assets folder from your .apk to /switch/maxpayne/.\\nExtract lib/arm64-v8a/libMaxPayne.so from your .apk to /switch/maxpayne/.\\nExtract the contents of the .obb file into /switch/maxpayne/. You can skip all the .msf files except for MaxPayneSoundsv2.msf and any extra languages that you want.\\n\\nNotes\\n\\nThis will not work in applet/album mode: even though MEMORY_MB can very well be lowered to 232MB in config.h, there's still 0MB left after the newlib heap is allocated. This can probably be fixed later. For now use a game override or NSP hbmenu.\\n\\nThe port has an extra config file, located at /switch/maxpayne/config.txt. It is created when you first run the game and allows you to tweak some internal settings. For more detailed descriptions of said settings check the wiki article.\\n\\nThe game will show an error message if it detects that anything is wrong. Please read those and check the relevant parts of your setup.\\n\\nIf the error says Could not find symbol ..., that likely means you have the wrong .apk or .so file. You need version 1.7, others will not work. Make sure also that you've extracted libMaxPayne.so from the arm64-v8a subfolder.\\n\\nIf the game crashes on startup, please post an issue with your last crash report attached.", 
            "app_dls": 6997, 
            "md5": "25152496c865485e4b3f103d624f36c6"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/BiggestDump/biggestDump.nro", 
            "updated": "22/04/2020", 
            "name": "BiggestDump", 
            "license": "GPLv3", 
            "title": "BiggestDump", 
            "url": "https://github.com/J-D-K/biggestDump/releases", 
            "description": "Update Dumper", 
            "author": "J-D-K", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 1057, 
            "version": "1.0.0", 
            "filesize": 533, 
            "details": "Open Source Switch Update Dumper based on JKSV's code.\\n\\nInfo\\nbiggestDump will dump pending updates from your Nintendo Switch's NAND to SDMC. Once it is complete, you can use ChoiDujourNX to install them without burning your fuses. Update data is dumped to sdmc:/Update/.", 
            "app_dls": 1083, 
            "md5": "1edeea1f0c6ef7443ab29cff1a9bedcf"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/bean-controller-checker/bean-controller-checker.nro", 
            "updated": "05/11/2021", 
            "name": "bean-controller-checker", 
            "license": "GPLv3", 
            "title": "BeanNX Button Checker", 
            "url": "https://github.com/TransKat/bean-controller-checker/releases", 
            "description": "Allows you to test buttons on your NX controllers.", 
            "author": "TransKat", 
            "changelog": "2.1.0\\n\\nPreparations for BeanNX Stick Checker.\\nRemoved stick position checking\\nSwitched from + and - to exit to just +\\n\\n2.0.0\\n\\nThanks to Slluxx, we now have stick tracking. I may implement a better UX for stick tracking though.\\nTo activate it, press both sticks simultaneously. To exit stick mode, do the same.\\n\\n1.1.1\\n\\nIt now takes you to the home menu while killing the app\\n\\n1.0.1\\n\\nAdded a new icon", 
            "screens": 0, 
            "extracted": 467, 
            "version": "2.1.0", 
            "filesize": 126, 
            "details": "A simple homebrew app that allows you to check the buttons on your NX controller. No setup required, just download and launch.", 
            "app_dls": 1593, 
            "md5": "55017e1d5d8146c6ebbfa984bb8ed965"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/ppsspp/PPSSPP_GLES2.nro", 
            "updated": "13/03/2020", 
            "name": "ppsspp", 
            "license": "GPLv2", 
            "title": "PPSSPP Standalone", 
            "url": "https://github.com/m4xw/ppsspp/", 
            "description": "PPSSPP Standalone Switch Public Beta", 
            "author": "m4xw", 
            "changelog": "b475e73\\n\\nhttps://github.com/m4xw/ppsspp/commit/b475e73563e618992c6bf78847d7433b8892914b\\n\\n1.9.0\\n\\nFlicker fixed in God of War that appeared with newer drivers for Mali GPUs (#12224)\\nImprove performance of God of War on Vulkan (#12242), implement built-in GPU profiler (#12262, #12266)\\nVertex range culling fixed on ARM Mali (#12227)\\nStarted to improve VFPU precision, resulting so far in a fix for the long standing Tekken 6 leg shaking problem (#12217)\\nFixed a VFPU precision snafu on ARM64, fixing disappearing officers in Warriors Orochi (#11299) and some problems in Tomb Raider (#11179).\\nVulkan is the default again on Android versions newer than Pie\\nFix various homebrew store issues\\nGPU pause signal handling fixed, fixing some hangs in Bleach and Armored Core games (#12160)\\nAudio sample rate conversion handling fixes (#12147)\\nSome Vulkan optimizations (pre-rotation (#12216), perf fix in Metal Gear Acid, etc)\\nMultiple fixes for the UWP build (#12036, others)\\nMP3 playback fixes (#12005)\\nAudio in Motorstorm: Arctic Edge fixed by returning errors correctly (#12121)\\nAudio glitches in Final Fantasy Tactics fixed (#9956)\\nCamera display in Invizimals fixed (#12278, #8521)\\nAdded hotkeys for texture dump and replace (#11938)\\nAdded Visual Studio 2019 support. Windows XP is no longer supported (#11995, others)\\nFixes for video capture (#12069)\\nAdded a separate sound volume for alternative speed (#12124)\\nImproved mouse control (Windows only) (#12173, #12176)\\nSupport for installing texture packs and ISOs from zips (#12175)\\nRight analog support for touch controls (only used by patched games and some HD remasters) (#12182)\\nFixed strange vehicle behavior in MGS:PW (somehow) (#12342)\\nPorted to the Nintendo Switch by m4xw! Builds available on m4xw's Patreon.\\n\\n\\n1.8.0d\\n- Adds support for PSP Homebrew App Store\\n- Adds multiplayer!\\n\\n1.8.0b\\n-Fixed \"Home\" Button in PPSSPP (Not the Switch Home button)\\n-Fixed in-game menu continue after Settings open (might not properly refresh some GPU settings, but said refresh caused the Issue)\\n-Fixed the 10th launch Issue\\n-Fixed CurrentDirectory (you might need to manually edit the ini if it isn't created new)\\n-Fixed Recent launched games (clear old entries!)\\n-Bundled controls.ini / Drag & Drop Bundle (careful if you don't want to lose your own mappings)\\n-Added \"fake GLES2\" -> Performs way better in GTA's, however breaks many other games if internal res > 1x\\n-Added GLES3 build -> Less Bugs, about same perf as libretro port\\n-Added Browser applet to some links in the Menu (because why not)\\n-Enabled NXLink Support (for dev/debug)\\n-Updated again, now one NRO resides in /switch and another in /switch/ppsspp, essentially allowing to show both NRO's in the hbmenu\\nIf it still show's the PPSSPP folder in hbmenu, make sure that theres only 1 NRO in /switch/ppsspp (it doesn't matter which).\\nBoth access assets, config and flash from /switch/ppsspp\\n-GLES3 has been replaced by GL (GL is superior in every way)\\n-Re-worked JIT, Masking is no longer required, thus there should be no more JIT bugs that desktop standalone / Lakka don't have (this change will be added to libretro too next week)\\n-However doing this we have less space to work with due to a libnx bug (virtmem stopping working), so it might crash if you launch ~15 games in a row without returning to hbmenu / home menu.\\nThat number will vary depending on how much memory the jit buffer allocate depending on the Game\\n-Add some other JIT sanity checks + fixes\\n-The GL version should be pretty much on par with standalone- while the GLES2 ver has a few more gfx Issues but better perf in some games (most of them are GTA's)\\n-General system stability improvements to enhance the user's experience.\\n", 
            "screens": 0, 
            "extracted": 52112, 
            "version": "b475e73", 
            "filesize": 23729, 
            "details": "PPSSPP Standalone Switch Public Beta by m4xw\\n============================================\\n\\nThis is the first Standalone Release for PPSSPP.\\nIt's based on my libretro port with some few distinctions:\\n\\n-Includes a GLES2 and GL version (use GLES2 for GTA's or other troubling games, otherwise GL version is always recommended as it's far more stable and bug free).\\n-JIT improvements (should now work on all Horizon version), masking is no longer required, thus JIT masking bugs are a thing of the past (will be backported to the libretro ver. this week).\\n-All config files reside in /switch/ppsspp/, the path can not be changed for the time being.\\n-You can copy your PPSSPP files from /retroarch/cores/savefiles/PPSSPP/ (savefiles are compatible, savestates are NOT, however I will add a export option to the Core soon-ish).\\n\\nNote:\\n\\n-Due to a toolchain Issue, starting like 15~ games in a row might lead to a crash, your mileage might vary depending of the number of JIT buffer allocations\\n\\nNotes\\n============================================\\n-If you are using ANY method of loading PPSSPP OTHER than Atmosphere's title redirection feature, DO NOT report issues that you encounter.\\n-Don't use NSP's.\\n-After upstreaming, this port will likely become the official\\n\\nSupport\\n============================================\\nSpecial thanks to hrydgard for everything he has done for the PPSSPP Project.\\n\\nIf you want to support his work, consider buying PPSSPP Gold https://central.ppsspp.org/buygold even if you don't use it!\\n\\nMy Patreon: https://www.patreon.com/m4xwdev\\n\\nLinks\\n============================================\\nSwitch Port Github: https://github.com/m4xw/ppsspp/\\nUpstream Github: https://github.com/hrydgard/ppsspp", 
            "app_dls": 113214, 
            "md5": "c0199ccb2bccdb7bd63a43c9ee1abd9a"
        }, 
        {
            "category": "legacy", 
            "binary": "/switch/AmiiSwap/AmiiSwap.nro", 
            "updated": "19/04/2020", 
            "name": "Amiiswap", 
            "license": "GPLv3", 
            "title": "AmiiSwap", 
            "url": "https://github.com/FuryBaguette/AmiiSwap/releases", 
            "description": "GUI Amiibo Manager", 
            "author": "FuryBaguette", 
            "changelog": "v1.0\\n\\nNo more settings file editing, setup everything easily and directly inside AmiISwap !\\nComplete UI rework, new menus and design !\\nBetter icon support for games and amiibos. (png, jpeg, jpg) Place your game icon images inside sd:/switch/AmiISwap/game_icons, place your amiibo icons inside sd:/emuiibo or sd:/switch/AmiiSwap.\\nAdded Randomize UUID\\nAmiibos are now sorted\\nInfo about the selected amiibo\\nEmuiibo emulation toggling\\nBug fixes\\nIf you're coming from 0.2 or an older version, please use Images -> Rename Images in AmiiSwap to get your icons on the new version (because of a new system)\\n\\nv0.2\\n\\nAdded icon support for games and amiibos. Place your icons as amiibo.png inside the corresponding amiibo folders. For the game icon, place it inside the /switch/AmiiSwap folder as game.png.\\nUI changes\\nSupport the new emuiibo layout for amiibos\\nAdded a settings files. It's important and needs setup, read the README\\n\\nv0.1\\n\\nThis is the first release of emuiibo, still a beta.", 
            "screens": 0, 
            "extracted": 9362, 
            "version": "1.0", 
            "filesize": 3693, 
            "details": "THIS APP LACKS SUPPORT FOR THE LATEST FIRMWARES AND THE DEVELOPER HAS CEASED PROGRESS ON THIS HOMEBREW. FIRMWARES ARE SUPPORTED UPTO AND INCLUDING 8.1.\\n\\nMenus\\n\\nAmiibos: This menu is used to manage and use amiibos\\nEmuiibo: Allows you to change emuiibo's state\\nImages: Find, place, delete images used for amiibo icons\\nSelected amiibo: Shows the currently activated amiibo and some info\\nUser Manual: Basicly this readme inside AmiiSwap\\nAbout: Information about AmiiSwap\\nAdding Categories and Managing Amiibos\\nGo to the Amiibos menu in the main menu of AmiiSwap\\nPress X to add a new category -> Enter a name\\nPress Y to manage selected category's amiibos\\nWhen managing amiibos, simply click on amiibos to add/remove them from the category\\n\\nHow to use\\n\\nGo to the Amiibos menu in the main menu of AmiiSwap\\nSelect a category then a amiibo, from here press A to use the amiibo or press X to toggle Random UUID\\nIf you want to use emuiibo combos for emulation, quit here and use emuiibo normaly. OR\\nGo to the Emuiibo menu in the main menu of AmiiSwap\\nSelect Enable to have emulation activated all the time, Enable once to emulate only once, Disable to use original combo system\\n\\nHow to navigate\\n\\nUse the dpad or the left stick to navigate menus, right stick to navigate faster.\\nUse A to select\\nUse B to go back\\nUse X to add a new game in the Amiibos menu\\nUse Y to manage amiibos of a selected category", 
            "app_dls": 23251, 
            "md5": "252989e314bb10bfbbd2fee14d800247"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/JCTB.nro", 
            "updated": "28/03/2020", 
            "name": "JCToolbox", 
            "license": "n/a", 
            "title": "JCToolBox", 
            "url": "https://github.com/CompSciOrBust/JCToolBox/releases", 
            "description": "Joycon ToolBox", 
            "author": "CompSciOrBust", 
            "changelog": "0.2\\n\\nThis release is a rewrite that adds config support.", 
            "screens": 0, 
            "extracted": 794, 
            "version": "0.2", 
            "filesize": 332, 
            "details": "A Switch homebrew for setting joycon colours.\\n\\nConfig file\\n\\nThe config file should be placed in sdmc:/config/JCTB.cfg\\n\\nThe structure of the config file is Colour set name Left joycon body colour Left joycon buttons colour Right joycon body colour Right joycon buttons colour\\n\\nAll colours should be in RGB hexadecimal format.", 
            "app_dls": 1732, 
            "md5": "b34ef475d4435dbc411ecc16160a037a"
        }, 
        {
            "category": "tool", 
            "binary": "none", 
            "updated": "16/12/2024", 
            "name": "TestApp", 
            "license": "none", 
            "title": "TestApp", 
            "url": "https://fortheusers.org", 
            "description": "Testing App", 
            "author": "pwsincd", 
            "changelog": "n/a", 
            "screens": 1, 
            "extracted": 577, 
            "version": "1.0", 
            "filesize": 0, 
            "details": "Test 02", 
            "app_dls": 121, 
            "md5": "c8a2ee60a30283424ce0c84c7a7801f0"
        }, 
        {
            "category": "game", 
            "binary": "/switch/devilutionx-switch/devilutionx.nro", 
            "updated": "04/09/2024", 
            "name": "DevilutionX", 
            "license": "The Unlicense", 
            "title": "devilutionX", 
            "url": "https://github.com/diasurgical/devilutionX/releases", 
            "description": "Diablo build for modern operating system", 
            "author": "diasurgical", 
            "changelog": "1.5.3\\n\\nBug Fixes\\nMultiplayer\\nResolved validation multiplayer errors.\\nTranslations\\nAdded Hungarian translation.\\nAdded Turkish translation.\\nStability / Performance / System\\nFixed issue where a line is repeated in the info panel.\\nFixed errors when converting Hellfire saved games.\\n[Miyoo Mini] Update integration.\\n[Android] Update integration (now requires Android 5.0).\\n[Android] Improved the data import dialog.\\n[Android] Game now runs full screen on devices with a notch.\\n[Windows] Fix non-English TCP error messages.\\nBugfixes for original Diablo bugs\\nGameplay\\nFixed item repairs with multiple gold piles.\\nKnown Issues\\nSome builds (like Mac) are not ready yet and will be uploaded over the next couple of days\\n\\n1.5.2\\n\\nMultiplayer\\nUnable to join game due to invalid player data\\nTranslations\\nImprove rendering of Chinese/Japanese/Korean texts\\nGameplay\\nHellfire items not saving their identified state\\nStability / Performance / System\\nStash corrupting when converting a hero between Diablo and Hellfire\\nAmiga: Incorrect rendering of things behind transparent elements\\nAndroid: Game locking up when switching sound output\\nFedora: Unable to locate BZIP2\\nManjaro: Unable to locate libsodium\\nXbox: Game crashing unexpectedly\\nXbox: Improve performance\\n\\n1.5.1\\n\\nFeatures\\nMultiplayer\\nValidate player stats\\nUpdate the pvp arenas\\nRename \"Loopback\" to \"Offline\"\\nStability / Performance / System\\nMove hp/mana display and item graphics to gameplay options\\nValidate properties when reloading items\\nDemomode: Improve replay stability\\nUpdate Discord link\\nDisplay save game confirmation\\nReduce ram usage\\nTranslations\\nUpdate Simplified Chinese translation\\nUpdate French translation\\nUpdate German translation\\nUpdate Greek translation\\nUpdate Japanese translation\\nUpdate Korean translation\\nUpdate Portuguese translation\\nUpdate Spanish translation\\nUpdate Swedish translation\\nUpdate Ukrainian translation\\nBugfixes\\nGameplay\\nBeing able to enter Lazarus' chamber before opening the portal\\nBook requirements not updating\\nSome monsters not walking\\nMissiles not traveling the full distance at some angles\\nDiablo: Incorrect level 4 layout when the Magic Banner quest is active\\nHalls of the Blind not being completed by picking up the amulet\\nShareware: Bucklers not dropping\\nPlayer animation stuttering\\nMultiplayer\\nPotions dropped by Divine shrines not being synced\\nPlatforms\\nLinux: Add sdl-image dependency for the deb package\\nLinux: Include discord dependency\\nXbox One: Missing assets\\nGraphics / Audio\\nIncorrect cursor rendering\\nIncorrect outlines at the right edge of the screen\\nNPC speech continuing after starting a new game\\nCorrect various font rendering issues\\nHide the hit indicator when only one player is in the game\\nIssues with flashing lights\\nFloating number still appearing after death\\nMisaligned automap\\nControls\\nInconsistencies with placing items in to the stash\\nGamepad: Being stuck in dialogs\\nGamepad: Unable to use some scrolls directly\\nStability / Performance / System\\nUnable to playback new demo files\\nVarious crashes\\nBugfixes for original Diablo bugs\\nGameplay\\nDurability overflowing when reloading items\\nTeleporting onto an occupied tile\\nRight-click during dialogs casts spells\\nGraphics / Audio\\nCursor jitter when interacting with the inventory\\nBroken lava tiles\\nControls\\nInconsistencies with placing items in to the inventory\\nBugfixes for original Hellfire bugs\\nGameplay\\nWarping onto a solid tile\\nKnown issues\\n1.5.0 save games on level 4 with Snot Spill will need to progress the game before updating because of a bug in that version\\n\\n1.5.0\\n\\nFeatures\\nGameplay\\nFloating damage numbers\\nOption to auto-pick up oils\\nQuest items now drop based on difficulty\\nMultiplayer\\nAll quests can now be played, enabled from settings menu\\nAdd chat commands, use /help for options\\nAdd PvP arenas that can be accessed via /arena #\\nInspect other players' items using /inspect <name>\\nHellfire: Disabled The Cornerstone of the World\\nDraw hostile players' names in red in the chat panel\\nPlatforms\\nAdded support for the original Xbox\\nAdded (experimental) support for RG99\\nAdded support for Android TV\\nSupport demo playback on SDL1 versions\\nAndroid: Support loading data from external storage\\nAndroid: Do not speed up game after suspending if playing alone\\nProvide virtual resolutions for systems with only one native resolution\\nWindows: Digitally signed executable\\nGraphics / Audio\\nOption to show item graphics in stores\\nAdded map in town\\nAdd widescreen load screens (thanks to @Chance4us)\\nShow cast animation in town\\nVarious text rendering improvements\\nUse decimal separators for gold and XP\\nMonsters end their invisibility on death\\nDurability icon gradually changing to red\\nMake the ground color of small rejuvenation potions distinct\\nIndicate on which difficulty a hero has defeated Diablo\\nOnly display resolution height when FitToScreen is enabled\\nMore fluid lighting updates when moving\\nImprove the monster HP bar for some edge cases\\nProvide sound cue when gold is auto-placed into the open inventory\\nColor inventory slot based on item quality\\nAdd setting for choosing a different audio resampler\\nSupport for recoloring heroes using trn-files\\nControls\\nAdjust the info panel descriptions based on the input device\\nGamepad controls can now be mapped\\nNew options for keyboard mapping\\ngamepad/touch: Improve menu navigation\\ngamepad: Autodetect button layout\\nSupport mouse back button in menus\\nDo not target monster when casting Heal Other and Resurrect\\nImprove logic for belt auto-refill\\nTranslations\\nUpdate French translation\\nUpdate Italian translation\\nUpdate Japanese translation\\nUpdate Polish translation\\nUpdate Spanish translation\\nUpdate Ukrainian translation\\nSynchronize names of existing items with the current game language\\nXbox One/Series: Include translations\\nStability / Performance / System\\nCreate submenus for setting groups\\nReduce RAM usage\\nPerformance improvement\\nFrame skipping on low end systems\\nAdd --lang for specifying the language\\nSetting for picking audio device\\nDate based screenshot names\\nBugfixes\\nGameplay\\nAttack speed not always being accurate for specific combinations of effects and actions\\nTelekinesis respects the Disable Crippling Shrines setting\\nDon't consume mana when double casting Mana Shield\\nResolve a few bugs and edge cases with the stash\\nHellfire: Books from Adria's shop morphing\\nPetrified monsters shifting position when hit after loading a save game\\nMultiplayer\\nItems held by cursor lost due to lag indicator\\nItems lost due to various desync issues\\nFix multiple desync issues\\nDon't show hostile players on the map\\nPlayer animations sometimes not being in sync\\nBetter handling of latency\\nPlatforms\\nWindows: Fix ZeroTier always failing for Unicode usernames\\nVita: Items lost when tapping outside the inventory\\nFix gold withdrawal on SDL1 versions\\nTranslation support on BE systems\\nmacOS/iOS translate system texts\\nGraphics / Audio\\nTop of screen not being rendered at some resolutions\\nCorrect alignment of lightning and inferno\\nMake item labels take UI into consideration\\nAdria's \"you have nothing to recharge\" being misalignment on an empty list\\nMonsters sometimes not being rendered\\nLighting missing for some areas after loading a saved game\\nHellfire quests being removed from the quest log when completed\\nControls\\ntouch: Missing buttons on low end devices\\nHero sometimes not willing to drop an item even when there is still room on the ground\\nStability / Performance / System\\nAllow using the built-in screenshot function during text input\\nVarious crashes\\nA rare freeze when loading hell levels\\nVarious issues with cursor rendering\\nSome additional validation of items when converting saves from Hellfire to Diablo\\nBugfixes for original Diablo bugs\\nGameplay\\nSeveral issues that would cause missiles to miss when they shoudn't\\nSome wall tiles not blocking missiles and vision\\nThe player can spawn in an incorrect location on some levels\\nTown portal not always returning to the correct quest level\\nMissing the extra stats at level 50\\nGuardian not calculating its damage correctly\\nItems lost when triggering a portal while picking them up\\nDiablo not giving the intended XP on Hell difficulty\\nFireball/Elemental not doing damage when monster is not in line of sight\\nLightning spell being able to pass through some walls\\nPrevent double casting of spells\\nUnable to pick Golem spawn location when right-clicking the scroll\\nLow quality items on quests after using a town portal\\nMonsters on Nightmare and Hell having too little HP\\nMonsters being immune to non-player missiles\\nStairs up to level 6 not working sometimes\\nThe Deadly Hunter bow not dealing the correct damage\\nPoisoned Water not appearing in the quest log if discovered before talking to Pepin\\nCasting spells during level transition will target the old position\\nSpell remaining unavailable after using a stone shrine until reequipping the staff\\nUnique monster light being left behind when they are removed\\nFast and faster hit recovery stacking\\nCamera shaking when loading a save game after Diablo's death\\nCorrect calculation for max chages lost with when using the recharge skill\\nNot getting XP after damaging a monster if it dies from a trap\\nFire Arrows causing monsters to stop healing\\nMultiplayer\\nTrapped doors rearming themselves when returning to a level\\nResolve some sources of dsync\\nGraphics / Audio\\nAdd scrollbar to help window\\nShow portal animation in town\\nFix inconsistent lighting on quest levels\\nPetrified monsters turning to face the attacker\\nDisplay correct Armor Class in Char Panel\\nMinor rendering bugs in UI panels\\nCenter 2x2 items that go in 2x3 slots\\nBroken corners on some cathedral levels\\nLight smearing when walking in certain directions\\nUnique monsters light not always following the monster\\nMonster sliding after having been stone cursed\\nPlayer moonwalking when talking to monsters\\nTavern Sign playing the wrong sound when dropped on the floor\\nControls\\nHelp panel staying open while talking to NPCs\\nStability / Performance / System\\nMinor stability issues\\nOptic Amulet and Arkaine's Valor sometimes being misaligned\\nBugfixes for original Hellfire bugs\\nGameplay\\nPrevent oil of death damage wrap around\\nReflected damage sometimes being too low\\nMultiplayer\\nDesync in Nest when cow quest is enabled\\nGillian saying the grave quest start line multiple times\\nBeing unable to pick up quest items if you didn't start the game\\nQuest going out of sync\\nGraphics / Audio\\nBuggy lighting in Nest and Crypt\\nDescription of jester's item saying 500% instead of 600% damage\\nTypos in subtitles\\n\\n1.4.1\\n\\nPlay gold sound effect when depositing in stash\\nAdd setting for showing item labels\\nAdd setting for zoom by default\\nUpdate Chinese Translation\\nUpdate French Translation\\nUpdate Japanese Translation\\nUpdate Polish Translation\\nUpdate Russian Translation\\nUpdate Ukrainian Translation\\n\\n1.4.0\\n\\nAdded support for Ukraine\\nAdded a stash at Gillian's house\\nRemove missile limit\\nAdded settings menu\\nAdded xp share indicator to monster health bar\\nAdded option to see exact health/mana\\n\\n1.3.0\\n\\nAdded multiplayer support to Nintendo Switch\\nAdded built in support for ZeroTier (no need for port forwarding, no need for an extra application)\\nAdded support for unencrypted public games\\nAdded auto discovery of public games over ZeroTier\\nShare map exploration (in a different color than your own exploration)\\nNintendo Switch no longer reacts to touch events\\n\\nhttps://github.com/diasurgical/devilutionX/releases/tag/1.3.0\\n\\n1.2.1\\n\\nBugfixes\\nGameplay\\nGharbad not having to go out of vision before progressing his quest\\nDiablo: Items with negative AC morphing in multiplayer\\nDiablo: Griswold and Wirt selling unusually expensive items\\nDiablo: Gold not going directly to inventory\\nHellfire: Some monsters having lower than intended HP\\nHellfire: Auric Amulet not taking effect in most scenarios\\nGraphics / Audio\\nWindows: Glitchy audio\\nControls\\nVita: Inability to edit hero name on the creation screen\\nStability / Performance / System\\nQuest panel crashing the game for some quests\\nWindows: Some systems getting a sensor permission error\\nWindows: Stability issues and item morphing in Hellfire\\nBugfixes for original Hellfire bugs\\nGameplay\\nRage/Search/Lightningwall not factoring in the hero level for the first player\\nSparkling Shrine dealing an incorrect amount of damage\\nItems with negative AC morphing in multiplayer\\n\\n1.2.0\\n\\nhttps://github.com/diasurgical/devilutionX/releases/tag/1.2.0\\n\\n1.1.0\\n\\nFeatures\\nProper widescreen (and other aspects) support\\nSelect difficulty in single player (remembered in the save game)\\nAdjustable game speed in-game\\nV-sync can now be disabled in the ini\\nBetter line drawing function used for the automap\\nSupport for loading custom Hell level maps\\nMake all objects and monsters available to custom maps\\nAdded support for joining a game via hostname instead of IP\\nBugfixes\\nYou can now enter and exit fullscreen also when the game is paused\\n[Amiga] Fix double-clicking in menu\\nOriginal Diablo bugs\\nFix some monsters AC and to-hit values on Nightmare/Hell ending up as 0\\nFix player base block resetting to 0 after loading a save game\\nCorrectly render trees in front of the player\\nFully render sprites that are larger than the floor tiles\\nFix objects disappearing when walking on the opposite wall\\nDuping via belt has been fixed\\nCorrectly detect if the mouse is clicking the world or UI in some areas\\nMinor typography corrections\\nCorrected name of Chamber of Bone in automap\\nCorrectly align the inventory slots", 
            "screens": 0, 
            "extracted": 21188, 
            "version": "1.5.3", 
            "filesize": 9131, 
            "details": "Joycon Controls\\n- Left analog or D-Pad: move hero\\n- A: attack nearby enemies, talk to townspeople and merchants, pickup/place items in the inventory, OK while in main menu\\n- B: select spell, back while in menus\\n- X: pickup items, open nearby chests and doors, use item in the inventory\\n- Y: cast spell, delete character while in main menu\\n- L: use health item from belt\\n- R: use mana potion from belt\\n- ZL: character sheet (alt: Start + L1 or \u2190)\\n- ZR: inventory (alt: Start + L2 or \u2192)\\n- Left analog click: toggle automap (alt: Start + \u2193)\\n- Start + Select: game menu (alt: Start + \u2191)\\n- Select + A/B/X/Y: Spell hotkeys\\n- Right analog: move automap or simulate mouse\\n- Right analog click or Select + L: left mouse click\\n- Select + Right analog click: right mouse click (alt: Select + R1)\\n- Select + L2: quest log (alt: Start + Y)\\n- Select + R2: spell book (alt: Start + B)", 
            "app_dls": 7423, 
            "md5": "18f53d5bf7ee7b7647eb2a644d692834"
        }, 
        {
            "category": "advanced", 
            "binary": "/switch/uManager.nro", 
            "updated": "07/07/2024", 
            "name": "uLaunch", 
            "license": "GPLv2", 
            "title": "uLaunch", 
            "url": "https://github.com/XorTroll/uLaunch/releases", 
            "description": " Custom, open-source Home Menu", 
            "author": "XorTroll", 
            "changelog": "1.0.0\\n\\nGeneral\\nThe menu entry system was completely remade:\\n\\nCleaner grid-like system, deeply inspired by the 3DS menu (and partially DSi/Wii menus as well), easier than ever to navigate and customize.\\n\\nHomebrew and applications are no longer split in separate menus: the menu initially contains all applications, hbmenu, uManager (check below) and other special entries (user page, settings/themes...), and homebrew entries may be easily added in the menu (or they can always be accessed via hbmenu, of course)\\n\\nSupport was added for detecting when the gamecard fails mounting (even displaying the result, something the original HOME menu doesn't do).\\n\\nSupport on SD removal was improved.\\n\\nNow using arc to neatly organize result codes and display their names.\\n\\nAll uLaunch components now generate logs (cleaned every reboot) which can be really helpful for pinpointing any problems.\\n\\nTranslations are provided for additional languages: Spanish, Korean, Brazilian Portuguese (those volunteered by translators)\\n\\nIf you'd like to add new translations or improve existing ones, feel free to contribute!\\nAs always, all libraries were updated to their latest releases (therefore, this works with latest Atmosph\u00e8re).\\n\\nMany other internal bits of the code were improved or straight up redesigned.\\n\\nuSystem\\nBasically many internal changes to reflect changes in the other parts of the project more noticeable by the end user.\\nuLoader\\nImplemented support to use uLoader as a homebrew chooser, thus now being able to return the homebrew the user selected via hbmenu instead of launching it.\\n\\nMinor changes reflecting more closely the logic actual hbloader follows, probably fixing minor issues.\\n\\nuMenu\\nChanges relative to the new menu:\\n\\nSeveral options previously placed elsewhere (user page, uLaunch settings/themes, controllers menu...) are now actual menu entries, making the UI cleaner overall.\\n\\nMii editor is now accessible from both the entry menu and the quick menu.\\n\\nFolders are back, and better than ever! Subfolders, sub-subfolders, etc. can be created like before, while the new menu grid-like layout makes moving entries inside/outside folders more intuitive than ever.\\n\\nMajor graphical improvements aside from the new menu:\\n\\nAll assets/logic were upgraded to 1080p, thus no longer having lower quality on TV (another thing the official HOME menu doesn't have).\\n\\nMenus are highly themeable now, since more attention was dedicated to little customizable aspects.\\n\\nThe quick menu can now only opened with ZL/ZR (L/R are used to nagivate through the main menu), and a mii editor option was added back.\\n\\nThe web browser URL input dialog starts with https:// as default for simplicity.\\n\\nThere is no longer a separate homebrew menu, instead homebrew entries are added via the new uLoader mechanism.\\n\\nInputs are now nicely shown in an input bar right above the entry menu.\\n\\nSeveral menu transitions were made nicer, fading into the theme background instead of a black screen.\\n\\nSome basic checking is done on whether titles are launchable in the first place (rather than trying to launch them, failing and reopening uMenu with an error dialog)\\n\\nIncreased internal menu memory from 176MB to 296MB, thus allowing loading better quality theme assets while everything else should (in principle) work fine.\\n\\nThemeing: uDesigner\\nThemes have changed a lot: this version introduces a new version of the theme format, comprising both minor changes and a LOT more customizable stuff, to the point where all the changes are too long to be listed here.\\n\\nThe new default theme has blue as its overall color and almost entirely brand new assets.\\n\\nThemes are now distributed as ZIP files.\\n\\nThe themeing wiki has been rewritten covering everything about creating themes.\\n\\nFrom all this, it follows that old themes are far from compatible (not only differences in format/files, but also on the resolution since we are 1080p now!), so any old theme must be reworked manually. Regardless, the new themeing is more customizable than before, opening many more opportunities for any creative minds out there.\\n\\nAlong these lines, an (experimental) official theme editor is finally here: check uDesigner!\\n\\nThe wiki has also been rewritten, covering every relevant detail. Wiki pages are the perfect documentation for those who will make themes manually as well as those using the (experimental) editor.\\nuManager\\nThis new release introduces uManager, a brand new homebrew app to control uLaunch's functionality!\\n\\nManually tinkering files will no longer be necessary (aside from weird cases, of course).\\n\\nAutomatically enable/disable uLaunch\\n\\nUpdate uLaunch to the latest GitHub release\\n\\nReset the menu layout / uLaunch's generated image cache (might come useful if something happened to break)\\n\\nuScreen (formerly uViewer)\\nuViewer was replaced by uScreen, a brand-new (Java) tool for USB screen capturing, where its functionality is the same overall.\\n\\nRemarks\\nNote that many other not-too-complicated features could've been added into this release: more system settings, menu entries for amiibo options, per-user theme options, important application checks that the official HOME menu does (needed updates and corrupted data)...\\n\\nFeatures like these will (hopefully) be tested and implemented on future releases, but too many major changes were already waiting to be in a new release (for those unaware, this release's work is the result of combining features of several years of half-finished rewrite attempts) and I was not risking losing motivation again because of constantly expanding the next release's goals.\\n\\nIn other words: enjoy by best work despite still sucking at UI design ;)\\n\\n0.3.7\\n\\nEverything was compiled with the latest libraries, meaning proper Atmosph\u00e8re 1.6.2 / 17.0.1 support among other things\\n\\n0.3.6\\n\\nEverything was compiled with the latest libraries, meaning proper Atmosph\u00e8re 1.5.5 support among other things\\n\\n0.3.5\\n\\nUpdated for latest Atmosphere (v1.5.1) and libnx\\n\\nFixed support for certain games, like Nintendo Switch Online titles\\n\\n0.3.4\\n\\nAgain nothing new, just recompiled with latest libnx and Atmosphere, which was needed for the latest Atmosphere release (v1.3.1)\\n\\nAgain, since were there no changes at all, no uViewer binaries are provided\\n\\n0.3.3\\n\\nNothing new, just recompiled with latest libnx and Atmosphere, which was needed for the latest Atmosphere release\\n\\nAgain, since were there no changes at all, no uViewer binaries are provided\\n\\n0.3.2\\n\\nMost of the code was rewritten or cleaned up, which might mean slightly faster load times, etc.\\nReinstalled/never launched titles can be launched properly (until now, they had to be launched first on regular qlaunch in order to work)\\nOther minor internal changes, fixes, etc.\\n\\n0.3.1\\n\\nCompiled with latest Atmosphere libraries, effectively supporting up to 1.1.1 and 13.0.0 firmware\\nSlightly reduced the main menu's memory size from 192MB to 176MB. Previously, certain applets would crash due to lack of memory (for instance, swkbd when editing a user's name on the user page), and thanks to this memory reduction these issues are fixed now.\\nFixed a bug where launching a title when another one is opened would fail due to not waiting until the opened title actually exits.\\n\\n0.2.1\\n\\nThis a basic version to support latest libnx and Atmosphere, so not many features were added.\\n\\nGeneral\\nAdded support for latest Atmosphere, libstratosphere and libnx, fixing potential bugs they all could have had.\\nUSB viewer\\nUSB viewing has been force-disabled for this version, since it is completely broken.\\nMain menu\\nFixed a bug where homebrew couldn't be launched from main menu, even in applet mode, when there is an application suspended.\\n\\nAdded the option to rename folders by pressing X on the main menu (with the folder selected)\\n\\n0.2\\n\\nMain menu\\n\\nAdded a new way to open menus without touchscreen: presenting the quick menu! Just hold L/R-stick, then move it while being held to select a menu, leave the stick and profit!\\n\\nChanged the web browser touchable menu item with the controller applet one, for what it's worth.\\n\\nSettings menu\\n\\nNew settings were added:\\n\\nConsole information upload (enable/disable)\\n\\nAutomatic titles' download (e/d)\\n\\nConsole auto-update (e/d)\\n\\nBluetooth (e/d)\\n\\n3.0 USB (e/d)\\n\\nNFC (e/d)\\n\\nWireless LAN (e/d)\\n\\nMAC address\\n\\nSerial number\\n\\nAdded controller menu applet (as a menu touchable icon, as mentioned above) support to change/manage players and controllers!\\n\\nAdded album applet (as part of the aforementioned quick menu) support to view your captures!\\n\\nAdded a power menu (as part of the aforementioned quick menu) to quickly power off, reboot or sleep the console!\\n\\nQForegroundViewer has been refactored into a major application: uViewer!\\n\\nNew entry creator menu (custom entry creator to be accessible from main menu), customizable with plugins!\\n\\nThis includes a custom RetroArch-themed DLL plugin, easily loadable by uViewer, to make ROM forwarding really easy!\\n\\nAdded a new way to open menus without touchscreen: presenting the quick menu! Just hold L/R-stick, then move it while being held to select a menu, leave the stick and profit!\\n\\nGeneral\\n\\nCustom icons in entry JSONs can now be used with normal titles too, not just homebrew.\\n\\nCustom name/author/version texts in entries are no longer restricted to 511/15 characters.\\n\\nCertain parts of the code/functionality were slightly improved (speed might be slightly faster in certain laggy moments)", 
            "screens": 0, 
            "extracted": 19346, 
            "version": "1.0.0", 
            "filesize": 10670, 
            "details": "Custom, open-source replacement/reimplementation for Nintendo Switch's HOME menu (qlaunch), extending it with amazing, homebrew-oriented functionality!\\n\\nuLaunch is a very ambitious project, consisting on two custom library applets, a custom system application and a custom system applet, in order to replace the console's HOME menu with a custom, homebrew-oriented one.\\n\\nThis isn't any kind of HOME menu extension, injection, patch, etc. uLaunch is a complete reimplementation, 100% open-source, which also takes over eShop and Parental control applets and flog system title (all of them are pretty much useless with this reimpl) for its extended functionality.\\n\\nThe project is licensed as GPLv2.\\n\\nFor those who are interested in how the UI was done, this project is, like Goldleaf, a good example of how powerful Plutonium libraries can be in order to make beautiful UIs.\\n\\nFeatures\\nList of HOME menu features uLaunch has:\\n\\nProper launching and foreground management: launch, suspend and close titles and applets\\n\\nProper general channel handling (some of it might be not implemented): sleep, shutdown, reboot, HOME menu press detection...\\n\\nSettings:\\n\\nShow connected WiFi network's name\\n\\nOpen connection applet in case user wants to change network settings\\n\\nChange console's language and show active one\\n\\nChange console's nickname and show current one\\n\\nUser features:\\n\\nAllow creating user on the startup menu\\n\\nShow user's page (in order to edit nickname, icon, friends...)\\n\\nHomebrew support\\n\\nLaunching as applets (no need of Album!)\\n\\nLaunching as applications (no need of any titles to do so!)\\n\\nCustom basic homebrew menu\\n\\nOption to add custom NRO accessors to main menu (homebrew or custom items easily accessible, no more need of forwarders!)\\n\\nUI\\n\\nThemes (different to official HOME menu themes/NXThemes)\\n\\nCustom icons, menu assets and graphics (custom images, colors, sizes, positions...), background...\\n\\nCustom background music and sound effects!\\n\\nFolders in order to keep your main menu organized!\\n\\nUsers\\n\\nPC-like login on startup (select user and use it for everything, log off, register/change/remove password...)\\n\\nUser password support! (up to 15 characters)\\n\\nMiscellaneous extras\\n\\nWeb browsing (via web-applet) directly from the main menu!\\n\\nConsole screen capturing from PC itself (Windows-only) via USB-C cable and uViewer tool!\\n\\nDisclaimer\\nHomebrew-as-application 'flog' takeover\\nuLaunch allows you to launch homebrew as an application, taking advantage of the system's 'flog' built-in application title, which was stubbed but not removed, thus it's content can be overriden via LayeredFS and launched.\\n\\nSince launching this title should be impossible, it might involve ban risk. uLaunch has this option disabled by default, so enable and use it use it at your own risk. Always make youre you're safe from bans (by using tools like 90DNS) before using uLaunch to avoid any possible risks.", 
            "app_dls": 29774, 
            "md5": "4c24c85877bbfb1cdcb4d57fede334d9"
        }, 
        {
            "category": "game", 
            "binary": "/switch/OpenJazzNX/OpenJazzNX.nro", 
            "updated": "18/09/2019", 
            "name": "OpenJazzNX", 
            "license": "GPLv2", 
            "title": "OpenJazzNX", 
            "url": "https://github.com/KranKRival/OpenJazzNX/releases", 
            "description": "Port of OpenJazz to the nintendo switch With SDL2 Support.", 
            "author": "KranKRival", 
            "changelog": "v 1.2.1\\n\\nBring support for 9.0.0\\n\\nV 1.2.0\\n\\n1.Fixed sound bug on loading level\\n2.Fixed sound bug on game pause\\n3.Fixed level select font and palette\\n4.Fixed in-game menu font and palette\\n5.Fixed Load-game menu font\\n6.Fixed most font color bugs\\n7.Renamed ESC key with Minus on all screens", 
            "screens": 0, 
            "extracted": 10934, 
            "version": "1.2.1", 
            "filesize": 4341, 
            "details": "To play the game you need to put jazz jackrabbit game files in same directory as OpenJazzNX.nro\\n\\nTHIS DOWNLOAD INCLUDES THE SHAREWARE FILES TO PLAY THE GAME !!!\\n\\ncool\\n\\nBugs:\\n\\n1.Level Bonus crashing the game while quit it or finish it, i have disabled the Bonus while playing the game it self untill i fix it\\nhmm who need that bonus doe ?! xD (game will go to next level without using the bonus) im not sure if its me or its comes from OpenJazz Engine ?!\\n\\nTodo:\\n\\nFix the Bugs (not bugsbunny) its Jack man :8\\n\\nHave Fun Jack !!!", 
            "app_dls": 3728, 
            "md5": "b9afae46ddc94f6f837a295e2ca2668c"
        }, 
        {
            "category": "game", 
            "binary": "/switch/f2bgl/f2bgl.nro", 
            "updated": "12/05/2021", 
            "name": "f2bgl", 
            "license": "n/a", 
            "title": "f2bgl", 
            "url": "https://github.com/usineur/f2bgl/releases", 
            "description": "Fade To Black engine", 
            "author": "usineur", 
            "changelog": "0.3.1\\n\\n- fixed memory leak with sounds\\n- removed dependency on FFmpeg", 
            "screens": 0, 
            "extracted": 12546, 
            "version": "0.3.1", 
            "filesize": 5593, 
            "details": "ABOUT\\n\\nf2bgl is a re-implementation of the engine used in the game Fade To Black\\nmade by Delphine Software and released in 1995.\\n\\nTHIS DOWNLOAD COMES WITH THE PC DEMO VERSION FOR YOU TO TRY.\\n\\nFollow the info here https://github.com/usineur/f2bgl to include the full game.\\n\\nCONTROLS\\n\\nIn-game hotkeys\\n\\nLeft stick / Left D-pad    Move Conrad (run)\\nHold R + Move Conrad    Walk, step aside (also in gun mode)\\nA    Activate / Shoot\\nB    Toggle gun mode\\nY    Reload gun\\nX    Jump\\nZR    Use secondary weapon\\nZL    Use item\\n-    Open inventory menu\\n+    Open saveload menu\\n\\nInventory menu\\n    \u202f\\nL    Next category\\nR    Consult item\\nA    Select item\\n<    Previous item\\n>    Next item\\n-    Exit this menu\\n\\nSaveload menu\\n    \u202f\\nup/down    Toggle Save / Load mode\\nleft/right    Previous / Next slot\\nA    Validate\\n+    Exit this menu\\n\\nKNOWN BUGS/ISSUES\\n\\nYou may encounter graphics glitches and crashes. Some of them exists in the original engine which is still WIP.\\nNote: this port is based on the 0.2.3 version.\\n\\nCREDITS\\n\\nGregory Montoir, for the original engine;\\nEverybody behind libnx, SDL2, OpenGL, mesa, libdrm, ...", 
            "app_dls": 1442, 
            "md5": "bc3c157ab51d6e4af749639a9003a35f"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/easyrpgplayer/easyrpg-player.nro", 
            "updated": "25/05/2023", 
            "name": "EasyRPGplayer", 
            "license": "GPLv3", 
            "title": "EasyRPG player", 
            "url": "https://github.com/EasyRPG/Player/releases", 
            "description": "Play your own RPG", 
            "author": "Rinnegatamante, EasyRPG team", 
            "changelog": "0.8.0\\n\\nhttps://blog.easyrpg.org/2023/04/easyrpg-player-0-8-paralyze/\\n\\n0.7.0\\n\\nhttps://blog.easyrpg.org/2021/10/easyrpg-player-0-7-0-sword/\\n\\n0.6.2.3\\n\\nhttps://blog.easyrpg.org/2020/10/easyrpg-player-0-6-2-3-pincer-attack-patch-3\\n\\n0.6.2.1\\n\\nhttps://blog.easyrpg.org/2020/05/easyrpg-player-0-6-2-1-pincer-attack-patch-1\\n\\n0.6.2\\n\\nhttps://blog.easyrpg.org/2020/04/easyrpg-player-0-6-2-pincer-attack/\\n\\n0.6.1\\n\\nhttps://blog.easyrpg.org/2019/07/easyrpg-player-0-6-1-surprise-attack/\\n\\n0.6.0\\n\\nhttps://blog.easyrpg.org/2019/03/easyrpg-player-0-6-0-preemptive-attack/\\n\\n0.5.4\\n\\nhttps://blog.easyrpg.org/2018/10/easyrpg-player-0-5-4-antidote/", 
            "screens": 0, 
            "extracted": 32836, 
            "version": "0.8", 
            "filesize": 21494, 
            "details": "EasyRPG Player is a software allowing you to run games built with RPG Maker 2000 and RPG Maker 2003 on your system.\\nIt actually supports several consoles and now Switch support got added.\\n\\nPlace the folder easyrpg-player in /switch and place your games in /switch/easyrpg-player (same folder for RTP files if required, so /switch/easyrpg-player/rtp).", 
            "app_dls": 7288, 
            "md5": "522f2cd7d4ae4e8d002d79fe3b9f97be"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/SimpleModManager/SimpleModManager.nro", 
            "updated": "25/05/2023", 
            "name": "SimpleModManager", 
            "license": "GPLv3", 
            "title": "SimpleModManager", 
            "url": "https://github.com/nadrino/SimpleModManager/releases", 
            "description": "A Simple Game Mod Manager", 
            "author": "nadrino", 
            "changelog": "2.1.2\\n\\nNow every mod management action (apply, check, delete etc...) is cancelable\\nFixing titleID display\\n\\n2.1.0\\n\\nRestructuring the core engine & cleaning code. Should be a lot more stable. For this version, I've dropped the overlay module as it instantaneously crash even with the simplest include.\\n\\nThe console version is now shipped appart as the escape codes (colors for example) are not displayed correctly when compiled with borealis.\\n\\n2.0.4\\n\\nCompiled with latest libnx (v4.0.0)\\n\\n2.0.3\\n\\nCompiled with latest libnx. Tested on fw 10.1.0 with Atmosphere 0.14.1.\\n\\nNew features:\\n\\nUpdated borealis (GUI submodule)\\n\\n2.0.2b\\n\\nCompiled with latest libnx. Tested on fw 10.0.4 with Atmosphere 0.13.0.\\n\\nNew features:\\n\\nOverlay module is now fixed: apply/disabling mods won't crash Atmosphere anymore!\\n\\n2.0.2\\n\\nCompiled with latest libnx. Tested on fw 10.0.4 with Atmosphere 0.13.0.\\n\\nNew features:\\n\\nFixing focus loss when mod checking is faster than the display animation\\nFixing last install preset not being remembered while restarting the app\\nFixing loading subtitle display for mods checking\\nIncreasing read buffer size for file comparison (faster mods status check)\\nAdding color to mods status tags\\n\\n2.0.1\\n\\nCompiled with latest libnx. Tested on fw 10.0.4 with Atmosphere 0.13.0.\\n\\nNew features:\\n\\nMinor UI improvements\\nUpdating loading display for mod sets operations\\nAdding icons to options labels\\n\\n\\n2.0.0\\n\\nCompiled with latest libnx. Tested on fw 10.0.4 with Atmosphere 0.13.0.\\n\\nNew features:\\n\\nFirst release of the GUI.\\nNow SMM will automatically find the game image to the game folders.\\nMods management operation (applying, removing, checking) are now done asynchronously. This improves speed and allows a better loading monitor display.\\nCaveats:\\n\\nFew features are still missing from the consoleUI version (like showing conflicts or detailed view of the status of each mod file). You can still switch back to the old UI by going to the Settings menu. You can switch back to the GUI as well.\\nSometimes while playing with the mods preset editor might cause some random crashes. Those don't affect your mods files or parameters of SMM since they're related to the GUI memory allocation. If it happens just relaunch the app and everything you've done should be there.\\n\\n1.6.0\\n\\nCompiled with latest libnx. Tested on fw 10.0.3 with Atmosphere 0.12.0.\\n\\nNew features:\\n\\nFirst release of the Tesla module !\\nMinor changes in the UI of the applet version\\n\\n1.5.2\\n\\nCompiled with latest libnx. Tested on fw 10.0.3 with Atmosphere 0.12.0.\\n\\nNew features:\\n\\nSlight modification in the UI.\\nZL and ZR now show a menu in which you can select the options.\\nAdding option to specify which preset should be used in this folder (in ZL/ZR menu).\\nFixed a bug while removing a mod from a preset.\\n\\n1.5.1\\n\\nCompiled with latest libnx. Tested on fw 10.0.2 with Atmosphere 0.12.0.\\n\\nNew features:\\n\\nNow SMM remembers the last install-preset you used.\\nMods status cache is now considering install-preset\\nNow by pressing \"Y\", you can also check the conflicts a given mod wrt the others.\\nAfter the creation(edition) of a presets, SMM will now show the list conflicted files and the mod that will be considered for each of these files. Also the total size of the preset is printed.\\nAdding default install preset : \"root\", where the mods are installed in \"/\".\\nRe-design the buttons layout.\\nFixes:\\n\\nFixing a bug in the config file reading that prevented the program to get non install-preset related options: stored-mods-base-folder and last-program-version.\\nTechnical:\\n\\nNow mods status cache file is writen as \"mods_status_cache.txt\"\\nAdding \"use-gui\" parameter, but will only be used by the GUI build\\nNow FS is properly handled by \"enableEmbeddedSwitchFS\"/\"disableEmbeddedSwitchFS\"\\nmkdir is now handled by native Switch FS calls\\n\\n1.5.0\\n\\nNew features :\\n\\nNow using built in filesystem functions for IO. (see Performance Improvement section below)\\nOptimized presets\\nNow if you apply any preset where several mods overwrite the same file, only the file of the last mod will be actually written.\\nChanging location of the config file : \"/config/SimpleModManager/parameters.ini\".\\nYou will be warn at the first launch of the v1.5.0 if you already had SimpleModManager before. The program will automatically detect the old parameter file, and move it to the new location\\nLast cursor position is now save: each time you go back to the mod list, the cursor will no longer be at the begining of the list.\\nRemoving cache of files list. (saving some RAM)\\nPreparing ground for a Tesla overlay :).\\nPerformance Improvement :\\n\\nMods status check : 300% faster (CRC check reimplementation helped a lot)\\nDisabling mods : 40% faster\\nApply mods (tested with preset) : 20% faster\\n\\n1.4.1\\n\\nCompiled with latest libnx. Tested on fw 10.0.2 with Atmosphere 0.12.0.\\n\\nNew features :\\n\\nAdding checksum support (CRC32) with cache\\nAdding keyboard to rename presets\\nFixing various displaying bugs\\nFixing mod presets editing\\nKey mapping changes:\\n\\nY will now show you the files status of the selected mod\\nZL will force a recheck of applied mods (CRC32)\\n\\n1.4.0\\n\\nNew feature : ability to create and apply presets of mods\\nNow handles key persistence\\nMinor bugs fixes\\n\\n1.3.1\\n\\nCompiled with latest libnx (Compatible with 9.1.0)\\n\\n1.3.0\\n\\nAdding multiple presets in config file\\nPossibility to swap preset during the app execution with \"Y\"\\n\\n1.2.0\\n\\nAdding the possibility to change destination folder (Feature Request)\\nAdding parameter file reading (Initiated by kowbot, thanks !)\\nChanging keybinding\\nFixing bugs\\nCosmetics changes\\n\\n1.1.0\\n\\nCompiled with latest libnx (Compatible with 9.0.0)\\nFew changes in the ui\\nMinor bug fix\\n\\n1.0.0\\n\\nTested on Nintendo Switch Firmware : 8.1.0 and 9.0.0", 
            "screens": 0, 
            "extracted": 10288, 
            "version": "2.1.2", 
            "filesize": 4580, 
            "details": "SimpleModManager is an homebrew app for the Nintendo Switch CFW : Atmosphere. It allows to manage your mods (via LayeredFS).\\n\\nAt the ROOT of your SDcard, there is a /mods/ folder.\\n\\nTree structure :\\n\\n/mods/<NameOfTheGame>/<NameOfTheMod>/<ModTreeStructureFromAtmosphereFolder>\\n\\nExample :\\n\\n /mods/The Legend of Zelda - Breath of the Wild/First Person View/titles/01007EF00011E000/romfs/Actor/Pack/GameRomCamera.sbactorpack", 
            "app_dls": 34255, 
            "md5": "29e60b97c8648787328bd303087afa47"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Rit.nro", 
            "updated": "14/06/2023", 
            "name": "Rit", 
            "license": "GPLv3", 
            "title": "Rit.", 
            "url": "https://github.com/GuglioIsStupid/Rit", 
            "description": "Mania-Styled Rhythm made in L\u00d6VE2D", 
            "author": "GuglioIsStupid", 
            "changelog": "0.0.5-svimprovement\\n\\nDefault songs (pre-included to test the game out)\\nScroll Velocity rewrite (pretty 1:1 to quavers now)\\nfixed NX build not working\\n\\n0.0.5\\n\\nMODSCRIPTING\\n\\n- graphics.newCircle / graphics.newRectangle\\n- simulatedBeatTime (Used with setMusicPlaying(true/false))\\n- UI Elements can be set to visible/invisible\\n- Drunk + Tipsy mods improved\\n\\nGAMEPLAY\\n\\n- Input w/ hold notes was fixed (or well.. improved)\\n- Better rating system\\n- FNF BPM Changes\\n- Song speed changes\\n- Difficulty Calculator (May break)\\n- Better song folder (no need for separate game folders)\\n- Backgrounds\\n- Scroll underlay\\n- SV's are slightly better\\n\\nSKINS\\n\\n- UI Colours can be changed in the skin.json\\n\\nMENUS\\n\\n- Added results screen (Very barebones)\\n- Added a start menu\\n- Added a settings menu\\n\\nMISC\\n\\n- Fixed debug overriding default lua debug\\n- Replays (Currently not viewable)\\n- Switched to HUMP.Gamestate instead of my own state library\\n- love.graphics.gradient\\n- (UI) Scoring + Accuracy lerps ins\\n\\n0.0.4-modscripting.01\\n\\nRit now support modscripts!\\n\\nTo make a modscript, go into the songs folder and make a folder called 'mod' with a 'mod.lua' file in it.", 
            "screens": 0, 
            "extracted": 31085, 
            "version": "0.0.5-svimprovement", 
            "filesize": 23272, 
            "details": "A free and open source rhythm game made with L\u00d6VE.\\n\\nRit is a WIP Rhythm Game built with L\u00d6VE2D that supports many different rhythm game formats such as:\\n* osu!mania beatmaps\\n* Quaver beatmaps\\n* FNF Jsons\\n* And lots more to come!\\n\\n-- How to install maps --\\n1. Run the game at least once to setup the save folder\\n2. Go to the save folder location and drag & drop your songs\\n- Windows: %appdata%\\rit\\songs (%appdata%\\LOVE\\rit\\songs for non-executable)\\n- Linux: ~/.local/share/love/rit/songs\\n- Nintendo Switch: ./Rit/songs\\n4. Launch the game, choose your skin, and have fun!\\n\\nImportant links:\\n- https://quavergame.com/\\n- https://osu.ppy.sh/home\\n\\nThis project is not affiliated with Quaver, osu!, or any other rhythm game.", 
            "app_dls": 1679, 
            "md5": "c9b733c9c5f4db4540af81351f471f66"
        }, 
        {
            "category": "game", 
            "binary": "/switch/liero/openliero.nro", 
            "updated": "16/07/2018", 
            "name": "liero", 
            "license": ".", 
            "title": "Liero", 
            "url": "https://github.com/bmollot/liero/releases", 
            "description": "A Port of Liero", 
            "author": "idle_zealot", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2205, 
            "version": "1.39a_nx", 
            "filesize": 896, 
            "details": "This is the fork of Liero made by and for the Nintendo Switch homebrew community of Liero players. Compared to Leiro (orbmit edition) it contains:\\n\\nRun on the Nintendo Switch\\n\\nThat's right! This is a straight port of the orbmit edition to the Switch. It relies on libnx and the associated SDL2 implementation.", 
            "app_dls": 1052, 
            "md5": "44ebfb507324a55a6a72cc9cfad07681"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/HekateBrew/HekateBrew.nro", 
            "updated": "10/10/2019", 
            "name": "HekateBrew", 
            "license": "GPLv2", 
            "title": "HekateBrew", 
            "url": "https://github.com/bemardev/HekateBrew/releases", 
            "description": "Nintendo Switch Homebrew for Hekate", 
            "author": "bemardev", 
            "changelog": "1.0\\n\\nAdd option to define a hekate config or payload to autoboot (when launching HekateBrew)\\n(If autoboot is enabled, you have 3 seconds to press any key or touch the screen to cancel it)\\n\\n0.9\\n\\n\"Reboot to Hekate\" from main menu\\nHekate options page\\n\\n0.8\\n\\nAdd the possibility to define a custom path for payload folder.\\nUI rewrite :\\nAll Hekate configs are in a same layout\\nAll payloads are in a same layout too.\\nAdd settings file\\nAdd settings UI to modify HekateBrew settings and Hekate configuration\\nAdd File, List and Slider Dialogs for settings page\\n\\n0.7\\n\\nAdd the possibility to define a custom path for payload folder.\\nUI rewrite :\\nAll Hekate configs are in a same layout\\nAll payloads are in a same layout too.\\nAdd settings file\\nAdd settings UI to modify HekateBrew settings and Hekate configuration\\nAdd File, List and Slider Dialogs for settings page\\n\\n0.5\\n\\nFirst published release\\n\\n", 
            "screens": 0, 
            "extracted": 10615, 
            "version": "1.0", 
            "filesize": 4382, 
            "details": "Features\\n\\nHekateBrew is a simple Nintendo Switch Homebrew for\\n\\nLaunching Hekate configs described in hekate config file and ini directory.\\n(config logos are shown if they are defined as icon= in ini file)\\n\\nLaunching payloads from hekate payloads directory.\\n(payload logos are shown if they exist in payload folder with the same name and .bmp or .png extension)\\n\\nLaunching payloads from Argon-NX payloads directory.\\n(payload logos are shown if they exist in Argon-NX logos directory)\\n\\n\\nCredits\\n\\nswitchbrew for the libnx project and switch-examples\\ndevkitPro for the devkitA64 toolchain and libnx support\\nCTCaer for the continued hekate and storage in payload binary\\nXorTroll for Plutonium\\nSciresM for Atmosphere", 
            "app_dls": 6261, 
            "md5": "f7ff4c66ea70859fedbd2e5be0bb9b1c"
        }, 
        {
            "category": "misc", 
            "binary": "/switch/nx-vr/nx-vr.nro", 
            "updated": "14/04/2019", 
            "name": "nx-vr", 
            "license": "none", 
            "title": "VR POC", 
            "url": "https://github.com/GreenDog72/nx-vr/releases", 
            "description": "VR test for switch homebrew", 
            "author": "GreenDog72", 
            "changelog": "0.0.1\\n\\nInitial  Pre Release.", 
            "screens": 0, 
            "extracted": 6907, 
            "version": "0.0.1", 
            "filesize": 2513, 
            "details": "Basic VR concept\\n\\nA WIP\\n\\n:)", 
            "app_dls": 1109, 
            "md5": "1308196e51f56ccb1e2f4e6814e3f40b"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/mgba.nro", 
            "updated": "15/12/2024", 
            "name": "mGBA", 
            "license": "n/a", 
            "title": "mGBA", 
            "url": "https://github.com/mgba-emu/mgba/releases", 
            "description": "Game Boy Advance Emulator", 
            "author": "endrift", 
            "changelog": "0.10.4\\n\\nhttps://mgba.io/2024/01/07/mgba-0.10.4/\\n\\n0.10.3\\n\\nhttps://mgba.io/2024/01/07/mgba-0.10.3/\\n\\n0.10.2\\n\\nhttps://mgba.io/2023/04/23/mgba-0.10.2/\\n\\n0.10.1\\n\\nhttps://mgba.io/2023/01/10/mgba-0.10.1/\\n\\n0.10.0\\n\\nhttps://mgba.io/2022/10/11/mgba-0.10.0/\\n\\n0.9.3\\n\\nhttps://mgba.io/2021/12/17/mgba-0.9.3/\\n\\n0.9.2\\n\\nhttps://mgba.io/2021/07/10/mgba-0.9.2/\\n\\n0.9.1\\n\\nhttps://mgba.io/2021/04/18/mgba-0.9.1/\\n\\n0.9.0\\n\\nhttps://mgba.io/2021/03/28/mgba-0.9.0/\\n\\n0.8.4\\n\\nhttps://mgba.io/2020/10/29/mgba-0.8.4/\\n\\n0.8.3\\n\\nhttps://mgba.io/2020/08/03/mgba-0.8.3/\\n\\n0.8.2\\n\\nhttps://mgba.io/2020/06/14/mgba-0.8.2/\\n\\n0.8.1\\n\\nhttps://mgba.io/2020/02/16/mgba-0.8.1/\\n\\n0.8.0\\n\\nhttps://mgba.io/2020/01/21/mgba-0.8.0/\\n\\n0.8-b1\\n\\nhttps://mgba.io/2019/10/20/mgba-0.8-beta1/\\n\\n0.7.2\\n- Many accuracy improvements including the implementation of mosaic on transformed sprites which was an long standing bug opened in 2013, fixes to DMA and timing adjustments to the original GameBoy emulation section\\n- Numerous memory leaks were fixed on all versions of the emulator", 
            "screens": 0, 
            "extracted": 7826, 
            "version": "0.10.4", 
            "filesize": 2920, 
            "details": "mGBA is an emulator for running Game Boy Advance games. It aims to be faster and more accurate than many existing Game Boy Advance emulators, as well as adding features that other emulators lack. It also supports Game Boy and Game Boy Color games.\\n\\nUp-to-date news and downloads can be found at https://mgba.io\\n\\nFeatures\\nHighly accurate Game Boy Advance hardware support[1].\\nGame Boy/Game Boy Color hardware support.\\nFast emulation. Known to run at full speed even on low end hardware, such as netbooks.\\nQt and SDL ports for a heavy-weight and a light-weight frontend.\\nLocal (same computer) link cable support.\\nSave type detection, even for flash memory size[2].\\nSupport for cartridges with motion sensors and rumble (only usable with game controllers).\\nReal-time clock support, even without configuration.\\nSolar sensor support for Boktai games.\\nGame Boy Camera and Game Boy Printer support.\\nA built-in BIOS implementation, and ability to load external BIOS files.\\nTurbo/fast-forward support by holding Tab.\\nRewind by holding Backquote.\\nFrameskip, configurable up to 10.\\nScreenshot support.\\nCheat code support.\\n9 savestate slots. Savestates are also viewable as screenshots.\\nVideo and GIF recording.\\nRemappable controls for both keyboards and gamepads.\\nLoading from ZIP and 7z files.\\nIPS, UPS and BPS patch support.\\nGame debugging via a command-line interface and GDB remote support, compatible with IDA Pro.\\nConfigurable emulation rewinding.\\nSupport for loading and exporting GameShark and Action Replay snapshots.\\nCores available for RetroArch/Libretro and OpenEmu.\\nMany, many smaller things.\\n\\n\\n", 
            "app_dls": 128140, 
            "md5": "00201002e7d2e238d9bc639fd876d9af"
        }, 
        {
            "category": "game", 
            "binary": "/switch/dino.nro", 
            "updated": "23/04/2022", 
            "name": "DinoRunNX", 
            "license": "BSD v3", 
            "title": "DinoRunNX", 
            "url": "https://github.com/HarryPeach/DinoRunNX/releases", 
            "description": "Port of the Chromium -No Internet Dino- Game", 
            "author": "HarryPeach", 
            "changelog": "1.2\\n\\nAdded sound effects\\nAdded instructions to the initial page\\nAdded a cool text-art to the loading stage :)\\nAdded more detailed logging\\nFix clipping on some sprites\\nAdd version info to loading stage\\n\\n1.1\\n\\nAdded the inverted colours night mode\\nAdded a warning message when launching from the album\\nModified speed and distance coefficient to be more accurate to the chrome version\\n", 
            "screens": 0, 
            "extracted": 4021, 
            "version": "1.2", 
            "filesize": 3746, 
            "details": "Switch Dino Runner\\n\\nPort of the Chromium \"No Internet Dino\" game for the Nintendo Switch console. \\nRequires Atmosphere as your CFW.\\n\\nHow to play\\n\\nUp Arrow jumps\\nDown Arrow crouches\\nB exits the application\\nA restarts the game after you fail\\n\\nKnown Issues\\n\\nDino blinks when crouching on the Switch\\n\\nLicense\\n\\nThe core javascript code is modified from the Chromium project and licensed under a BSD-style license. This project is licensed under the BSD3 license.", 
            "app_dls": 17330, 
            "md5": "33c7f20aa132bda0d67748714178b4a5"
        }, 
        {
            "category": "_misc", 
            "binary": "/switch/ParticleFire-NX/ParticleFire-NX.nro", 
            "updated": "18/05/2020", 
            "name": "ParticleFire-NX", 
            "license": "GPLv3", 
            "title": "ParticleFire-NX", 
            "url": "https://github.com/faithvoid/ParticleFire-NX/releases", 
            "description": "POC port of sorhanps particlefire-revision", 
            "author": "faithvoid", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 7870, 
            "version": "1.0", 
            "filesize": 2908, 
            "details": "Proof of concept Nintendo Switch port of sorhanp's \"particlefire-revision\". It does nothing except look pretty and make a decent screensaver.\\n", 
            "app_dls": 375, 
            "md5": "3085ccb1bd419dd50e0c33af234eaccc"
        }, 
        {
            "category": "game", 
            "binary": "/switch/hclswitch/HCL-Switch.nro", 
            "updated": "16/07/2018", 
            "name": "HCL-switch", 
            "license": "none listed", 
            "title": "HCL-switch", 
            "url": "https://github.com/Rinnegatamante/HCL-Switch", 
            "description": "A port of Hydra Castle Labyrinth for PSVITA.", 
            "author": "Rinnegatamante", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 35696, 
            "version": "1.1", 
            "filesize": 33341, 
            "details": "Hydra Castle Labyrinth, originally Meikyuujou Hydra, is a freeware Indie platformer developed by E. Hashimoto, a.k.a. Buster, and released on his website.\\n The original game was entirely in Japanese, but saw a translation patch months after its original creation.\\n The game hearkens back to early 'Metroidvania' games like Knightmare II: The Maze of Galious and Legacy of the Wizard: the player explores an immense maze-like dungeon, collecting tools and keys that allow them to proceed deeper. Certain areas are cordoned off from the main dungeon area, and each presents a more linear zone with a boss at the end. \\nThe player can find new equipment to make themselves stronger as well.", 
            "app_dls": 2702, 
            "md5": "93f8e30720b40ee0376a317b5584ea25"
        }, 
        {
            "category": "game", 
            "binary": "/switch/PepperAndCarrotRunningGame.nro", 
            "updated": "21/06/2022", 
            "name": "PepperandCarrot", 
            "license": "GPLv3", 
            "title": "Pepper and Carrot", 
            "url": "https://github.com/TheLogicMaster/PepperAndCarrotRunningGame", 
            "description": "Pepper&Carrot themed endless runner game", 
            "author": "TheLogicMaster", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 39392, 
            "version": "1.0", 
            "filesize": 22545, 
            "details": "This game is a derivative of the Pepper&Carrot web comic created by David Revoy. It's an endless runner where the goal is to collect potion ingredients and avoid obstacles.\\n\\nPort: TheLogicMaster\\nGame: WinterLicht", 
            "app_dls": 1028, 
            "md5": "04586585074c29bf6d92b45107160e22"
        }, 
        {
            "category": "game", 
            "binary": "/switch/kartswitch/kartswitch.nro", 
            "updated": "12/07/2024", 
            "name": "SRB2Kart", 
            "license": "GPLv2", 
            "title": "SRB2Kart", 
            "url": "https://github.com/Craftyawesome/Kart-Public", 
            "description": "Classic styled kart racer", 
            "author": "Craftyawesome, heyjoeway", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 532482, 
            "version": "1.6-r3", 
            "filesize": 220247, 
            "details": "SRB2Kart is a kart racing mod based on the 3D Sonic the Hedgehog fangame Sonic Robo Blast 2, based on a modified version of Doom Legacy.\\n\\nThis fork aims to support the Nintendo Switch.\\n\\nFeatures:\\nFull online support\\nFull mouse/keyboard support\\nFull software keyboard support\\nNotes:\\nThe game takes a bit to boot. A faster SD card or higher CPU clock may help with this.\\nOpenGL is used by default on this port. To switch to software either delete renderer.txt or write software in that file.\\nAutomatic resolution runs at 720p on handheld and 1080p docked (OpenGL only). For software I recommend 800x450.\\nThe game is CPU bottlenecked even on OpenGL. Models are an additional small performance loss.\\nThe game continues to run while on the Switch's home screen when you are unable to pause to prevent lag-switching.\\nIf you want to play the game with mouse/keyboard, you'll have to bind most of the buttons yourself.\\nAll button bindings are set to match the Xbox controller layout (Xbox A -> Switch B, Xbox X -> Switch Y, etc.)", 
            "app_dls": 13253, 
            "md5": "4dbb1f2549c774920a262051c9e82760"
        }, 
        {
            "category": "game", 
            "binary": "/switch/pusha.nro", 
            "updated": "22/07/2018", 
            "name": "pusha", 
            "license": "n/a", 
            "title": "Push A NX", 
            "url": "https://github.com/Maschell/PushA_NX", 
            "description": "Push A as fast as you can", 
            "author": "Maschell", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2878, 
            "version": "1.0.1", 
            "filesize": 1071, 
            "details": "Back to the roots. Back in 2008 I started with writing homebrew on Wii. The first game I created was Push A.\\nNow, almost 10 years later, I quickly wrote a new version for the Switch.\\nHave fun!\\nHuge thanks to vgmoose, based on his examples.", 
            "app_dls": 1246, 
            "md5": "6e616a19f1369d00c2579b3bcecdfdb6"
        }, 
        {
            "category": "game", 
            "binary": "/switch/DDLC/DDLC-LOVE.nro", 
            "updated": "04/10/2021", 
            "name": "DDLC", 
            "license": "GPLv3", 
            "title": "DDLC-LOVE", 
            "url": "https://github.com/LukeZGD/DDLC-3DS/releases", 
            "description": "An unofficial Doki Doki Literature Club port", 
            "author": "LukeZGD", 
            "changelog": "1.2.3 is not an update but a final version number to prevent future update nags from this app.. it has been discontinued.\\n\\n1.1.9 < current version for download\\n\\n(Switch) Only Atmosph\u00e8re is supported.\\n(Switch) (LP1.1.0) For Atmosph\u00e8re 0.10.2 and up, add enable_deprecated_hid_mitm = u8!0x1 in sdmc:/atmosphere/config/system_settings.ini under [Atmosphere] (see #111)\\n\\n1.1.8-4\\n\\nChanged some key bindings (see Help menu in-game)\\nFixed errors that prevent the game from starting (Switch, #144)\\nUpdate LOVE-WrapLua (Vita)\\n\\n1.1.8-3\\nUpdate LovePotion\\n\\n1.1.8-2\\n\\nMinor changes and fixes in menus, audio, and script\\n(ddlclove) Add progress bar on load\\n(Switch) Update LovePotion to 2.0.0-pre3\\n\\n1.1.8-1\\n\\nApplied some fixes in character animations and some graphics code\\nSome script adjustments and fixes\\n\\n1.1.8\\n\\nSome better resource loading code\\nAlways fade from black on new game and from poem game\\nText box is now always shown behind game menu\\nAdjusted poem font sizes for readability\\nLarger poem text spacing for readability\\nAlways display DDLC-LOVE version in splash screens\\nAdjusted some text and images in menus and credits\\nApplied some fixes in character animations\\nFixed showing Act 2 post-event history\\nAllow enabling auto-forward in Act 3\\nSome script adjustments and fixes\\n\\nv1.1.7-1\\n\\n(ddlclove) Allow opening of game menu in some choices\\nFix one small error in script (Day 4)\\n\\nv1.1.6\\n\\n(ddlclove) Clearer menu choices (selected choice is outlined)\\n(ddlclove) Fixed background wipe\\n(ddlclove) Removed character hide to right\\nRemoved script issue message (will still skip)\\nAdjusted some text\\nBetter auto-forward implementation (now depends on string length)\\nRemoved 'I do not agree' option in first run\\nFixed some script errors in dialog, poems, game events\\nFixed character head sprites being displayed incorrectly\\n\\nv1.1.5\\n\\nSave data checking improvements\\nMerged more 3ds and ddlclove code\\nFixed dialog fade after special poems\\nAdded some script issue detection\\nUpdated some game assets\\n\\nv1.1.4\\n\\nMerged more 3ds and ddlclove code\\nA bit of code cleanup\\nErrors written to error.txt in the save file location (3DS and Switch only)\\nFixed game event errors that can prevent progress\\n\\nv1.1.3\\n\\nFixed some game event, script, and asset loading errors that prevent progress\\n\\nv1.1.1\\n\\n(ddlclove) Pink outlineText for poem words\\nFixed some game event and script errors that prevent progress\\n\\nv1.1.0\\n\\nMerged 3ds and ddlclove code to one branch (though most of it is still separated)\\n(ddlclove) Slightly larger font and outline sizes for better readability\\n(ddlclove) Added Spanish translation by GlowTranslations!\\nSlight adjustments in menus\\nFix some errors in the scripts\\nOther general improvements\\nNote:\\n\\nMulti-language (translations) is supported on all systems except the 3DS version\\nFor changing languages, the game will exit and changes will be applied upon re-launching. Because of this, make sure to save before changing languages to avoid losing unsaved data\\n\\nv1.0.7\\n\\nBumps version to match 3DS changes\\n\\nFor Switch systems Atmosph\u00e8re 0.10.2 and up, add enable_deprecated_hid_mitm = u8!0x1 in sdmc:/atmosphere/config/system_settings.ini under [Atmosphere] (See #111)\\n\\nv1.0.5-1\\n\\nUpdated LovePotion (to fix #111 )\\n\\nv1.0.5\\n\\nFix #108 (f662bc4)\\nUpdated LOVE-WrapLua\\nBump up version (that's it haha)\\n\\nv1.0.4\\n\\nYou can now toggle text outlines on and off by pressing Minus or Select ingame. This can help for readability\\nFix SFX Volume only being applied in GUI SFX but not for ingame SFX\\nPut back character loader from 1.0.2, the new version causes issues from what I've tested\\n\\nv1.0.3\\nSwitch: updated LovePotion\\nSwitch: use showTextInput instead of ingamekeys (software keyboard)\\nSwitch: All volume controls now work properly\\n\\nv1.0.2\\n\\nFix poem1 error (from updated v1.0.1)\\nFix errors in installation and scripts (from updated v1.0.1)\\nMinor changes and improvements\\n\\nv1.0.1\\n\\nBetter word wrapping on all platforms\\nFixed script errors that can prevent progress\\n\\nv1.0.0\\n\\nPrevious saves are incompatible with this version!\\n\\nPoem Game: Removed possibility of having words doubled\\nPoem Game: add glitch text\\nPoem Game: other random events in Act 2\\nFixed settings not saving\\nFixed poem text flashing between 2 fonts\\nSimple character animations added (similar to early DDLC-3DS versions, but better)\\nMade the console 4 lines instead of 3\\nUI/menu improvements! Most of it is now identical to the original\\nEvents updates/improvements\\nAudio looping!\\nShow/hide text window with R Trigger/Plus\\nBetter scrolling (poems and history)\\n\\nv0.5.1\\n\\nWarning when os.time() returns nil instead of error\\nVolume settings\\n\\nv0.5.0-2:\\n\\nFix poem_scroll error\\nOther minor changes and improvements???", 
            "screens": 0, 
            "extracted": 180164, 
            "version": "1.2.3", 
            "filesize": 168181, 
            "details": "Notice: This is the largest app on the store! It will take a while to download through the app itself. Also, some users are reporting issues while downloading this app (please use the above \"Report an Issue\" button with your experience). You are probably better off getting this app from the website.\\n\\nSaves made before v1.0.0 are now incompatible and should be deleted!\\n\\nA Doki Doki Literature Club port for the Nintendo Switch! Programmed in Lua, running under the LovePotion framework.\\n\\nDDLC-LOVE, a DDLC port for the Switch, PSP, and PS Vita, will be found in the ddlclove branch of this repo.\\n\\nThis port is unofficial and is not affiliated with Team Salvato. Please support the official game. You can download Doki Doki Literature Club at: http://ddlc.moe\\n\\nThis is for 3DS systems, but it also works on other platforms that support L\u00d6VE (0.10.2 and later). On those, it will still have 2 screens like the 3DS.", 
            "app_dls": 26420, 
            "md5": "4cf7f18b2fb60d7fbf9f678ee0b425b5"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/SkyNX/SkyNX.nro", 
            "updated": "21/03/2022", 
            "name": "SkyNX", 
            "license": "GPLv3", 
            "title": "SkyNX", 
            "url": "https://github.com/DevL0rd/SkyNX/releases", 
            "description": "Stream your PC games to your Switch!", 
            "author": "DevL0rd", 
            "changelog": "1.5\\n\\nUpdating everything to work with latest libnx / Atmosphere.\\n\\n1.4\\n\\nAdded AMD Encoding, thanks to (ibanezbass)[https://github.com/ibanezbass]\\nAdded Intel Encoding, thanks to (ibanezbass)[https://github.com/ibanezbass]\\nFixed auto overclock on latest CFWs.\\nPaused threads on sleep. Still has sleeping issue though :/\\nExtended sleep time to a ridiculous ammount to try and mitigate sleep issue.\\nSlightly improved TCP stream verification.\\nFixed donate button.\\n\\n1.3.1\\n\\nPacket verification hotfix\\n\\nThis release requires updating both the app and the streamer!\\n\\n1.3\\n\\nAdded support for up to 8 players.\\nPress LS + RS to toggle mouse control.\\nGyro mouse smoothing.\\nTouch always enabled regaurdless of input method.\\nSmall latency improvements.\\nFixed stream ending on HID packet size too small. Should fix random stream ending.\\n\\n1.2\\nUse Analog sticks and triggers to control mouse\\nUse gyro to control mouse like a Wii remote.\\nBuilt in Nvidia encoding for low latency.\\nAutomatically sets desktop resolution for max performance. (Optional)\\nLimit stream to 30fps (Good for emulators like Cemu)\\nAdded some tooltips\\nAdded start on boot.\\nAdded prompt to reboot after installing drivers.\\nAdded donate button. You know, just in case you wanna by me a coffee ;)\\nFixed resolution detect on scaled monitors.\\nFixed audio volume.\\n\\n1.1\\n\\nNo bug fixes just yet, just wanted to, idk... Add motion support for Cemu!\\n\\nNotes\\nThis updates both the streamer and the app. Please reinstall both to get this working.\\n\\n1.0\\n\\nRelease version.", 
            "screens": 4, 
            "extracted": 20128, 
            "version": "1.5", 
            "filesize": 9269, 
            "details": "Download the latest desktop streamer from https://github.com/DevL0rd/SkyNX/releases\\nInstructions on how to get the streamer setup are here aswell!\\n\\nFor troubleshooting, see https://github.com/DevL0rd/SkyNX\\n\\nFeatures:\\nStream PC games with audio to switch at 60fps!\\nHandles up to 4 JoyCon pairs. (4 Players at once!)\\nOptionally disable video to use the JoyCons as remotes on PC!\\nOptionally disable audio.\\nOptionally swap A and B AND X and Y.\\nHandles basic touch input.\\nHandles right click. (Touch with 1 finger, tap with the second)\\nHandles scrolling. (Your standard 2 finger scroll.)\\n", 
            "app_dls": 27234, 
            "md5": "c95532492393fc683ada0de2c5abcea9"
        }, 
        {
            "category": "advanced", 
            "binary": "/switch/ArgonRTP/ArgonRTP.nro", 
            "updated": "29/07/2024", 
            "name": "argon-nx", 
            "license": "GPLv3", 
            "title": "argon-nx", 
            "url": "https://github.com/Storm21CH/argon-nx/releases/tag/v1.1-SE", 
            "description": "GUI payload chainloader", 
            "author": "Guillem96 / Storm21CH", 
            "changelog": "2.0-SE\\n\\nNew features 2.0:\\n\\nbdk update to 6.10\\nLanguage selection and function changed to have more languages.\\nAdded Unicode and special characters for more languages.\\nAdded Spanish by Impeeza\\nChinese by Faker Dev\\n\\n1.9-SE\\n\\nThis update is only required for Mariko and Aula consoles, has no advantage on Erista consoles, which use Reboot to Payload functions as usual.\\nMariko and AULA \"Reboot to Payload\" function chain\\nPer HBL nro, menu nsp, system modules to nro (010000000000100B Nintendo Store Button), and ArgonNX-SE RTP Payload Tesla Overlay with possibility to choose a payload and reboot\\nThe whole thing works via ArgonNX-SE and this must then also be used as the root payload.bin. Please note SD folders and files.\\n\\n1.8-SE\\n\\nNew feature: Ability to load a custom splash for each payload\\nThe image must have a resolution of 1280x720px and format ARGB32, like background.bmp\\nThe image must have the same name as the payload and be located in the \"argon/payloads\" folder, e.g. at fusee.bin = fusee.bmp\\n\\n1.7-SE\\n\\nNew function to select the autolaunch payload under tools. The desired payload is automatically copied and renamed. And the ability to delete the autolaunch payload.\\nUpdated to 1.7\\nGeneral bug fixes and stability fixes\\n\\n1.5-SE\\n\\nMenu colors can now be set arbitrarily:\\nTextcolor\\nTab Textcolor\\nStandard Payload Icon color\\nNew icons for Emunandswitcher and ArgonNX-SE itself\\nUpdated to 1.5\\nGeneral bug fixes and stability fixes\\n\\n1.4-SE\\n\\nUpdate to hekate bdk 5.7.2\\nAULA OLED Switch support\\nHardware Info Page revised\\nFix slider brightness value for AULA\\nAdded language selection\\nUpdated to 1.4\\nGeneral bug fixes and stability fixes\\n\\n1.3-SE\\n\\nBuild with newest hekate HW Libs 5.5.7\\nSome Buttons Theme fix\\nFixed a Error after autoclosing a window with X Button (Close Filemanager and other Windows)\\n13.07.21 Fixed a folder Bug, please redownload!\\n\\n1.2-SE\\n\\nNew Features 1.2:\\n\\nUpdate SX removed\\nAdded Filemanager for Argon and Emunandswitcher\\nAdded Reboot Menu with Power Button\\nKey assignment usage Filemanager:\\n\\nTouch screen as usual\\nJoycon Mouse, A = Enter folder / Choose Buttons, B = Back Folder, X = Close Window\\nJoypad up / down Filelist navigation, A = Enter folder, B = Back Folder, X = Close Window\\n\\n1.1-SE\\n\\nNew Features:\\n\\nAutolaunch Payload:\\nIf the file \"autolaunch.bin\" (your payload) is in the \"argon\" folder, this payload should start.\\n(Volume -) hold during the payload run, starts ArgonNX-SE...\\n\\n1.1-alpha\\n\\nFixing critical bug. Now ArgonNX launches using any payload sender.\\nArgon now is composed by 2 payloads (2 stages).\\nFirst stage configures hardware\\nSecond stage loads the GUI\\nBootlogo/splash and wait until GUI is loaded.\\nImprove system stability to enhance user experience.\\n\\n1.0-alpha\\n\\nArgonNX's UI has been rewritten using LittlevGL library. This rewrite has a lot of benefits. Some benefits include:\\nPrettier font\\nFaster rendering\\nBetter touch support\\nIn general terms improves UX\\nNow payloads are listed inside tabviews where each tab contains a group of 4 payloads.\\nNew tab of tools. By now tools only are related to reboot stuff (reboot to rcm, power off, reboot to ofw)\\nBackground size back to 1280*720. No more weird image flippings.\\nArgonNX Command Line Interface to simplify the process to create logos and backgrounds.\\nNow there is no need to declare a default.bmp logo inside the argon/logos directory.\\nImprove system stability to enhance user experience.\\n\\nv0.3\\n\\nNow background must be in a vertical position. New background size must be smaller or equal than 720x1280. (Performance reasons)\\nUsing double buffering for rendering in order to avoid flickering and also improve performance.\\nFully touch support. Thanks to @pixel-stuck\\nNow payloads are sorted by name.\\nCorrectly deallocate argon-nx from memory when launching payloads.\\nImprove system stability to enhance user experience.\\n\\nv0.2\\n\\nargon-nx.bin: ArgonNX payload ready to inject it via TegraGUI or TegraSmash.\\nsd-files.zip: Basic structure of ArgonNX for sd card. Includes a custom background, minerva training and a custom title.", 
            "screens": 0, 
            "extracted": 17109, 
            "version": "v2.0-SE", 
            "filesize": 6895, 
            "details": "What Argon is?\\nArgon is a noble gas. Argon comes from Greek Argon, neuter of argos meaning lazy , idle or inactive. Argon recieved this name because its chemical inactivity.\\n\\nArgon NX is an immutable payload which is injected to your Nintendo Switch via Fusee Gelee exploit.\\n\\nPurpose\\nThe purpose of Argon NX is to stay immutable, so you can always inject it, without caring about other payloads getting updated (Always use ArgonNX for TegraSmash, TegraGUI, TrinkedM0 ...).\\n\\nHow can it be?\\nWhen Argon NX is injected it automatically launches the payload.bin loacted at argon directory on your SD Card root.\\n\\nIf payload.bin is not present or VOOLUME DOWN button is pressed on payload injection, Argon NX will list all payloads located at argon/payloads, and you will be able tp select one of theme to launch it.\\n\\nIf you want, you can choose a payload logo by adding a 32 argb bmp(200*200) file named as the payload to argon/logos directory.\\n\\nCompatibility\\nWorks with all cfw payloads. Not tested with TeamXecuter SXOS payloat but it should work too.\\n\\n", 
            "app_dls": 12487, 
            "md5": "ef00355f8df0092284967a33f68bb88b"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/nx-midi/nx-midi.nro", 
            "updated": "14/01/2021", 
            "name": "nx-midi", 
            "license": "n/a", 
            "title": "nx-midi", 
            "url": "https://github.com/Cyuubi/nx-midi/releases", 
            "description": "Play MIDI files on your Nintendo Switch!", 
            "author": "Cyuubi", 
            "changelog": "1.1\\n\\nThis release changes some code to support libnx changes, as well as updating TML/TSF.\\n\\nWith the TML/TSF update, I have enforced a hardcoded max voices of 416, to prevent black MIDIs from stuttering.", 
            "screens": 0, 
            "extracted": 6894, 
            "version": "1.1", 
            "filesize": 2674, 
            "details": "\\nPlay MIDI files on your Nintendo Switch!\\n\\nUsage\\n\\nPlace any .sf2 and .mid file on the root of your SD card called default.sf2 and default.mid and enjoy!\\n\\nCredits\\n\\nschellingb - TinySoundFont (includes MIDI parser + soundfont engine)", 
            "app_dls": 489, 
            "md5": "035646f281f2454b571643f6fa60c487"
        }, 
        {
            "category": "game", 
            "binary": "/switch/renpy-switch/renpy-switch-the-question-v1.7.5.nro", 
            "updated": "23/12/2020", 
            "name": "renpy-switch", 
            "license": "MIT", 
            "title": "renpy-switch", 
            "url": "https://github.com/uyjulian/renpy-switch/releases", 
            "description": "Open source port of Ren'Py to the Nintendo Switch", 
            "author": "uyjulian", 
            "changelog": "1.7.5\\n\\nAdd required pygame_sdl2 modules\\nrenpy-switch-the-question-v1.7.5.nro is a sample visual novel entitled \"The Question\" that can be run on your Nintendo Switch.\\nrenpy-switch-sdk-v1.7.5.7z contains the files needed to build your own game, documentation named README.html, and an .elf file containing debugging symbols in the event an error occurs to assist in debugging.\\n\\n1.7.2\\n\\nUse unbuffered file reading\\nMore allocation related checks in media subsystem\\n\\n1.7.1\\n\\nNow actually using CPython 2.7.18 with the additional modules\\nUpdate to libnx 3.2.0\\nCorrect aspect ratio when aspect ratio of project is not 16:9\\nPartially automated packaging\\nAdded instructions on how to create nro using the files from the SDK archive\\nCorrected 3rd party library build instructions\\n\\n1.7\\n\\nOut of memory workaround removed (making it more likely that you can rollback, save, and restart the game)\\nOverclock removed\\nBetter error messages with error applet\\nMostly complete libnx bindings\\n_socket, _hotshot, and imageop modules added\\npymalloc now allocates memory aligned to page boundary\\nShow a helpful error message and quit when launched as applet\\nUpdate to libnx 3.1.0\\nUpdate to CPython 2.7.18\\nPython libraries are now imported from zip file using zipimport\\nIntegrated extra libraries into main distribution\\nUpdate to switch-sdl2 2.0.12\\nrenpy-switch-the-question-v1.7.nro is a sample visual novel entitled \"The Question\" that can be run on your Nintendo Switch.\\nrenpy-switch-sdk-v1.7.7z contains the files needed to build your own game, documentation named README.html, and an .elf file containing debugging symbols in the event an error occurs to assist in debugging.\\n\\n\\n\\n1.6.1\\n\\nno changes to sample nro.\\n\\n1.6\\n\\nSimplified build system\\nFixed controller support\\nTrimmed down executable size by using a special build of ffmpeg\\nPartial libnx bindings\\nAutomatically change clock based on if expensive operations are being done\\nJoin audio playback threads after they are finished\\nUpdated to Ren'Py 7.3.4; includes rendering bugfixes\\n\\nSimplified build system\\nTouch screen support\\nUpdated to Ren'Py 7.3.3; includes changes to reduce chance of running out of thread resources\\n\\n\\n1.4\\n\\nEnable optimization mode; now uses .pyo files instead of .pyc files\\nReverted changes to threading; now using pthread again\\nUse pthread_exit when exiting thread instead of doing nothing\\nAdd gl2 subsystem modules; not fully working yet\\nAdd patches for video playback\\nDisable Mesa debugging\\nClear some memory when loading image assets has failed; may reduce the chance of data aborts\\nCompiled with libnx v2.5.0, fixing controller input on firmware 9.0.0", 
            "screens": 0, 
            "extracted": 62149, 
            "version": "1.7.5", 
            "filesize": 33668, 
            "details": "This repository contains a port of Ren'Py to the Nintendo Switch.\\n\\nsample visual novel entitled \"The Question.\"\\n\\nTo create your own game please refer to the SOURCE link for info.\\n", 
            "app_dls": 4700, 
            "md5": "025fb6edd8f3d1ad2cf8888682a82d42"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/VGMplayerNX/VGMPlayerNX.nro", 
            "updated": "08/09/2019", 
            "name": "VGMplayerNX", 
            "license": "GPLv2", 
            "title": "VGMPlayerNX", 
            "url": "https://github.com/simontime/VGMPlayerNX/releases", 
            "description": "A WIP VGM player for Nintendo Switch.", 
            "author": "simontime", 
            "changelog": "0.1\\n\\nAlpha Prerelease\\n", 
            "screens": 0, 
            "extracted": 10792, 
            "version": "0.1", 
            "filesize": 4828, 
            "details": "A WIP VGM player for Nintendo Switch.\\n\\nIt's a start.\\n\\nControls:\\n\\nZL/ZR: Previous/Next track\\nA: Select file or directory / Play/Pause\\nB: Stop / Go back directory\\nX: Change play mode\\n+: Exit", 
            "app_dls": 2015, 
            "md5": "58aed08160a52e09b6cd60a1f6b7a8fe"
        }, 
        {
            "category": "game", 
            "binary": "/switch/jellycar/JellyCar.nro", 
            "updated": "16/03/2020", 
            "name": "jellycar", 
            "license": "n/a", 
            "title": "JellyCar", 
            "url": "https://marcinp.xyz/2020/03/14/jellycar-for-swich/", 
            "description": "JellyCar for Swich", 
            "author": "Drakon", 
            "changelog": "n/a", 
            "screens": 6, 
            "extracted": 46961, 
            "version": "not_listed", 
            "filesize": 38257, 
            "details": "It finally happened. Switch version of the game is released.\\nIt took me far more time that i was expecting..\\n\\nTo clarify \u2013 It wasn\u2019t so hart to port it to Swich. There\u2019s OpenGL 4.3 for rendering, SDL2 for sound , input and touch is also easy. More challenging was finding Switch that I could use to test game\\n\\nSimply I didn\u2019t have time or power to work on it.\\n\\nSource code will be released shortly after some last cleanup.", 
            "app_dls": 2963, 
            "md5": "5ce592f8d9cc12b3847080dba27d1a8a"
        }, 
        {
            "category": "game", 
            "binary": "/switch/fheroes2/fheroes2.nro", 
            "updated": "15/12/2024", 
            "name": "fheroes2", 
            "license": "GPLv2", 
            "title": "fheroes2", 
            "url": "https://github.com/ihhub/fheroes2", 
            "description": "Free Heroes of Might and Magic II engine", 
            "author": "dimag0g", 
            "changelog": "1.1.4\\n\\nFix passability logic for several objects on the Adventure Map\\nImprove AI behavior during battles\\nAdd Virtual numpad support and a new Lean-To object variant\\nOver 20 issues have been closed since the 1.1.3 release\\n\\n1.1.3\\n\\nAdd language support for map format and fix several issues with the Editor\\nImprove AI on the Adventure Map and speed up its decisions\\nExpand translation support for more buttons and the Virtual Keyboard\\nOver 30 issues have been closed since the 1.1.2 release\\n\\n1.1.2\\n\\nImprove AI behavior on the Adventure Map and remove most of bonuses for AI heroes\\nFix multiple Editor related issues and add support for alliances on the created maps\\nImprove translation support by supporting more languages for the Virtual Keyboard\\nFix multiple rendering issues in several dialogs\\nOver 40 issues have been closed since the 1.1.1 release\\nFull list of changes can be found here:\\n  https://github.com/ihhub/fheroes2/wiki/Change-Log\\n\\n1.1.1\\n\\nAdd support for Rumors, Daily Events and special conditions in the Editor\\nUpdate several UI dialogs for the Editor\\nRework AI bonuses logic and fix rare cases with AI behavior on the Adventure Map\\nOver 40 issues have been closed since the 1.1.0 release\\n\\n1.1.0\\n\\nIntroduce the new Editor to the engine, which allows to create and play new maps\\nRework several in-game dialogs\\nImprove AI behavior regarding enemy heroes and castles\\nUpdate multiple translations\\n\\n1.0.13\\n\\nImprove list scrolling and add slide to attack action on touch devices\\nAdjust campaign difficulties and fix carry over mechanics for campaigns\\nUpdate numerous texts and UI elements\\nAdd the Eraser tool for the Editor (accessible only for developers at the moment)\\nOver 30 issues have been closed since the 1.0.12 release\\n\\n1.0.12\\n\\nImprove AI's defensive tactics in battles and add surrender logic\\nFinish adding all of the Adventure Map objects that can be added in the Editor (accessible only for developers at the moment)\\nAdjust the AI performance at different difficulty levels and improve its logic on the Adventure Map\\nUpdate several UI dialogs and improve overall game performance\\nOver 50 issues have been closed since the 1.0.11 release\\n\\n1.0.11\\n\\nExpand Battle Only mode with saving functionality and updated UI\\nAdd Town and Ocean objects placement in the Editor, and implement base file format for maps (accessible only for developers at the moment)\\nImprove the logic of AI defensive tactics\\nRework multiple dialogs, fix and speed up several rendering issues\\nOver 30 issues have been closed since the 1.0.10 release\\n\\n1.0.10\\n\\nTeach AI to use marketplaces to boost their castle development and improve AI decision making logic during battles\\nAdd erase tool, artifact and treasure placement in the Editor, and implement possibility to add new future heroes (accessible only for developers at the moment)\\nRework multiple dialogs, fix and speed up several rendering issues\\nAdd new hero action button icon\\nOver 30 issues have been closed since the 1.0.9 release\\n\\n1.0.9\\n\\nImprove the AI logic regarding spells and monster positioning on the battlefield as well as path planning logic on the Adventure Map\\nAdd the ability to confirm actions in battle for touch devices\\nUse the \"continue movement\" button on the Adventure Map to interact with an object a hero is standing on\\nMake the AI easier on low difficulties\\nImplement roads, streams, monsters and heroes placement in the Editor (accessible only for developers at the moment)\\nUpdate settings on the Adventure Map\\nExpand the Hot Keys window\\nOver 40 issues have been closed since the 1.0.8 release\\n\\n1.0.8\\n\\nEnhance functionality of Load/Save file window\\nImprove AI behavior during battles\\nExpand translation coverage including vertical buttons, missing window titles and font letters\\nImplement terrain transitions in the Editor (accessible only for developers at the moment)\\nLimit the AI's Dimension Door spell usage based on the selected map difficulty\\nOver 50 bugs have been fixed since 1.0.7 release\\n\\n1.0.7\\n\\nImprove AI logic in pathfinding, battle decisions and add support of Summon Boat spell usage\\nTranslate many in-game buttons and fix rendering for multiple windows\\nFix event handling and fog discovery by human and AI heroes\\nExpand Android Toolset to support importing and exporting save files\\nAdd terrain brush functionality into Map Editor (accessible only for developers at the moment)\\nOver 40 bugs have been fixed since 1.0.6 release\\n\\n1.0.6\\n\\nSpeed up resource loading and overall rendering\\nFix multiple issues with button rendering and add in-game pixel correction for many images\\nImprove AI behavior on the Adventure Map for hero and castle handling as well as for interaction with some objects\\nAllow to lower the campaign difficulty during playthrough\\nCreate basic Map Editor GUI (accessible only for developers at the moment)\\nOver 20 bugs are fixed since 1.0.5 release\\n\\nsdl2_dev\\n\\nImprovements for FR and RU translations\\n\\n0.9.4\\n\\nUpdate to upstream 0.9.4 (lots of campaign-related improvements)\\nOld saved games may not be compatible\\n\\n0.9.1\\n\\nUpdate to upstream 0.9.1\\nUpdate to libnx 4.0\\nAdded key shortcuts for common actions (see readme)\\n\\n0.9.0\\n\\nUpdate to upstream 0.9.0\\nScreen resolution can be changed (click on the door next to \"Load game\" sign)", 
            "screens": 0, 
            "extracted": 18366, 
            "version": "1.1.4", 
            "filesize": 7549, 
            "details": "Details\\nInstallation\\n\\nYou will need a copy of the official game to run this port. Put the game files in /switch/fheroes2 (specifically ANIM, DATA, MAPS and MUSIC folders), ANIM and MUSIC folders are optional: you can play without any music or movies. If you don't have the ANIM folder, create it and copy whatever *.smk files you have from DATA to ANIM.\\n\\nControls\\n\\n- Touchscreen - emulates mouse, including dragging\\n- L-stick - move mouse cursor\\n- R-stick/D-pad - scroll\\n- A - left mouse click\\n- B - Right mouse click\\n- X - Escape\\n- Y - Enter\\n- (+) - Cast spell\\n- (-) - End turn\\n- R - Cycle through towns\\n- L - Cycle through heroes\\n\\nMore info at https://github.com/dimag0g/fheroes2/tree/switch", 
            "app_dls": 4454, 
            "md5": "2684a3a3edff7162bb7704f454f3f2c8"
        }, 
        {
            "category": "game", 
            "binary": "/switch/kartswitch/kartswitch.nro", 
            "updated": "09/10/2020", 
            "name": "Kartswitch", 
            "license": "GPLv2", 
            "title": "Kart switch", 
            "url": "https://github.com/heyjoeway/Kart-Public/releases", 
            "description": "SRB2 Kart Public", 
            "author": "heyjoeway", 
            "changelog": "1.3\\n\\nNo Switch-specific changes. Unlike previously, this build does feature support for HTTP downloads!\\n\\nFor the full notes on 1.3 read here: https://github.com/STJr/Kart-Public/releases/tag/v1.3\\n\\n1.2\\n\\nJust updating Kart to 1.2. No Switch-specific changes. However, this build does not feature the new support for HTTP downloads at the moment. You'll still have to download your add-ons the old-fashioned way.\\n\\nFor the full notes on 1.2 read here: https://github.com/STJr/Kart-Public/releases/tag/v1.2", 
            "screens": 0, 
            "extracted": 540467, 
            "version": "1.3", 
            "filesize": 223815, 
            "details": "SRB2Kart is a kart racing mod based on the 3D Sonic the Hedgehog fangame Sonic Robo Blast 2, based on a modified version of Doom Legacy.\\n\\nThis fork aims to support the Nintendo Switch.\\n\\nFeatures\\nFull online support\\nFull mouse/keyboard support\\nFull software keyboard support\\nNotes\\nI've included a kartconfig.cfg that sets the resolution to 800x450 by default. It doesn't really do anything else so you can leave it out if you'd like.\\nThe game takes a bit to boot. A faster SD card may help with this.\\nWithout a config file, the game's default resolution is 320x200. I recommend setting it to 800x450 for the best balance of performance and visuals.\\nThe game continues to run while on the Switch's home screen when you are unable to pause to prevent lag-switching.\\nIf you want to play the game with mouse/keyboard, you'll have to bind most of the buttons yourself.\\nAll button bindings are set to match the Xbox controller layout (Xbox A -> Switch B, Xbox X -> Switch Y, etc.)", 
            "app_dls": 3730, 
            "md5": "5f6d148acbc33cce441d06728c30ef56"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/milkytracker/milkytracker.nro", 
            "updated": "15/09/2022", 
            "name": "milkytracker", 
            "license": "GPLv3", 
            "title": "MilkyTrackerNX", 
            "url": "https://github.com/retronx-team/MilkyTrackerNX", 
            "description": "An FT2 compatible music tracker", 
            "author": "p-sam", 
            "changelog": "1.2.0-nx4\\n\\nCompiled against latest libnx (v2.5.0)\\nLatest upstream changes merged\\nBuild script refactored to remove redundant dependencies\\n\\n1.2.0-nx3\\n\\nSmall update which maps dpad buttons to keyboard arrows\\n\\n1.2.0-nx2\\n\\nThis release mainly adds controller shorcuts, and a number of fixes/improvements to file loading and touch input.\\n\\nPort specific controls\\nTouch screen : tap to click (hold controller L or R to right click)\\n\\nControllers shotcuts:\\n\\nDPAD-LEFT / Y \u2192 Keyboard CTRL\\nDPAD-UP / X \u2192 Keyboard SHIFT\\nDPAD-RIGHT / A \u2192 Keyboard ENTER\\nDPAD-DOWN / B \u2192 Keyboard SPACE\\nLB / RB \u2192 Mouse click (hold controller L or R to right click)\\nStick \u2192 Mouse move (pushing on the stick allows you to change speed)\\nPlus / Minus \u2192 toggle mouse move speed\\nRefer to the MilkyTracker readme for all keyboard shortcuts available.", 
            "screens": 0, 
            "extracted": 9573, 
            "version": "1.2.0-nx5", 
            "filesize": 3514, 
            "details": "MilkyTracker is an multi-platform music application for creating .MOD and .XM module files. It attempts to recreate the module replay and user experience of the popular DOS program Fasttracker II, with special playback modes available for improved Amiga ProTracker 2/3 compatibility.\\n\\nRefer to http://milkytracker.titandemo.org/?about for further details.\\n\\nPlease read the file INSTALL.md for installation instructions.\\n\\nThe docs/readme_unix file contains notes specific to the SDL port of MilkyTracker.\\n\\nRefer to platforms/nx/README.md for info specific to the Switch port of MilkyTracker.", 
            "app_dls": 1653, 
            "md5": "573bbc8ddc6508e355ddb9390aba2812"
        }, 
        {
            "category": "game", 
            "binary": "/switch/openfodder/openfodder-switch.nro", 
            "updated": "23/10/2018", 
            "name": "openfodder", 
            "license": "none", 
            "title": "Open Fodder", 
            "url": "https://github.com/keeganatorr/openfodder-switch/releases", 
            "description": "An open source port of Cannon Fodder ", 
            "author": "keeganatorr", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 82233, 
            "version": "1.4", 
            "filesize": 35930, 
            "details": "Cannon Fodder is an action-strategy shoot 'em up game developed by Sensible Software and published by Virgin Interactive.\\n\\nThe game is military-themed and based on shooting action but with a strategy game-style control system. The player directs troops through numerous missions, battling enemy infantry, vehicles and installations.\\n\\nOpen Fodder is an open source version of the Cannon Fodder engine, for modern operating systems.\\n\\n\\nControls\\nKeys\tControls\\nD-Pad or Analog\tMove Mouse\\nA or ZR\tClick\\nB or ZL\tFire\\nX\tSpeed up cursor\\nY\tSwap alt weapon\\nClick+Fire\tUse alt weapon\\nPlus\tPause\\nMinus\tShow map preview\\nMinus+L\tDecrease window size\\nMinus+R\tIncrease window size\\nPlus+Minus\tGo back\\n\\n\\nTHIS COME WITH THE AMIGA VERSION PRE PACKAGED NON OF WHAT IS WRITTEN BELOW IS REQUIRED AS WE HAVE DONE IT FOR YOU . however i have included this info should you struggle to have it run .\\n\\nRequires a copy of Cannon Fodder (DOS or Amiga, Amiga files work better)\\n\\n[DOS]: https://www.gog.com/game/cannon_fodder\\n\\n[Amiga]: http://www.whdownload.com\\nDownload this archive https://github.com/OpenFodder/data/releases/download/1.4/OpenFodder.zip. And extract the contents of OpenFodder/ to /switch/openfodder/ on your Nintendo Switch SD card.\\n\\n[DOS] Copy 'CF_ENG.DAT' from the CD (or the GOG install destination) to the /switch/openfodder/Data/Dos_CD folder.\\n[Amiga] Copy the contents of 'cf_data' into the /switch/openfodder/Data/Amiga directory.\\nCopy openfodder-switch.nro to /switch/openfodder/ and boot the game through the homebrew launcher.", 
            "app_dls": 1794, 
            "md5": "be6279ac1d7d62c85ba6674561f62655"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Goldleaf/Goldleaf.nro", 
            "updated": "20/08/2023", 
            "name": "Goldleaf", 
            "license": "GPLv3", 
            "title": "Goldleaf", 
            "url": "https://github.com/XorTroll/Goldleaf/releases", 
            "description": "Nintendo Switch title installer & manager", 
            "author": "XorTroll", 
            "changelog": "v1.0.0\\n\\nNSP installs have been (finally) made multithreaded - I've personally noticed up to 25% faster install times, but this speedups might be even greater ;)\\n\\nProper support for multi-program titles was added (for installing, browsing and exporting them correctly)\\n\\nSwitched to an alternative result system via arc, so that now more system results have proper names/descriptions for more readability\\n\\nImproved various internal parts via caching or general optimizations\\n\\nAdded support to check titles with no data (archived content, gamecard titles without the gamecard inserted, actually corrupted content, etc.)\\n\\nExtended keyboard support, now supporting other kinds of characters (particularly fixed support for account renaming)\\n\\nFixed an annoying ticket/cert exporting bug which caused invalid NSP exports being generated\\n\\nNow one can mount and explore homebrew NROs' RomFs\\n\\nUpdated some language translations (thanks a lot to all the people who frequently help with that <3)\\n\\nAdded support for 12h/24h time display and configuration\\n\\nSupport for NXThemes was removed\\n\\nAdded a setting to allow custom NSP installation copy buffer sizes\\n\\nSlightly improved random UI color generation\\n\\nFixed menu scrollbars behaving incorrectly in menus with too many items\\n\\nFixed a bug where one could exit Goldleaf in the middle of installing NSPs, copying files, etc.\\n\\nImproved the file/directory copy menu and content export menu UIs\\n\\nAdded a setting to disable showing hidden files/directories (those starting by '.' in their name)\\n\\nNow showing a deletion dialog after a NSP install is disabled by default, and a setting was added to enable/disable it\\n\\nv0.10.1\\n\\nFixed a bug where the location of multiple NSP installs would be incorrectly selected\\n\\nContent menu navigation was improved (exiting doesn't suddenly go back to the main menu, etc.)\\n\\nAdded support for Traditional Chinese\\n\\nUpdated key generation information (for latest system versions)\\n\\nContent menu options are properly set now: gamecard contents have proper options now, and other fixes/improvements in option code\\n\\nDumping is now referred to as exporting, and exported contents now go inside /export instead of /dump\\n\\nAdded menu for Goldleaf's own settings, currently only supporting selecting custom language support and ignoring required firmware versions on content installs\\n\\nAmiibo dumping has been improved, now allowing to dump the amiibo's application area (game savedata) if it exists, and its mii in the legacy 3DS format.\\n\\nRedesigned ticket menu (now all tickets, even used ones, are shown), added support for exporting them\\n\\nFixed a bug where cancelling URL text input when browsing a web page would attempt to open the web browser anyway\\n\\nAdded support for language-specific icons in NSP installs, so that now Goldleaf attempts to find and show the icon corresponding to Goldleaf's language (which is by default the system language)\\n\\nFixed invalid/nonsense \"game played since\" values\\n\\nv0.10\\n\\nUpdated for latest libusbhsfs/Plutonium changes, this last one probably means some UI bugs may have been fixed\\nWhen browsing a webpage, the selected user is used\\nSome improvements on the text/hex reader, which is now slightly faster\\nNew supported languages: Japanese, Portuguese, Brazilian, Simplified Chinese, Korean\\nGlobal and user title playstats are shown instead of just user ones (when a user is selected)\\nSelected images on the file browser are now shown on the options dialog, as a preview\\nSupport added for some recent installable contents (known as \"sparse\" contents)\\nOther various bug fixes\\n\\nv0.9\\n\\nI know, I know, it's been a while...\\n\\nGeneral\\nSimplified directory deleting logic for both Goldleaf and Quark, making everything less slower (thanks @pheki)\\nGoldleaf\\nIntroducing savedata browsing! select a game from the game manager menu, and mount it's savedata. Note that, if you forget to unmount them manually, they will be automatically unmounted when Goldleaf is exited\\n\\nSupport for firmware installing, via Atmosphere's ams:su service extension!\\n\\nNow fatal crashes are avoided, and Goldleaf will just display an error message via the console's error applet, and save its own report with information about the crash/error.\\n\\nSimplified and cleaned a lot of internal code, hopefully making everything more stable\\n\\nUpdated libnx and Plutonium - this implies support for previously unsupported special text (Japanese and Chinese characters, etc.) with last Plutonium\\n\\nRemoved emuiibo manager - emuiibo's overlay is now the optimal and recommended manager for emuiibo\\n\\nAmiibo dumping support was updated to match emuiibo's format\\n\\nNon-lowercase file extensions (.TXT, .biN, .Nsp, etc.) are now properly supported\\n\\nFixed resetting a title's launch version, which wasn't properly implemented on previous releases\\n\\nNow dumped firmware will be compatible with Atmosphere's Daybreak firmware tool, deprecating Choi support (as Daybreak is a better and safer alternative)\\n\\nRemoved support for dumping firmware as NSP packages, as no relevent firmware tool makes use of that format\\n\\nReboot-to-payload functionality (which can be used with .bin files) has been internally improved with Atmosphere's bpc:ams extensions\\n\\n\ud83c\udf08 Random color schemes/pallets are used by default now, instead of default light/dark blue schemes\\n\\nFixed a small bug where no personalized tickets would be detected if no common tickets were present in the console\\n\\nIntroducing USB drive support, thanks to me and DarkMatterCore's new project: libusbhsfs, a library to include USB drive support in your homebrew projects!\\n\\nBoth FAT (including exFAT) and NTFS filesystems are supported ;)\\nOther minor code improvements or small bug fixes\\n\\nv0.8\\n\\nGeneral\\nUpdated to latest libnx. This simplifies the code, and fixes potential issues? old libnx could have had.\\n\\nSome parts of the code were rewritten or simplified, in order to try to improve Goldleaf's performance. A lot of nonsense or unused code was removed, and much stuff was simplified thanks to latest libnx changes.\\n\\nRemoved forwarder support. There are less ban-baity ways to launch homebrew as applications (via uLaunch or using Atmosphere's title override)\\n\\nApplication\\nFixed a bug where deleting the currently selected user would leave Goldleaf in a buggy state (because it would still think that the user is valid)\\n\\nNow amiibo dumping is done via \"debug\" amiibo/NFP services. Since emuiibo intercepts user (and soon system) services, using debug services means Goldleaf will be able to dump real amiibos even if emuiibo is activated.\\n\\nCustom exception/crash handling: now, when a crash happens (usually segmentation faults), it won't cause a fatal error, Goldleaf will instead save a simple crash report to /reports and exit normally. Same thing for fatal crashes, which also log fatal reports there.\\n\\nNow rebooting will reboot to RCM/payload, same way as if you rebooted from HOME menu's power menu.\\n\\nThe web browser system was improved, adding now a custom menu, and the possibility to save a page as a bookmark after having browsed it.\\n\\nAdded an integrated emuiibo v0.4.0 manager! This simplifies a lot using virtual amiibos:\\n\\nUnlike other managers, Goldleaf checks the amiibo and attempts to get its picture from AmiiboAPI, otherwise displays a default icon.\\n\\nYou can change emuiibo's status (on, on for one use and off) and select a certain amiibo to use.\\n\\nv0.7.3\\n\\nGeneral\\n\\nNow the console's supported key generation is read from BOOT0 (it was hardcoded manually before) - this means that Goldleaf won't have to be updated in new console updates to fix key mismatch errors! Thus, 9.0.1 support was also fixed.\\nUpdates\\n\\nGoldleaf's updater is broken on 0.7.2 (and probably lower versions). PLEASE, DON'T USE IT TO UPDATE TO 0.7.3!. Luckily, it is fixed for this version, so next versions (0.7.x, 0.8...) should download fine when they get released soon.\\n\\nPending update detection was barely broken, but has been fixed too. As mentioned in previous releases, you can export it to install it safely with ChoiDujourNX, and delete it from system after that.\\n\\nv0.7.2\\n\\nQuick bugfix\\n\\nv0.7.1\\n\\n9.0.0 support was added.\\n\\nIntroducing a new, properly made PC client: Quark! (since Goldtree was made as quick as possible, I've wanted to remake it from scratch since 0.1...)\\n\\nQuark is going to be Goldtree's new replacement.\\n\\nIt's Java and cross-platform, supporting Windows, Linux and Mac.\\n\\nIt has a fancy, Material-style UI, which you can interact with while USB is handled in the background.\\n\\nNote that it's still experimental! You will need JRE/JDK 8u60 or higher to use it.\\n\\nConsole information layout has been remade into a new layout, introducing some new cool and QoL features:\\n\\nA new menu allows to view the current console update's version, plus an option to export it!\\n\\nIn case the console has a pending update downloaded (when the system auto-downloads an update) it can also be exported or removed, so that booting into Maintenance menu isn't neccessary to do so.\\n\\nUpdates can be exported in directory (to be later installed with Choi) or in NSP form.\\n\\nTitle exporting\\n\\nNSP generating code was rewritten from scratch, what might involve performance improvements.\\n\\nExported contents' directory was moved to /dump/title since update are exported to /dump/update\\n\\nv0.7.0\\n\\n===Remote PC===\\n\\nUnicode is now supported. No more complaints with special characters in drive labels or folders!\\n\\nRead size was dropped again to 8MB (from previous 16MB), to make USB more stable (16MB size might cause unstability)\\n\\nAdded option to select a file directly on the remote PC tool (basically same system as on <=0.5 Goldleaf versions, for those who like the classic system!)\\n\\nGoldtree's messages were slightly changed to be more accurate. Now it shows its version to avoid confusion between different executables.\\n\\n===NSP installs===\\n\\nThe NSP's name is shown above (instead of the directory).\\n\\nETA (estimated time for the install to finish) is now shown too.\\n\\nNow Goldleaf always obtains the NSP's key generation (previously only when it had a ticket) and compares it to a computed system one, in order to block installs with higher key generations (mostly since the contents couldn't be decryptable, thus utterly useless)\\n\\nNow install location is just chosen once, at the start of batch NSP installs (all NSPs within a directory)\\n\\nMulti-content installations (just a few titles currently) work now (didn't seem to work on 0.6.x)\\n\\n===Title dump / export===\\n\\nTitles are always dumped inside concatenation files (HOS's archive bit directories, used to support +4GB files), what means +4GB titles can safely be dumped on FAT32, and directly installed.\\n\\nFixed errors dumping updates and DLCs. They should work fine now.\\n\\n===General===\\n\\nA big part of the code was reformatted: several small bugs fixed, others not that small mentioned below.\\n\\nAdded a warning and success / failure messages for directory deleting.\\n\\nGoldleaf no longer relies on its custom libnx fork, since its only worthy difference was its (slightly) custom USB code, which has been merged in Goldleaf. This doesn't involve any performance changes, but less complexity in order to build the project.\\n\\nCopying files from PC to SD which are over 4GB is now correctly handled, creating a concatenation file (see above) to correctly handle it.\\n\\nThe forwarder was updated with hbloader's latest version, thus now the forwarder's version is 0.2.\\n\\n===User / accounts===\\n\\nUsers have a more important role in Goldleaf. Now an account has to be selected in order to use several user-related features.\\n\\nAdded support for unlinking (locally ONLY) accounts, mainly for banned people who want to unlink their accounts in order to delete them.\\n\\n===Content manager===\\n\\nFixed a bug where the base title's size would be shown always, even when checking only updates or DLC.\\n\\nAdded play statistics support, both for user-only (user must be selected first, see above) and global, this includes last played time and total play time for both.\\n\\nFixed bugs where contents whose base title is on a different location than updates/DLCs would be shown incorrecly.\\n\\n===UI===\\n\\nUnicode changes stated above\\n\\nThe system's shared font is no longer used, due to its lack of unicode characters. Instead, a new font is used from now on: Roboto (medium), aka Android's standard font.\\n\\nTwo new clickable icons have been added to the bottom right side of Goldleaf's top banner: one for user selection, while the other one for help and control information.\\n\\nSome small corrections made: size adjustments, with no connection no IP or default text will be shown from now on.\\n\\nPlutonium corrections with newlines and text sizes make dialog sizes more well measured now (previously, a single newline would make the dialog as wide as the entire screen)\\n\\nSeveral icon changes (forwarder's icon and amiibo dump), thanks to C4Phoenix for all his help with graphic resources since 0.1!\\n\\nGoldleaf now has been compiled with an experimental Plutonium branch which uses smart pointers instead of raw pointers aiming no memory leaks!\\n\\nNow, Goldleaf also supports dutch language! Thanks a lot to Mega for helping with the translation!\\n\\nv0.6.1\\n\\nFixed bugs present in 0.6:\\n\\n+4GB files are correctly handled now by the USB (remote PC) system\\n\\nNow Italian language works fine (strings were missing, what made Goldleaf insta-crash)\\n\\nInstalling a NSP to console memory would later open the file for hex viewing (now fixed and nothing else is done after install)\\n\\nNew features:\\n\\nInstall sizes (MB/s) are now accurately reported, with decimal values\\n\\nWeb browser can only be used launched from the forwarder (previously any application would work)\\n\\nThe forwarder was not updated. Goldtree received few string changes and more changes in order to fix +4GB file issues.\\n\\nv0.6\\n\\n(My god, it's been 4 months!)\\n\\nNSP installs:\\n\\nAs Goldleaf's internal filesystem handling has been completely remade, installs have been internally remade. This apparently results in slightly faster installs, at least in my case.\\n\\nNow the user won't be asked to ignore required firmware version or not, as that can be configured on the config.\\n\\nSleep-mode is disabled now in order to avoid to interrupt installs.\\n\\nNow all the NSPs inside a directory can be installed in a row (see below).\\n\\nUSB installs:\\n\\nUSB installs have been improved into a new feature: remote PC browser!\\n\\nNow you can directly browse your PC, plus any drives connected to it, as a regular filesystem, same as SD card or console memory.\\n\\nIt is also worth to mention that the new USB command system seems to be way, WAY more stable than any previous USB system in Goldleaf!\\n\\nAnyway, always keep in mind that it might freeze or cause bugs with folders with tons of files.\\n\\nFile systems:\\n\\nPresenting the new, remade USB system: remote PC browsing!\\n\\nInstead of a simple connection, it's a whole filesystem implementation over USB.\\n\\nBrowse your PC (Windows-only with Goldtree) directly from Goldleaf! Any extra drive inserted browsable by the PC will be browsable here.\\n\\nSince USB drives' support (fsp-usb service in Atmosphere) is still being worked on, you can use this system with drives inserted in your PC in order to browse or install files from there.\\n\\nTwo simple, QoL features have been added to filesystems (to directories in this case): the option to install all NSPs within the directory, and the option to set the archive bit on it.\\n\\nUI\\n\\nFor now on, Goldleaf main color will continue to be golden, but the \"secondary\" color along with gold is going to be blue.\\n\\nTherefore, both the icon and the main themes have been changed.\\n\\nGoldleaf auto-updating:\\n\\nNow Goldleaf supports updating itself, since https was supported on dkP. (this means direct access to GitHub for version checking and asset downloading)\\n\\nNevertheless, now Goldleaf's NSP is a forwarder, what means that just by updating the NRO you will target Goldleaf from HOME menu as always.\\n\\nYou can even upgrade the installed version if you want to!\\n\\nAs you may suppose, this requires internet connection :)\\n\\nAmiibo dumping support\\n\\nA new option has been added to the main menu, which adds support to dump real amiibos to be used with emuiibo.\\n\\nObviously, emuiibo 0.3 format is used. Please ensure you're also using the latest emuiibo version!\\n\\nv0.5\\nHuge UI refactor\\nUSB is in a better state now\\nNew and rebuilt content manager\\n\\nv0.4\\n\\nAtmosph\u00e8re v0.8.3's new feature, payload rebooting from the console itself, is also supported by Goldleaf! Binary *.bin files will have an option to be launched as payloads if Atmosph\u00e8re is detected running.\\n\\nThe old title manager has been refactored. Now, it can show ANY kind of content located in any partition, from system data archives to DLCs and updates, and regular titles. All of them can be removed individually.\\n\\nGoldleaf has the ability to detect the CFW currently running, which gets displayed on the CFW menu.\\n\\nNow the web browser is accessible even if Goldleaf isn't an installed title. It will use the WifiLogin web-applet, which has some limitations, but at least it's something.\\n\\nContent mounting (like NAND when being browsed or the NSPs when being installed) has been refactored to minimize any filesystem issues.\\n\\nSome icons were changed: NROs have a new icon, NCAs have now the old NROs icon...\\n\\nNSP exporting now warns with titles which are 4GB or higher, for risk preventing.\\n\\nUSB has been quite improved with experimental threads' syncing, which seems to make it more stable.\\n\\nRegular installs check for free size now.\\n\\nTickets show if they're used or not, so unused ones should be safe to remove.\\n\\nBoth USB and regular installations abort if the title is already installed.\\n\\nMinor fixes and corrections on texts and several options.\\n\\nv0.3\\n\\nNow it's checked that the base folders inside \"sd:/goldleaf\" are created before entering certain menus.\\n\\nFile browsers won't refresh the current directory's contents after copying a file as it was pointless and caused delay.\\n\\nThis version of Goldleaf supports libnx v2.0.0, which fixed a few bugs with USB, and also added native keyboard support.\\n\\nNow files and directories can be renamed in file browsers using the native keyboard.\\n\\nNow new files or directories can be created (files will be empty) by pressing L (for files) or R (for directories) in a file browser.\\n\\nNow the star feature, NSP dumping! This is quite experimental though, and could be unstable. Be careful using it!\\n\\nAnother console memory partition can be browsed appart from the three others: PRODINFOF\\n\\nBrief information about the different partitions is displayed when selecting the console memory browser.\\n\\nThe path of the key file has been moved from \"sd:/goldleaf/\" to \"sd:/switch/\" as other homebrews use this path.\\n\\nAfter removing tickets no dialog will be shown, the footer will inform of the process instead.\\n\\nThe top part of Goldleaf has been redesigned, which has a mini-text for the current menu. (e.g. current directory in SD card or console memory browsers)\\n\\nA warning dialog is displayed selecting USB installation as it's quite unstable for the moment.\\n\\nFixed small bugs with SD card NSP installation.\\n\\nNow file/directory copying has a progress bar to follow the copy process, instead of freezing the UI.\\n\\nWEB BROWSER! Yeah, you've read right, Goldleaf is the first homebrew tool to provide support for the console's internal browser.\\n\\nAccount manager! You can replace user's icon, delete them or rename them. Anyway, replacing the icon can be dangerous and banbait!\\n\\nNow no cert files are required to install a ticket, not even with NSP installs or USB installs. Goldleaf contains the public cert directly.\\n\\nMinor fixes on several dialogs and texts.\\n\\nv0.2\\n\\nSupposedly, now those random crashes browsing menus or filesystems are fixed now.\\n\\nWhen looking for the key file for NCAs or themes, now more names are supported (not just keys.dat): keys.dat, prod.keys, keys.txt or keys.ini.\\n\\nFixed bug which would not install the selected theme if qlaunch was not extracted, and it would just extract it without processing the theme.\\n\\nNow title 0100000000001013 is installed to qlaunch directory, previously user page themes wouldn't work for this issue.\\n\\nv0.1\\n\\nFirst Release", 
            "screens": 4, 
            "extracted": 13245, 
            "version": "1.0.0", 
            "filesize": 5006, 
            "details": "Easy-to-use title installer & manager for Nintendo Switch\\n\\nIf you are looking for Tinfoil, this is Tinfoil's safer and way more extended evolution.\\nBrief description\\nGoldleaf is a multipurpose tool, specialized on title installing from NSP packages, but with other utilities, such as NAND/SD browsing,\\n\\nYou can easily manage title-related stuff, like install titles via NSP packages or uninstall already installed titles.\\n\\nIf you know what FBI is (related to 3DS homebrew), this is a similar project for Nintendo Switch.\\n\\nDisclaimer\\nInstalling NSP packages can be dangerous.\\n\\nKeep in mind that there will always be a ban risk, and that NSPs with tickets are specially dangerous.\\n\\nIf you want to be safe, avoid connecting to the internet via airplane mode, or block Nintendo's services via special tools such as 90DNS.\\n\\nGoldleaf simply provides support for a normal NSP and/or ticket installation. The way you use them or the risks you are taking are your problem.\\n\\nGoldleaf gives the user the possibility to modify NAND files, by deleting them or allowing to copy new files there.\\n\\nThis can be dangerous, as deleting NCAs from the NAND contents can lead to unfixable errors. Image deleting all the EXE and DLL files from System32 folder. Well, the result would be similar.\\n\\nRemoving tickets from installed contents will make the system not to be able to recognise them as \"legit\" purchased, so it will refuse to launch them (in many cases, but NOT all cases)\\n\\nMain features\\nSD card and NAND browser\\n\\nA very simple but, in my opinion, one of the most useful features in Goldleaf. Just a file browser for the SD card or for NAND partitions, providing special support for some file formats:\\n\\nNSP (Nintendo Submission Package)\\n\\nIt's the official format used by Nintendo to provide installable content from their CDN servers.\\n\\nTechnically, it's a PFS0 (a simple file format containing several files) with NCA contents, sometimes XML and/or icon metadata (exported by official packaging tools), and a ticket and a cert in case they are signed with a titlekey (games are, system contents aren't).\\n\\nGoldleaf can install NSPs same way other official apps would, like DevMenu.\\n\\nAs a warning, I do not recommend installing NSPs in case you plan to go online. Installing content from unofficial tools (such as Goldleaf or the old Tinfoil) can lead to permanent bans from online services, and in severe cases, from every Nintendo service, even from updating the console or games. Install NSPs at your own risk.\\n\\nNRO (Nintendo Relocatable Object)\\n\\nOfficially is treated as a dynamic library object, similar to DLLs on Windows. This are loaded dynamically by applications at runtime.\\n\\nHomebrew uses them as executable binaries because as they can contain multiple data sections, we can use them to load extra info such as NACP (title, author and version), an icon, or even RomFs data to access at runtime.\\n\\nGoldleaf has the ability of launching NROs located at the SD card. Keep in mind that this feature usually can cause undefined behavior due to some difficulties cleaning up graphics so quickly.\\n\\nNCA (Nintendo Content Archive)\\n\\nThis format is the base format used by Horizon OS to store content.\\n\\nWhile the previously mentioned formats don't require any kind of cryptography to be extracted or used, NCAs have to be decrypted, so the user is required to provide the required keys to extract the content.\\n\\nNCAs have different sections, as well as other information. The two main sections are the ExeFs and RomFs: the ExeFs filesystem contains the code NSO binaries and a NPDM metadata file, while the RomFs contains different files to be accessed from the title.\\n\\nSome NCAs could also contain a special section, which is the section 0. This section contains the PNG and GIF logos displayed at the top-left and botton-right of the console when launching a title.\\n\\nNCAs don't have neccessarily those two sections. The program NCA, the base of any application or applet, will contain an ExeFs, and usually a RomFs in case it's a game or a system title with resources like settings or Home Menu.\\n\\nAppart from program NCAs there are some other NCA types: control NCA (NACP and icons), legalinfo NCA (HTML manuals and information), offline NCA (HTML documents in case the title wants to load them) content meta CNMT NCA (with title specific information)...\\n\\nGoldleaf has embedded hactool in his code, so it can extract those partitions from NCAs, if the keys are provided.\\n\\nNXTheme (Home Menu theme)\\n\\nThis format is developed by Qcean team, a format to handle Home Menu layout modding.\\n\\n+Goldleaf can install them, but it needs to have Home Menu's RomFs at sd:/goldleaf/qlaunch. If the keys used with other formats are provided, Goldleaf itself will locate the console's qlaunch and extract it to that directory.\\n\\nYou will have to reboot with CFW after installing a theme to see any changes.\\n\\nNACP (Nintendo Application Control Property)\\n\\nThis is the format used by Nintendo to store a title's name, version, author name and other information, like if the title supports screnshots or video captures.\\n\\nGoldleaf can parse a NACP file and display some of it's information.\\n\\nTickets and certificates\\n\\nTickets (.tik) and certificates (.cert) are the format used by Nintendo to provide encryption data for titlekey-signed titles (almost every game).\\n\\nNSPs usually contain them, and Goldleaf can install them if they are located in the SD card.\\n\\nTo install a ticket you will have to provide a certificate, both with the same name and in the same directory, with their extension. (example: sd:/game.tik and sd:/game.cert)\\n\\nThe NAND browser has almost the same support, but it's reccomended to use it only to export files via copying them to the SD card, to avoid any trouble. Goldleaf should warn when doing dangerous operations anyway.\\n\\nUSB installer and Goldtree\\n\\nYou can install NSPs via USB using Goldtree, a C# PC client to handle this installations.\\n\\nKeep in mind that USB installations are a bit unstable, and might bug sometimes.\\n\\nTitle manager\\n\\nGoldleaf's title manager will display all the titles installed in the system, both SD, NAND and the one in the gamecart if inserted.\\n\\nYou can view these titles' information, icon, install location and Application Id.\\n\\nTitles can also be completely uninstalled here. Keep in mind that deleting a title won't delete its savedata, that should stay on the system.\\n\\nTicket manager\\n\\nGoldleaf can get all the tickets installed on the console. While some of them will contain the name of the title they belong to, some could belong to DLC or other types of content despite not belonging directly to a title.\\n\\nYou can view the Application Id and the key generation of a ticket by selecting it.\\n\\nTickets can also be removed from the console. Removing tickets can be a dangerous option, as without them, titlekey-signed won't be allowed to boot by Home Menu.\\n\\nCFW configuration\\n\\nThis is mostly a useful menu for checking which CFWs are in the SD card and whichof them have any Home Menu modifications, meaning that a theme is probably installed there.\\n\\nYou can delete any Home Menu modifications of a certain CFW after selecting a CFW.\\n\\nConsole information\\n\\nOn this option, you can check the used size of the SD card, the entire NAND, and on the different NAND partitions.\\n\\nIt also displays the current firmware version the console is.\\n\\nAbout\\n\\nDisplays Goldleaf's logo and whether Goldleaf is running as a NRO from hbmenu or as a normal title.\\n\\nAs some other miscellaneous options, you can easily reboot or shut down your console from Goldleaf, by pressing ZL or ZR in any moment.\\n\\nProviding keys\\nIf you provide a file with several Switch keys (commonly named as prod.keys or keys.dat) you will be able to do some extra stuff with Goldleaf: (remember that you have to place it as sd:/goldleaf/keys.dat)\\n\\nUnless you already have dumped qlaunch's (aka Home Menu) RomFs (or at least the files within lyt folder) in sd:/goldleaf/qlaunch directory, you will need to provide the previously mentioned key file with several keys, so that Goldleaf can extract directly the RomFs of the console's qlaunch contents to use it.\\n\\nYou have the option to extract NCA contents (ExeFs, RomFs or section 0), but you will need the previously mentioned keys too.\\n\\nGoldtree and USB installs\\nUSB communication is slightly different from Tinfoil's one, so Tinfoil's old Python script, AluminumFoil nor other tools won't work properly.\\n\\nGoldtree will ask you to choose a NSP after establishing connection with Goldleaf, and it will be received and installed by Goldleaf.\\n\\nKeep in mind that USB support is a bit unstable, and sometimes it might fail. Anyway, it should work most of the times.\\n\\nBasic controls\\nThe controls are quite intuitive in Goldleaf, but here you have a brief explanation of them:\\n\\nPress A to select options from menus, browse folders, or in case it's a file, to browse a menu with file options (copy, delete...)\\n\\nPress B to cancel a dialog or to go back to the previous page / menu.\\n\\nPress X to paste the path of the clipboard. Obviously, this option is only available on file browsers. (SD or NAND)\\n\\nPress Y to browse a menu with directory options, similar to the one used with files, instead of browsing the directory. Obviously, this option is only available on file browsers. (SD or NAND)\\n\\nPress ZL or ZR anywhere to browse a menu with reboot / shut down options, in case you want to reboot or shut down the console.\\n\\nPress Plus (+) or Minus (-) to exit Goldleaf and return to hbmenu. This option is only available if Goldleaf is loaded as a NRO binary. (more special cases like this one below)\\n\\nMovement is quite obvious. Using the L-stick, the R-stick or the D-pad you can move through menu or dialog options. On menus (like the file browsers or the main menu) the R-stick provides a way faster scrolling.\\n\\nSpecial features\\nGoldleaf differs on some features depending on whether it is loaded as a NRO or as an installed title:\\n\\nGoldleaf can be exited via Plus (+) or Minus (-) buttons if it's loaded as a NRO, but as regular titles have to be exited from the Home Menu, this feature is not available as a title.\\n\\nGoldleaf disables Home button pressing while installing a NSP if it's loaded as a title, but this feature isn't available as a NRO binary for technical reasons related to applets.\\n\\nGoldleaf cannot launch NRO binaries if it's loaded as a title due to technical reasons. They can only be launched from another NRO binary.\\n\\nIssues and support\\nIn case you find a bug or you need help with Goldleaf, you have several places to ask.\\n\\nMany errors are very common and can be misunderstood, and you should document a bit for some errors instead of directly calling them issues:\\n\\nIt's a common issue for some NSPs, although they are completely valid ones, being detected as wrong NSPs. Although they can be really wrong NSPs, it is usually caused by firmware mismatch. For instance, in case you are trying to install a title which requires at least 5.1.0 version (which uses key generation 4) on a lower firmware version, it won't be recognised as a valid NSP for cryptographical reasons. (the console cannot decrypt the NSP because it is encrypted with unknown keys which are within 5.1.0 update)\\n\\nThe USB installation can sometimes freeze in the middle of the install. If that happens, try closing Goldleaf and Goldtree, uninstalling the wrongly-installed title and retrying.", 
            "app_dls": 415292, 
            "md5": "097319bd1a827782976e1c2b6455bd16"
        }, 
        {
            "category": "game", 
            "binary": "/switch/claw/OpenClaw.nro", 
            "updated": "12/10/2021", 
            "name": "ClawSwitch", 
            "license": "GPLv3", 
            "title": "ClawSwitch", 
            "url": "https://github.com/djmuted/ClawSwitch/releases", 
            "description": "port of OpenClaw", 
            "author": "djmuted", 
            "changelog": "beta4\\n\\nrebased to latest OpenClaw master branch (Jun 7, 2021)\\nbuilt with latest libnx\\nworks with Atmosph\u00e8re 1.1.1 and HOS 13.0.0\\nadjusted default audio volume\\nchanged the MIDI soundfont to GeneralUser GS\\n\\nbeta3\\n\\nadded background music support (thanks to usineur).\\nfixed analog controls\\nadded title opening music\\nIf you are updating, remember not to replace your old SAVES.XML file or else your saves will be gone!\\n\\nbeta2\\n\\nFixed score screen\\n\\nbeta1\\n\\nFirst public release", 
            "screens": 0, 
            "extracted": 161757, 
            "version": "beta4", 
            "filesize": 99240, 
            "details": "Captain Claw is a side-scrolling action platformer released on PCs by Monolith in 1997. The difficulty of the game is quite high, but still the game is really fun to play. Your goal is to defeat enemies, collect treasure and defeat bosses on your way.\\n\\nControls:\\nA - Fire (Pistol/Magic Claw/Dynamite)\\nB - Jump\\nX - Switch weapon\\nY - Melee attack\\nMinus - open in-game menu\\nD-Pad - walk left/right, look up/down, climb up/down\\nYou can also use the left analog to do anything the d-pad does, but it's still a bit wacky and not recommended.\\nThere are also touch controls emulating the d-pad, which are leftovers from the Android version. They will be removed in a next beta release. \\n\\nBugs:\\n\\n- not all levels are yet implemented, the game is playable to the 10th level, 11 is playable but very buggy and not yet complete\\n- analog controls are wacky (use the d-pad)\\n- music does not yet work, but in-game sounds do\\n- FPS drops to 55 in docked mode, making the sound a bit distorted\\n\\nCheats:\\n\\nYou can modify your game saves by editing /switch/claw/SAVES.XML file. ", 
            "app_dls": 5183, 
            "md5": "60f76ee02e8bcdb850695c23d7ba3714"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Bricks-NX/Brick.nro", 
            "updated": "12/05/2021", 
            "name": "Bricks-NX", 
            "license": "GPLv2", 
            "title": "Bricks-NX", 
            "url": "https://github.com/EvilGhostDragon/Bricks-NX/releases", 
            "description": "simple brick game", 
            "author": "EvilGhostDragon", 
            "changelog": "1.0.1-alpha\\n\\nNow with powerups", 
            "screens": 0, 
            "extracted": 39140, 
            "version": "1.0.1-alpha", 
            "filesize": 14899, 
            "details": "Just Brick\\neveryone knows what it is\\n\\nA Game made with the Godot game engine", 
            "app_dls": 308, 
            "md5": "9c31e9cc5ca244bde958d63966413a8c"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Pong-NX.nro", 
            "updated": "01/06/2023", 
            "name": "PongNX", 
            "license": "n/a", 
            "title": "Pong-NX", 
            "url": "https://github.com/Zamacian/Pong-NX", 
            "description": "A Nintendo Switch version of Pong.", 
            "author": "Zamacian", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 9971, 
            "version": "1.0.0", 
            "filesize": 4148, 
            "details": "Use UP and DOWN on the D-Pad to move the left paddle . Use X and B to move the right paddle .\\n\\nYou can exit using MINUS or PLUS at any moment .\\n\\nAny other button will start the game if it isn't already .", 
            "app_dls": 466, 
            "md5": "5f91b12d82257971f9a74bab7ce65049"
        }, 
        {
            "category": "legacy", 
            "binary": "/switch/TicTacToeNX/TicTacToeNx.nro", 
            "updated": "25/01/2020", 
            "name": "TicTacToeNX", 
            "license": "none", 
            "title": "TicTacToeNX", 
            "url": "https://github.com/lorrdfarquad/TikTacToeNX/releases", 
            "description": "tictactoe game", 
            "author": "lorrdfarquad", 
            "changelog": "\\nMASTER : initial release", 
            "screens": 0, 
            "extracted": 291, 
            "version": "1.0", 
            "filesize": 112, 
            "details": "THIS APP LACKS SUPPORT FOR THE LATEST FIRMWARES AND THE DEVELOPER HAS CEASED PROGRESS ON THIS HOMEBREW. FIRMWARES ARE SUPPORTED UPTO AND INCLUDING 8.1.\\n\\n\\nMy version of tic tac to ported to the nintendo switch.\\n\\n\\n\\n.", 
            "app_dls": 2557, 
            "md5": "771852d18f852145b6b731953a1f0a78"
        }, 
        {
            "category": "game", 
            "binary": "/switch/T-Rekt-NX/T-Rekt_NX.nro", 
            "updated": "30/12/2018", 
            "name": "T-Rekt-NX", 
            "license": "GPLv3", 
            "title": "T-Rekt NX", 
            "url": "https://github.com/Manurocker95/T-Rekt-NX/releases", 
            "description": "T-Rekt for Nintendo Switch", 
            "author": "Manurocker95", 
            "changelog": "v1.1\\n\\nNow the save data is a json. You can now save as much data as you like ;)\\n\\nSettings are saved in data.sav.\\n\\nMultilanguage support with JSONs for every language.", 
            "screens": 0, 
            "extracted": 24857, 
            "version": "1.1", 
            "filesize": 16626, 
            "details": "T-Rekt for nintedo switch\\n\\nThe Dev has very little info on the application.", 
            "app_dls": 410, 
            "md5": "ec51c24123ae8452a73ad959a70634c5"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/desmume/DeSmuME-NX.nro", 
            "updated": "21/07/2018", 
            "name": "desmume", 
            "license": "GPLv2", 
            "title": "DeSmuME-NX", 
            "url": "https://github.com/Laproxi/DeSmuME-NX/releases", 
            "description": "Play DS roms! (in sd:/switch/desmume/roms)", 
            "author": "Laproxi MasterFeizz", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 4512, 
            "version": "0.0.3", 
            "filesize": 1653, 
            "details": "The last couple of days I decided to mess around with the switch, so for my first release I decided on a DS emulator.\\nThe interface is very crude based on the Vita port I worked on a few years back. Basically just put some roms inside sdmc:/switch/desmume/roms and play.\n\nPress + and - to exit", 
            "app_dls": 45607, 
            "md5": "0d38267d5d3adc9ddd628ff340fa6447"
        }, 
        {
            "category": "game", 
            "binary": "/switch/ssam_tfe/ssam_tfe.nro", 
            "updated": "04/01/2020", 
            "name": "Serious-Engine-TFE", 
            "license": "GPLv2", 
            "title": "Serious-Engine The First Encounter", 
            "url": "https://github.com/fgsfdsfgs/Serious-Engine/releases", 
            "description": "Switch port of icculus' fork of Serious Engine", 
            "author": "fgsfdsfgs", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 117357, 
            "version": "nx1", 
            "filesize": 78487, 
            "details": "Serious Sam Engine including The first encounter DEMO.\\n\\nWARNING: This port is very janky. Play at your own risk.\\n\\nKnown issues\\nThe game takes a long time to load.\\nPerformance is quite bad, especially on some levels, which seems to mostly be caused by dynamic lights.\\nThe stock demos desync. I'm not sure if this is because this is technically version 1.10 and those are from 1.07, or because of something I did.\\nBecause this is version 1.10 and most PC servers run 1.07, you can't connect to them. Not sure if I can just change the version number to 1.07, since that might cause desync if there are any significant differences.\\nLow framerate/broken timing in menus.\\nYou can't control the NETRICSA menus (except for quitting them with the PLUS button).\\nNotes\\nThis probably requires full RAM access, so don't run it from the Album.\\nIf the game hangs at the first NETRICSA screen, that means it's still loading, wait a few seconds.\\nI have enabled the \"Precache shadowmaps\" option by default, which results in less lag in game, but significantly increases load times. If you don't want that, you can disable it in \"Advanced options\" -> \"Rendering options\".\\nYou can turn dynamic lights off for a performance increase by setting shd_iAllowDynamic in Scripts/PersistentSymbols.ini to 0, but beware: dynamic lights are an integral part of some levels.\\nYou can bring up the console by pressing MINUS. Press A to enter commands.\\nPlay around with the Scripts/PersistentSymbols.ini file and Advanced rendering settings. I still haven't figured out the optimal configuration.\\nIf the game crashes, take a look at the log file in the game folder (ssam_tfe/ssam_tfe.log or ssam_tse/ssam_tse.log).", 
            "app_dls": 2140, 
            "md5": "7929c3862a0d1beec1db3f462fb15db5"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/tsukihime/onscripter-nx-hd.nro", 
            "updated": "21/09/2022", 
            "name": "Tsukihime", 
            "license": "GPLv2", 
            "title": "Tsukihime", 
            "url": "https://github.com/clamintus/onscripter-nx", 
            "description": "ONScripter Engine", 
            "author": "clamintus", 
            "changelog": "0.3\\n\\nThank you for your patience!\\nIt's been eight months, I know, but I hope that this was worth the wait!\\n\\nWith every update ONScripter-NX becomes more and more complete. I want people to enjoy their beloved novels on their Switch while feeling at ease, not with a chunky app that doesn't do the work right. With this update I tweaked the engine a bit to improve the playing experience in the long run. I hope I've made progress towards my goal, improving your playing experience too!\\n\\nFollow the instructions on README.md to know how to install ONScripter-NX.\\n\\nGame-specific zips are just convenience builds.\\nThey already come with some of the necessary files included, so you just need to copy the arc*.nsa/arc*.sar files from an original copy of the game.\\n\\nChangelog:\\n\\nHD support - yes! Play your old novel like you had never been able to! More info about it in the README page (seriously, read it!)\\nA new command has been added to adjust text display speed.\\nBy pressing the Left Stick, you can switch between the three available text display speeds (slow~normal~fast).\\nONScripter-NX will also memorize your selected text speed for that game.\\nMenu navigation is now a lot easier thanks to repeated input support.\\nNow you can hold the stick to scroll menu entries faster.\\nThis also works when navigating text history using D-Up and D-Down, and basically in every other directional input use case too.\\nNow the app deinitializes RomFS properly at shutdown.\\nA proper deinit function has been created. It will be called at app's shutdown, and will be eventually populated with more deinitializing code, if needed in the future. For now it just contains the RomFS deinit call...", 
            "screens": 0, 
            "extracted": 14650, 
            "version": "0.3", 
            "filesize": 5369, 
            "details": "This package of ONScripter-NX is configured to automatically include some necessary files for running Tsukihime.\\nSome files (i.e. assets packs) still need to be extracted from the original game in order to play Tsukihime with ONScripter-NX.\\n\\nInstructions:\\nCopy the following files from an original copy of Tsukihime to your Switch's SD card:\\n- arc.nsa\\n- arc.sar\\n- arc1.nsa\\n- the CD folder\\n\\nGame files and folders must go in /switch/tsukihime/ or wherever the .nro application has been placed.\\n\\nJoy-Con Controls:\\nA -> Enter (or advance text)\\nB -> Go back (or advance text)\\nX -> Right-click Menu\\nY -> Toggle \"Draw full page at once\" mode\\nD-Pad Up / L -> Scroll up Text Lookback\\nD-Pad Down / R -> Scroll down Text Lookback\\nHold ZL / ZR -> Skip text\\nPlus -> Exit the game\\n\\nJoystick Controls:\\nUp / Left -> Previous Element\\nDown / Right -> Next Element\\n\\nTouch is supported too.", 
            "app_dls": 1411, 
            "md5": "2ea52fe9630f3b4546a7f69dcb391166"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/noods.nro", 
            "updated": "11/08/2024", 
            "name": "NooDS", 
            "license": "GPLv3", 
            "title": "NooDS", 
            "url": "https://github.com/Hydr8gon/NooDS/releases", 
            "description": "A (hopefully!) speedy DS emulator", 
            "author": "Hydr8gon", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 8201, 
            "version": "release", 
            "filesize": 2658, 
            "details": "The goal of NooDS is to be a fast and portable DS and GBA emulator. It features accurate software rendering with upscaling, and can take advantage of multiple cores for better performance.\\n\\nNooDS is available for Windows, macOS, Linux, Android, Switch, Wii U, and Vita. NooDS should be able to run most things without any setup. DS BIOS and firmware files must be provided to boot the system menu, a GBA BIOS file can be optionally provided.", 
            "app_dls": 2030, 
            "md5": "d8e3b1a212ffc0ef85affdaae436841f"
        }, 
        {
            "category": "game", 
            "binary": "/switch/AvP_Gold/AvP_Gold.nro", 
            "updated": "04/03/2019", 
            "name": "avp", 
            "license": "n/a", 
            "title": "Alien-vs.-Predator-Gold-Switch", 
            "url": "https://github.com/retronx-team/Alien-vs.-Predator-Gold-Switch/releases", 
            "description": "Alien vs. Predator Gold port", 
            "author": "M4xw, (c) 1999-2000 Rebellion", 
            "changelog": "v0.0.3\\n\\n-Restore CMake build system for now\\n\\nv0.0.2\\n\\n-Fixed menu left/right joycon controls\\n-Removed cmake, added Makefile\\n-Compiler Optimizations\\n\\nv0.0.1\\n\\nInitial Release", 
            "screens": 0, 
            "extracted": 12060, 
            "version": "0.0.3", 
            "filesize": 4724, 
            "details": "Introduction\\n------------\\n\\nThis is an unofficial Nintendo Switch port of the Fox Interactive /\\nRebellion Developments game, Aliens Versus Predator Gold.\\n\\nMore information can be found at the project homepage and the Discourse\\nforum.\\n\\nhttp://icculus.org/avp/\\nhttp://community.ioquake.org/c/avp\\n\\nNotes\\n-----\\nRequires the full game (AvP Gold or AvP 2000), both GOG or Steam work.\\nIf you use AvP 2000, go there https://icculus.org/avp/files/etc/ and download english.txt, rename it to language.txt and put it with the assets into the same Folder as the NRO.\\n\\nA correct setup will look like this:\\n\\n -language.txt\\n -cd tracks.txt\\n -AvP_Gold.nro\\n -FMVs\\n -fastfile\\n -avp_rifs\\n -avp_huds\\n\\nAll folders (but FMVs) must be lower case, also every file in every dir must be lower case.\\n\\n+ is Escape, - is Enter\\n\\nDon't forget to map joycon controls in the options, else you will not be able to do much ingame, also it currently renders in 1080p, so handheld text will look small.\\n\\nCredits\\n-------\\nThe original game is by Rebellion Developments.\\n\\nTim Beckmann, various code cleanup fixes\\nChuck Mason, initial OpenAL implementation\\n\\nFor everything else, there's http://community.ioquake.org/c/avp", 
            "app_dls": 3805, 
            "md5": "773500aaa9434412e40b3e57437fc28c"
        }, 
        {
            "category": "game", 
            "binary": "/switch/kgdoom/kgdoom.nro", 
            "updated": "16/07/2018", 
            "name": "kgdoom", 
            "license": "ISC License", 
            "title": "kgDoom", 
            "url": "https://github.com/kgsws/kgdoom/commit/926b58c738a8458a31627a430611d1bdf6820c13", 
            "description": "A doom port. With Lua.", 
            "author": "kgsws", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 5710, 
            "version": "926b58c", 
            "filesize": 2256, 
            "details": "Disclaimer\\nPoint of this doom port is not to stay compatible or emulate original game accurately. Lua scripts in kgdoom.wad for original games do not reflect 100% original game behavior and are provided only for basic compatibility.\\n\\nInstall\\nTo install on Switch, you currently have to use HBL.\\nCopy kgdoom.nro and kgdoom.wad to /switch/kgdoom/ on your SD card. Also copy any IWADs you have to this directory.\\nIf you want to run PWAD mods, create directory /switch/kgdoom/pwads/ and copy these there.\\nWhen you start kgdoom, you will see WAD menu where you can pick IWAD, and optionally PWAD.\\n", 
            "app_dls": 30162, 
            "md5": "2b15386b98de9654e15616a3d4fe6eb5"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Cannonball_Switch/Cannonball_Switch.nro", 
            "updated": "12/06/2021", 
            "name": "Cannonball_Switch", 
            "license": "none", 
            "title": "cannonball-switch", 
            "url": "https://github.com/rsn8887/cannonball/releases", 
            "description": "Switch Port of Cannonball", 
            "author": "rsn8887", 
            "changelog": "1.08git-vita/-rsn8887\\n\\nrecompiled with 12.0.0 support\\n\\n1.07switch\\n\\nFix black screen due to linking with latest SDL2\\n1.06switch\\n\\nrecompiled with 9.0.0 support\\n", 
            "screens": 0, 
            "extracted": 7982, 
            "version": "1.08git-vita/-rsn8887", 
            "filesize": 3079, 
            "details": "Overview\\nThis is my Switch port of Cannonball, an enhanced Outrun engine by djyt.\\n\\nThanks djyt for writing such a great program and making sure it is easily portable.\\n\\nThanks to ScHlAuChi for testing.\\n\\nThanks to my Patreon supporters: Andyways, CountDuckula, Matthew Machnee and Sean Ritzo.\\n\\nNOTE: Arcade roms for Outrun Version B are required to run this engine. The roms are NOT included in the download (see installation instructions).\\n\\nA detailed Manual and FAQ are here: https://github.com/djyt/cannonball/wiki\\n\\nSwitch Installation Instructions\\nArcade roms from Outrun version B are required to run this homebrew, they are not included.\\n\\nExtract the contents of cannonball_switch.zip into the folder switch/ on your sdcard. You should have a folder switch/Cannonball_Switch/.\\nObtain the arcade roms for Outrun Version B and extract them into switch/Cannonball_Switch/roms\\nLaunch the .nro file using your favorite homebrew launcher, enjoy Outrun in almost perfect 60 fps.\\nThis version of Cannonball is called 'Cannonball_Switch' to distinguish it from Lantus' port\\nSwitch Controls\\nNote: Buttons can be re-mapped in menu\\n\\nMinus = insert coin\\nPlus = start\\nY = gas / OK in menu B = brake X = change gears\\nL = change in-game camera\\nR = menu Dpad = menu navigation and digital steering wheel controls\\nLeft stick = analog steering wheel if analog is set to ON or WHEEL ONLY, otherwise this is digital. Right stick = analog gas/brake if analog is set to ON\\n\\n\\nRom names\\n-------------------------------------------------------------------------------\\nPlace OutRun Revision B ROMs in this directory.\\nThey must be named as follows:\\n-------------------------------------------------------------------------------\\nepr-10187.88\\nepr-10327a.76\\nepr-10328a.75\\nepr-10329a.58\\nepr-10330a.57\\nepr-10380b.133\\nepr-10381a.132\\nepr-10382b.118\\nepr-10383b.117\\nmpr-10371.9\\nmpr-10372.13\\nmpr-10373.10\\nmpr-10374.14\\nmpr-10375.11\\nmpr-10376.15\\nmpr-10377.12\\nmpr-10378.16\\nopr-10185.11\\nopr-10186.47\\nopr-10188.71\\nopr-10189.70\\nopr-10190.69\\nopr-10191.68\\nopr-10192.67\\nopr-10193.66\\nopr-10230.104\\nopr-10231.103\\nopr-10232.102\\nopr-10266.101\\nopr-10267.100\\nopr-10268.99\\n\\n-------------------------------------------------------------------------------\\nThe original Japanese release of OutRun featured slightly different tracks \\nand course ordering.\\n\\nOptionally, you can include the following files from the Japanese version to\\nplay these alternate tracks:\\n-------------------------------------------------------------------------------\\n\\nepr-10380.133\\nepr-10382.118\\nepr-10381.132\\nepr-10383.117\\nepr-10327.76\\nepr-10329.58\\nepr-10328.75\\nepr-10330.57\\n\\n-------------------------------------------------------------------------------\\nFixed Audio Rom (Optional)\\nhttp://reassembler.blogspot.co.uk/2013/01/outrun-original-game-shipped-with.html\\n-------------------------------------------------------------------------------\\n\\nopr-10188.71f", 
            "app_dls": 7959, 
            "md5": "0ec28a71886f89df0ae56bb35365790c"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Browser.nro", 
            "updated": "25/04/2021", 
            "name": "browsenx", 
            "license": "MIT", 
            "title": "BrowseNX", 
            "url": "https://github.com/crc-32/BrowseNX", 
            "description": "Launches Browser without the need for a DNS", 
            "author": "crc-32", 
            "changelog": "0.4.1\\n\\nUpdated to use the latest libnx, this may fix some issues users are having\\n\\n0.4.0-hotfix\\n\\nFixes incorrectly named file in release zip\\n\\n0.4.0\\n\\nAdded support for 9.0.0 officially via building for latest libnx\\nNow using libnx implementation of web applet\\nLaunching from an applet never worked and no longer needs to, so now errors and informs you how you can launch from a title\\nUpdated switch-sys-tweak sysmodule to latest master build (still only used to remove supernag)\\n\\nv0.3.1\\n\\nSince the detection for supernag seems to override the sysmodule, now checking if the sysmodule is running and if it is, ignoring the supernag state (this fixes the issue where despite the supernag being patched, BrowseNX would still complain)", 
            "screens": 0, 
            "extracted": 376, 
            "version": "0.4.1", 
            "filesize": 171, 
            "details": "BrowseNX allows you to launch the built-in Switch web browser without needing a DNS. The NRO version currently doesn't allow for html5 video support (just like the DNS) and you have to run it from hbmenu/hbloader that has replaced an app or game, NOT Gallery.\\nThe NSP version available on the github releases is a full browser, including html5 video support.\\n\\nThis also installs https://github.com/p-sam/switch-sys-tweak which disables the supernag, allowing you to access the browser even if you aren't on the latest version.", 
            "app_dls": 111294, 
            "md5": "181c69f63f06a7bf111374331834a9aa"
        }, 
        {
            "category": "legacy", 
            "binary": "/switch/NXBlood/nblood.nro", 
            "updated": "17/05/2020", 
            "name": "NXBlood", 
            "license": "n/a", 
            "title": "NXBlood", 
            "url": "Developer removed source", 
            "description": "NBlood port for the Nintendo Switch", 
            "author": "Jan200101", 
            "changelog": "0.96\\n\\nmerge from upstream\\nuse nblood.pk3 from the romfs\\n\\n0.95\\n\\nmerged upstream changes\\n\\n0.9.4\\n\\nmerged upstream changes\\n\\n0.93\\n\\nadd options for joysticks\\nyou can now set the scale of both joysticks\\n\\n0.92\\n\\nreenable music player\\nopl3 player works fine\\nthe midi player requires additional files, which I'd argue is not worth manually downloading and placing at the moment\\n\\nthe way joysticks are handled has been reworked and is closer to now NBlood handled it\\n\\n0.91\\n\\nbutton mapping has been updated to be simpler to use\\nupstream patch to fix reversed strafing has been merged", 
            "screens": 0, 
            "extracted": 9871, 
            "version": "0.9.6", 
            "filesize": 4228, 
            "details": "THE DEVELOPER HAS REMOVED THE SOURCE FROM PUBLIC VIEW . SO THIS APP HAS BEEN MOVED TO LEGACY. POSSIBLE NO FURTHER UPDATES.\\n\\n\\nNXBlood is a port of NBlood for the Switch which itself is a attempted Source port of the 1997 game Blood\\nthe port is relatively feature complete compared to the existing version of NBlood\\n\\nAll credit to the actual port of Blood go to  http://nukeykt.retrohost.net for his fantastic NBlood\\n\\nInstallation:\\n\\ncopy the following files into nblood on your root\\n\\nBLOOD.INI\\nBLOOD.RFF\\nBLOOD000.DEM-BLOOD003.DEM\\nGUI.RFF\\nSOUNDS.RFF\\nSURFACE.DAT\\nTILES000.ART-TILES017.ART\\nVOXEL.DAT\\n\\n\\nControls:\\nTHERE CURRENTLY IS NO WAY OF CHANGING CONTROLLER CONFIGURATIONS IN-GAME\\nif you do want to change your controls anway you can edit the nblood.cfg in your /nblood folder\\n\\n\\nIn-game:\\nLeft Joystick - Movement\\nRight Joystick - Looking around\\nRight Joystick pressed - Crouching\\nA - Use\\nB - Jump\\nY - Use item\\nZR - Fire\\nZL - Alternative Fire\\nR & L - Switching Weapons\\nUp - Holder Weapon\\nLeft & Right - Switch items\\nDown - Toggle Map mode ( does not view map )\\nMinus - View Map\\n\\nKeyboard and Mouse are fully supported and you are free to use them\\n\\nCREDITS:\\nfor NBlood", 
            "app_dls": 3101, 
            "md5": "a790932a72aff96538db19e951f899f6"
        }, 
        {
            "category": "game", 
            "binary": "/switch/openrct2/openrct2.nro", 
            "updated": "25/04/2021", 
            "name": "openrct2", 
            "license": "GPLv3", 
            "title": "OpenRCT2", 
            "url": "https://github.com/rsn8887/OpenRCT2/releases", 
            "description": "OpenRCT2 (RollerCoaster Tycoon 2) port", 
            "author": "rsn8887", 
            "changelog": "1.06\\n\\nFix up and re-compile with 12.0.0 support\\n\\n1.05\\n\\nRe-compile with 9.0.0 support\\n\\n1.04\\n\\nFix right mouse click input\\nMap object rotation to dpad left and camera rotation to dpad right\\nMap backspace to zl+dpad left and escape to zl+dpad right to make room for new rotation mapping\\n\\n1.03\\n\\nMap shift, ctrl, backspace, and escape keys, useful to build above ground and quickly close windows.\\nMap cheat menu hotkey, now works by pressing the right stick in.\\nMake joystick pointer speed truly independent of fps. It now moves at constant speed even if the frame rate is low.\\nThe filtering options now work as expected. In docked mode, linear gives a slightly blurry image, and sharp nearest neighbor gives perfectly sharp pixels.\\nGeneral image quality improvements in both docked and handheld mode. The internal rendering now dynamically switches resolution between 1080p and 720p instead of always rendering at 720p. Also, the mouse pointer looks a bit sharper now in handheld mode.\\nThe window scaling option now works and can be used to blow up or shrink down the whole game screen, including the user interface.\\nDifferent game resolutions should also work in principle now. This involves editing the window_width and window_height entries in /switch/home/openrct2/config.ini. Only 16x9 ratios will work correctly. I think the default choice of 960x540 looks the best.\\n\\n1.02\\n\\nFix mouse cursor not turning into a hand when hovering over hotspots in the park\\nReduce joystick pointer speed slightly for easier control in-game.\\n\\n1.01\\n\\nInitial Release", 
            "screens": 0, 
            "extracted": 54558, 
            "version": "1.06", 
            "filesize": 23642, 
            "details": "This is my Switch port of OpenRCT2, a re-implementation of RollerCoaster Tycoon 2. A construction and management simulation video game that simulates amusement park management.\\n\\nData files from the original game are required to play this game.\\n\\nVisit my Patreon:\\nhttps://www.patreon.com/rsn8887\\n\\n# Thanks\\n\\nThanks to the many many developers who worked on this open source game.\\n\\nThanks to Chris Sawyer for writing the amazing original game.\\n\\nThanks to Milenko for testing and making screenshots.\\n\\nThanks to my supporters on Patreon: Andyways, CountDuckula, Greg Gibson, Jesse Harlin, \u00d6zg\u00fcr Karter, Matthew Machnee, and RadicalR\\n\\n# Installation\\n\\n- Copy all data files and folders from a working Windows OpenRCT2 installation to `/switch/openrct2/rct2/` so that you have a file `/switch/openrct2/rct2/rct2.exe` and many more files and folders there. For my testing, I used the data files from the gog.com version.\\n\\n- Note: This game takes quite long to load at first, because it generates a bunch of cache files. Subsequent boots are much faster.\\n\\n# Controls\\n\\nLeft analog stick = mouse pointer control\\nRight analog stick = scroll the map\\nR = left mouse click\\nL = right mouse click\\nZR = hold to slow down analog joystick mouse, useful to precisely position the pointer\\nZL = hold to speed up analog joystick mouse\\nA = right mouse click\\nB = left mouse click\\nY = shift key, hold and move mouse up/down to build above the ground\\nX = ctrl key, hold and move mouse to build multiple pieces at the same height above ground\\nDpad up = zoom out (page up key)\\nDpad down = zoom in (page down key)\\nDpad left = close topmost window (backspace key)\\nDpad right = exit construction mode (escape key)\\nR3 (press right stick in) = open cheat menu (ctrl-alt-c)\\nMinus = toggle between three touch control modes:\\nTouchpad style drag pointer with finger and tap to click, default:\\nMove a single finger to move the mouse pointer. Use short tap for left click. Hold a single finger while tapping a second finger for right click. Drag with two fingers to drag and drop.\\nJump to finger without click\\nThe pointer jumps to the finger, but the finger doesn't click. Use L/R or A/B to click\\nJump to finger with tap click\\nThe pointer jumps to the finger, and a short tap also generates a left click\\nPlus = bring up on-screen keyboard, useful for entering names, etc.\\nWhen pressing enter, it first erases existing text and replaces it with new text\\nPhysical USB keyboard and mouse are supported. Not all mice work. There's a mouse compatibility\\nchart.\\n\\nSee :\\n\\nhttps://github.com/rsn8887/openrct2/releases/latest for detailed installation instructions.\\n\\nThis is an initial appstore release and may include the full game in time.", 
            "app_dls": 10123, 
            "md5": "d4cc7e0870f6e63e74c856cb5749730f"
        }, 
        {
            "category": "_misc", 
            "binary": "/switch/switchstrobe/SwitchStrobe.nro", 
            "updated": "04/10/2021", 
            "name": "switchstrobe", 
            "license": "n/a", 
            "title": "SwitchStrobe", 
            "url": "https://github.com/WompaStompa/SwitchStrobe/releases", 
            "description": "Just a very basic edit of switchbrew's simplegfx example.", 
            "author": "WompaStompa", 
            "changelog": "0.2.1\\n\\nRealized I might have to update this when it suddenly started crashing after I updated my firmware to 12.1.0 from like 9 or 10.something for Skyward Sword. Might do the same for Mandelbrot Set Viewer.\\n\\n0.2.0\\n\\nI added stripes. You can toggle them by pressing d-pad left and d-pad right at the same time. The stripes also scroll along the screen. You can't control/toggle the scrolling... yet. Also cleaned up my spaghetti code a teeny tiny little bit.\\n\\nRealized I had resetting color brightness to full mapped to clicking joystick left/right instead of d-pad left/right. Whoops. That's fixed now.\\n\\n0.1.1\\n\\nJust a very basic edit of switchbrew's simplegfx example.\\n\\nI put a limit on how many colors you can use, should top out at 50 colors. I have not tested this.\\nI also learned how to edit the makefile to customize the icon and metadata. In a previous version, I used NRO Asset Editor for this purpose.\\nGeneric color list is back to {Black, Red, Yellow, Green, Cyan, Blue, Magenta, White}.\\n\\nv0.1.0\\n\\nI added support for files, so now you can strobe your own custom colors. If you don't have a colors.txt file, you'll just use a generic list of colors.\\n\\nv0.0.4\\n\\nLiterally just v0.0.3 but made with updated libnx. This should\u2122 work on 9.0.0.", 
            "screens": 0, 
            "extracted": 386, 
            "version": "0.2.1", 
            "filesize": 242, 
            "details": "Custom Colors:\\nRead the readme.txt in the zip for how to format colors.txt.\\nColor list: {first color in file, second color, third, ... , last color in file} (wraps in both directions)\\nColor 1 starts as First Color, color 2 starts as Last Color.\\nScreen alternates colors every 10th frame, but you can change this.\\nYou CAN NOT change the relative brightness of each color from within the app.\\n\\nI haven't put a limit on how many colors you can use, let me know when this becomes an issue.\\nGeneric Colors:\\nColor list: {Black, Red, Green, Yellow, Blue, Magenta, Cyan, White} (wraps in both directions)\\nColor 1 starts as black, color 2 starts as white.\\nScreen alternates colors every 10th frame, but you can change this.\\nYou CAN change the relative brightness of each color from within the app.\\n\\nKeybinds:\\nButton\tFunction\tUsefulness\\nPlus (+)\tGo back to HBMenu\tAll\\nDpad Up (\u25b2)\tIncrease number of frames between color swaps (maxes out at 60)\tAll\\nDpad Down (\u25bc)\tDecrease number of frames between color swaps (bottoms out at 1)\tAll\\nMinus (-)\tReset number of frames between color swaps to 10\tAll\\nA\tCycle color 1 right through color list\tAll\\nY\tCycle color 1 left through color list\tAll\\nX\tCycle color 2 right through color list\tAll\\nB\tCycle color 2 left through color list\tAll\\nR\tIncrease color 1 brightness\tGeneric Colors Only\\nZR\tDecrease color 1 brightness\tGeneric Colors Only\\nDpad Right (\u25ba)\tReset color 1 brightness to full\tGeneric Colors Only\\nL\tIncrease color 2 brightness\tGeneric Colors Only\\nZL\tDecrease color 2 brightness\tGeneric Colors Only\\nDpad Left (\u25c4)\tReset color 1 brightness to full\tGeneric Colors Only\\n", 
            "app_dls": 393, 
            "md5": "622b29d274f97085cdef4e5742e33090"
        }, 
        {
            "category": "game", 
            "binary": "/switch/SuDokuL/SuDokuL.nro", 
            "updated": "02/11/2024", 
            "name": "SuDokuL", 
            "license": "MIT", 
            "title": "SuDokuL", 
            "url": "https://github.com/Mips96/SuDokuL", 
            "description": "Sudoku made with SDL2", 
            "author": "Mips96", 
            "changelog": "1.32\\n\\n[Vita] Fixed a save data bug\\n[Vita, Wii U] Fixed the Touch Screen option being missing from the Controls menu\\n[PC, Linux] Adjusted keyboard input so it works as intended on non-Windows machines\\n\\n1.31\\n\\nBefore the update notes, an important message:\\nThis is probably the final update! I could keep adding new features and making minor tweaks forever, but I have to call it some day, and that day is today. I may make another update if a bug needs to be fixed, and I'm not ruling out the possibility of ports to additional systems (those would be added to this release after the fact), but consider SuDokuL to be complete!\\n\\nWith that out of the way, here's what's been added this time. A lot of polish:\\n\\nIn case you missed it:\\nThe following new ports were retroactively added to v1.3, but are included from the start in this release: Wii, Gamecube, Linux, and FunKey\\nSuDokuL is now fully compatible with SDL1\\nNew Additions:\\nAdded Frame Rate setting; this game can already run fine at max framerate on all systems, but a lower framerate could result in better battery life on handhelds\\nEnabled VSync\\n[WII] Added analog input for Classic Controller\\n[Wii] Onscreen cursor now rotates with Wii Remote accelerometer\\nFixes + Polish:\\nRemoved Integer Scale setting; this was already unused on consoles, and recent changes made it redundant on PC\\nIncreased minimum outline size for header text and grid numbers; this makes resolutions below 480p more readable\\nRearranged some text for 1:1 screens\\nPolish and code cleanup\\n[PC] Key to toggle fullscreen has been changed from F to F11 or R3 on controller\\n[PC] Removed the dividers on the Controls screen (they were already removed from consoles, might as well make it consistent)\\n[Wii] Adjusted controls; Start/+ is now always Pause\\n[Wii] Fixed pointer controls bring inaccurate at certain resolutions\\n[Gamecube, FunKey] Fixed a minor bug in the Controls menu\\n[Vita, Wii U, Switch, FunKey] Increased default background size\\n[FunKey] Fixed the background scroll direction being incorrect for some angles\\nEnjoy!\\n\\n1.3\\n\\nAdded save data support; quit a game and come back to it later!\\nAdded a new cheat: Press B then Y (or Backspace then Period on keyboard) four times to clear all mistakes\\nAdded Native screen scaling options that can match either your entire screen or a specific aspect ratio\\nAdded 7 new background patterns\\nAdded one new song\\nAdded support for 1:1 displays at resolutions of 240x240 and above\\nAlso removed 21:9 option; you can still use the new Native setting to achieve this\\nAll game assets are now compiled into the executable, meaning fewer files to manage and faster initial load times on consoles\\nCheats can now be accessed on mouse/touch-only devices by tapping the first (for cheat 1) or second (for cheat 2) icon on the sidebar eight times\\nIn addition to pressing R like before, you can now also change the current song by tapping the third icon on the sidebar three times\\nLots of polish and code cleanup\\nUpdated SDL2 on all systems\\n[PSP] Reduced font size at full resolution (it looks cleaner)\\n[Wii U] Now supports up to 1080p thanks to recent SDL2 updates\\n[Wii U] Added WHUB to release\\n\\n1.2\\n\\nPorted to PSP!\\n- I'm not sure if this works on a real PSP-1000 (the model with less RAM). It should work - it runs in PPSSPP set to PSP-1000 mode - but I haven't tested it myself on a real 1000 model.\\nAdded integer scaling option (enabled by default) for resolutions that are smaller than the actual screen resolution\\n- This replaces the old Fullscreen menu option (PC users can still toggle fullscreen by pressing F)\\n- This does nothing on Android since the Android version always runs at native resolution; instead, Android gets a toggle for showing/hiding the top status bar\\nWhen using a resolution that's smaller than the screen's resolution, the window is now rendered to the center of the screen, meaning consoles can now make better use of smaller resolutions\\n- This does not work on PSP since its version of SDL_RenderSetViewport() doesn't work properly\\n- (Suggestion for handheld Switch and Wii U gamepad users - try setting the resolution to 720p/480p resolution respectively with integer scaling turned off for (very close to) native resolution on handheld! Widescreen 240p also looks great on these systems)\\nAdded a loading screen upon booting the game instead of staying on a blank screen until everything is loaded\\nAdded 240p, 272p, and 544p logos so the logo now looks clearer on those displays (like the Vita)\\nAdded a few more resolution options\\nAdjusted grid number positions on Vita so they don't bleed into the grid\\nFixed a bug involving mouse/touch controls when used alongside button controls\\nFixed the background randomly jumping around upon loading a puzzle\\nPressing L/R to change songs now saves the current song setting\\nThe controls screen now properly reflects swapped Confirm/Back buttons\\nReduced number of button presses required for the cheat from 10 to 8\\nA LOT of other polish/minor bug fixes\\n\\n1.12\\n\\nAdded analog input\\nAssorted polish + code refactoring", 
            "screens": 3, 
            "extracted": 13723, 
            "version": "1.33", 
            "filesize": 6470, 
            "details": "A Sudoku game made with SDL2.\\n\\nFeatures:\\n- Sudoku puzzle generator\\n- Touch screen support\\n- A scrolling background that lets you change the size, scroll speed and scroll direction\\n- Those mini-numbers to help you keep track of harder puzzles\\n- An optional cheat that auto-fills a cell (press X or Y 10 times)\\n- 7 different MOD format songs", 
            "app_dls": 1323, 
            "md5": "20c7328210a9c4de0d583a63113ab0d2"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/botw-unexplored/botw-unexplored.nro", 
            "updated": "26/04/2021", 
            "name": "botw-unexplored", 
            "license": "n/a", 
            "title": "BotW Unxplored", 
            "url": "https://github.com/lud99/botw-unexplored/releases/", 
            "description": "View unfound koroks and shrines in BotW", 
            "author": "lud99", 
            "changelog": "2.0.0\\n\\nAdded Shrines (+ DLC if it's present), Taluses, Hinoxes and Moldugas.\\nAdded a legend where you can toggle which of the collectibles you want to see.\\nIt's now possible to use the app while playing the game. This is achived by making backups of your savefile, which are then loaded while the game is running.\\nAdded guides for finding the koroks. The text and images are taken directly from Zeldadungeons interactive map. Simply tap a korok and a guide will pop up. Very helpful for certain korok seeds that are hard to find with only a location on a map.\\nWhen a korok is selected, press B to manually mark it as complete. Very helpful if you're using the app while playing as the latest savedata can't be read. Otherwise you would have to remember all the koroks you've found during this play session, which could become difficult. The correct korok progress will be restored once the game has been closed.\\n\"Korok paths\" have also been added to help finding some koroks. If you've used Zeldadungeons interactive map, then you know what they are.\\nAdded support for Master Mode. Press Y to toggle it.\\nDrastically improved performance when a lot of objects are displayed. Can easily run at 60fps now.\\nThe app remebers your last camera position and zoom. This makes it easy to get back to the korok you looked at last time, if you for example switch between BotW and the app. (You can also press X in the Homebrew menu to star it for quicker access)\\nNow tries to load the last used user so you won't have to use the dialog picker every time you start the app.\\nAdded more error messages and all logs are saved to a text file in case the app doesn't work", 
            "screens": 0, 
            "extracted": 21211, 
            "version": "2.0.0", 
            "filesize": 14806, 
            "details": "Easily view what hasn't been discovered in your Breath of the Wild savefile on your Switch.\\n\\nThe korok seeds that haven't been collected and the locations that are left to visit are shown on a map, where it's easy to see koroks or locations you've missed. You can also see shrines, hinoxes, taluses and moldugas too.\\n\\n- Use the analog sticks or the touch screen to move around.\\n- Press X to open the legend and use either the touch screen or the D-pad to navigate the menu (note that the analog sticks won't work here)\\n- Tap a korok to see a guide on how to find it. You can press B to manually mark it as complete. This is useful if you're using the app while playing BotW, as the app won't be able to load your latest savefile in that case. The koroks you've marked as found will be removed once the savefile is able to be loaded it again, so don't worry if you wrongly marked a korok as found.", 
            "app_dls": 15347, 
            "md5": "3fc2c84d2478e825c69bf224e8ecade4"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/CHIP8-NX.nro", 
            "updated": "27/09/2018", 
            "name": "CHIP8", 
            "license": "Copyright", 
            "title": "CHIP8-NX", 
            "url": "https://github.com/Marice/CHIP8-NX/releases", 
            "description": "Play CHIP8 roms and games!", 
            "author": "marice", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 1217, 
            "version": "v0.3", 
            "filesize": 493, 
            "details": "A working early stage CHIP8 emulator for the Nintendo Switch.\\n\\nFeel free to help and improve the code!\\n\\nExit to HBmenu using PLUS button", 
            "app_dls": 1168, 
            "md5": "601f1bd1a22911e620eff699e88eef04"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/JC-color-swapper/JC-color-swapper.nro", 
            "updated": "12/05/2020", 
            "name": "JC-color-swapper", 
            "license": "GPLv3", 
            "title": "JC-color-swapper", 
            "url": "https://github.com/HamletDuFromage/JC-color-swapper/releases", 
            "description": "Change the colors of you Joy-Cons", 
            "author": "HamletDuFromage", 
            "changelog": "1.2\\n\\nPress [L] to backup a profile, [R] to restore it\\n\\n1.1\\n\\nAdded pages in the main screen to support a larger amount of color profiles.\\n\\n1.0.1\\n\\nBasically the Switch wants BGR and I fed it RGB. It's fixed now.", 
            "screens": 2, 
            "extracted": 1404, 
            "version": "1.2", 
            "filesize": 525, 
            "details": "A Nintendo Switch homebrew app to change the color of the Joy-Con controllers. Comes bundled with default themes but you can easily add your own.\\n\\n### Add custom themes\\nYou can add custom themes by editing profiles.json. You can add new entries and modify existing ones, just make sure that you're using the exact same formatting.", 
            "app_dls": 14659, 
            "md5": "4cc09ad122952bf287038fa6fddcad65"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/libretro_vbanext.nro", 
            "updated": "16/07/2018", 
            "name": "vba-next", 
            "license": "none listed", 
            "title": "VBA-NEXT", 
            "url": "https://gbatemp.net/threads/retroarch-switch.492920/", 
            "description": "A Gameboy Retroarch Core", 
            "author": "Retroarch", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2773, 
            "version": "beta", 
            "filesize": 883, 
            "details": "A very beta version of this core , games play from the SD card, and saves Now work.\\n\\nCurrent issues:\\n\\nScreen settings\\nButton Config\\nAnalog input.", 
            "app_dls": 10491, 
            "md5": "426d001ac06d16a3ad7478bb8fb6582d"
        }, 
        {
            "category": "game", 
            "binary": "/switch/xash3d-bshift.nro", 
            "updated": "16/09/2019", 
            "name": "xash3d-switch_Blue_Shift", 
            "license": "GPLv3", 
            "title": "xash3d-switch blue shift", 
            "url": "https://github.com/switchports/xash3d-switch/releases", 
            "description": "Xash3D FWGS Engine", 
            "author": "Datamats", 
            "changelog": "v1.0.1\\n\\nUpdate libnx so hid will work on 9.0.0+\\n\\nv1.0.0\\n\\nnwindow is used now instead of the deprecated gfx api\\nthe touchscreen should work now\\nmoved over to filesystem times for savefiles thanks to libnx\\nimplemented the console and various UI requiring text input using swkbd\\nadded options for overclocking, for the really care cases where you might benefit from it\\nmade cl_showfps default to 0 (you can always change it using the console)\\na dmc sdk branch has been ported and is available, additionally a decay port has been added that needs more testing\\n\\n\\nv0.4.0\\n\\nAll the nro's have been renamed to ease the process of adding new games and making it easier to port new dlls, please delete all the half-life-*.nro's\\nThe game switching implementation should be a lot more flexible now and you should be able to keep the nro's where you want as long as you keep them together\\nMods should now work as expected as long as they do not contain custom entities / weapons or other specialized code put in a dll file\\nOpposing force should be fixed\\nVarious fixes and improvements to stability\\n\\nv0.3.0\\n\\nBlue Shift / Opposing Force builds has been ported and added to the build system\\nThe Custom Game menu should not crash anymore, but it will only work if all the nro's are in the /switch directory and are not renamed.\\n\\nv0.2.1\\n\\nThere should be no more crashes after quitting from the menu back to the hbmenu\\n\\nv0.2.0\\n\\nThe timestamp of saves are now saved into a own file as a temporarily workaround until libnx gains timestamps. (Now you will go back to the last autosave when you die instead of having to start over)\\nIncreased the buffer for file copies, this makes saving in some cases multiple times faster\\nFixed the screenshots for saves being broken due to the dynamic resolution system\\nMore work trying to fix crashes (hbmenu will still crash when you quit from the mainui, this is being worked on)\\nAdded a working icon", 
            "screens": 0, 
            "extracted": 14762, 
            "version": "1.0.1", 
            "filesize": 5800, 
            "details": "Xash3D Engine is a custom Gold Source engine rewritten from scratch. Xash3D is compatible with many of the Gold Source games and mods and should be able to run almost any existing singleplayer Half-Life mod without a hitch. The multiplayer part is not yet completed, multiplayer mods should work just fine, but bear in mind that some features may not work at all or work not exactly the way they do in Gold Source Engine.\\n\\nXash3D FWGS is a fork of Xash3D Engine, which aims on crossplatform and compatibility with original Xash3D and Gold Source.\\n\\n\\nThis packages already includes the extras.pak files from https://github.com/FWGS/xash-extras/releases in your valve directory ,\\n\\nGet a copy of half life that contains the 'valve' folder. and add to the valvev folder already within your appstore download.\\n\\nXash3D should now launch, it will take a couple seconds to load the assets needed for displaying the menu and you should be able to play!\\n\\nand problems please use the appstore feedback form, thanks..", 
            "app_dls": 2742, 
            "md5": "f939e2e4925d8c0a340c59109e45e8a2"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/uae4all2/uae4all2.nro", 
            "updated": "28/03/2024", 
            "name": "uae4all2", 
            "license": "GPLv2", 
            "title": "uae4all2", 
            "url": "https://github.com/rsn8887/uae4all2/releases/", 
            "description": "A fast and optimized Amiga Emulator", 
            "author": "rsn8887", 
            "changelog": "2.12 (Switch only)\\n\\nfix regression causing stuttery audio after suspend by linking with fixed SDL2\\n\\n2.11\\n\\nfix touch input on Switch\\n\\n2.10\\n\\nallow autostarting of config file via command line argument. On Switch, the same forwarder that works with RetroArch can be used. On Vita, a custom bubble builder is provided. It uses the same method as DaedalusX.\\n\\n2.00\\n\\nImportant note to Switch users\\nOn the Switch, since v1.84, please use nsp injection to start uae4all2, otherwise the config save as and savestate export options will not work. On SX OS, you can do this by holding down R while launching any installed game to make hbmenu appear.\\n\\nRecent Changes\\n2.00\\n\\nallow suspend/resume again. On Switch, it was fixed in SDK. On Vita, please install fd_fix plugin to prevent corruption on resume.\\n\\n1.99\\n\\nImportant note to Switch users\\nOn the Switch, since v1.84, please use nsp injection to start uae4all2, otherwise the config save as and savestate export options will not work. On SX OS, you can do this by holding down R while launching any installed game to make hbmenu appear.\\n\\nRecent Changes\\n\\nimplement touch input to control on-screen keyboard, in addition to dpad\\n\\n1.98\\n\\nrecompile to add support for 9.0.0 firmware\\n\\n1.97\\n\\n\\nadd option to main menu that displays online instruction manual (opens web browser)\\n\\n1.96\\n\\nincrease maximum displayed lines from 270 to 286, useful for overscan games like Babeanoid\\nfix cia overlay in AGA mode, fixes Reshoot-R hang at title screen\\n\\n1.95\\n\\nadd support for .zip floppy files (read-only)\\non Switch, also compile with optimization level 3\\n\\n1.94\\n\\nfix hdf settings with non-zero hd dir causing wrong mounted drives\\nimplement .adz floppy disk format support (read only)\\nwidescreen file dialog to show longer filenames\\n\\n1.93\\n\\nfix mouse pointer getting stuck sometimes when using USB mouse (fixed in SDL)\\n\\n1.92\\n\\nadd frameskip option back in\\n\\n1.91\\n\\nwidescreen menu\\nphysical keyboard and mouse support also on Switch. All keyboards I tried seem to work. Not many mice work. The Logitech M187 mouse seems to work fine.\\non Switch, no more slow-down when returning from sleep (thanks @Cpasjuste)\\n\\n1.90\\n\\nAdd keyboard style option with many choices: original, warm, cool, dark (thanks @wronghands)\\nOn Switch, quit gracefully when using home button to exit\\nSpeed up rendering of savestate menu when thumbnails are displayed\\n\\n1.89\\n- fix scaling artifacts when sharp_bilinear_simple was selected. Pixels are even sharper now!\\n- On the Switch, since v1.84, please use nsp injection to start uae4all2, otherwise the config save as and savestate export options will not work. On SX OS, you can do this by holding down R while launching any installed game to make hbmenu appear.\\n\\n1.84\\n\\nimplement config load with dialog, config save as, and config delete\\nincrease number of savestates per game to 12\\nincrease number of custom control sets to 6\\non Switch, fix some issues with vsync\\nimplement importing and exporting of savestates\\nbetter menu font (thanks @wronghands)\\noption to select menu font\\non Switch, automatically use 1080p resolution in docked mode\\n\\n1.83\\n\\nstop hotkeys from affecting game controls in some cases\\nalways allow left stick to control on screen keyboard\\nallow mapping of stick and dpad independently\\n\\n1.82\\n- support up to eight controllers on Switch\\n- allow faster menu navigation by holding down directions\\n\\n1.81\\n\\nallow higher CPU speed hack (for Alien Breed 3D)\\nallow optional custom kickstart named kickcustom.rom (for 3.1.4 etc.)\\nbuttons can now be mapped to quickload/quicksave for fast savestates\\na button can be mapped to fast mouse, hold it down to speed up mouse\\nslow mouse or fast mouse buttons now also affect touch and real mice\\npopulate custom controls with sensible defaults instead of all blank\\n\\n1.80\\n\\nimprove keyboard input (fixes Celtic Legends)\\non Switch, improve single/dual joycon mode switching\\n\\n1.79\\n\\nfix interrupt 6 bitmask (fixes Marvin's Marv. Adv. AGA)\\n\\n1.78\\n\\nfix 68020+ bitfield instructions (fixes crash in Virocop AGA)\\n\\n1.77\\n\\nincrease max files per dir from 3072 to 10240\\non Switch, in split JoyCon mode, make SL/SR act as L/R also in menu\\non Switch, in split JoyCon mode, disable L/R/ZL/ZR in menu\\n\\n1.76\\n\\non Switch, added split Joycon option for tabletop multiplayer with up to four single Joycons\\non Switch, allow menu navigation with analog stick\\nfixed lag when navigating the savestate menu\\n\\n1.75\\n\\nfixed crash when booting a floppy with floppy speed >1x\\nfixed inconsistencies in menu navigation\\nenabled long filename display in file browser (hold Triangle or X to show it)\\nfixed an issue where HD Dir could not be selected unless Boot HD was set to OFF\\nremoved legacy code and data files that were not needed\\n\\n1.74\\n\\nAllow remapping of ZR/ZL on Switch\\nMap ZR/ZL to \"slow-down mouse\" on Switch if custom controls are off\\nAdd option to misc menu to choose either A or B as OK button on Switch\\nAdd sharp-bilinear-simple scaling routine, and make it the new default\\nAdd point filtering scaling routine\\n\\n1.73 Fix savestates \\n\\n1.72 switch release", 
            "screens": 0, 
            "extracted": 12224, 
            "version": "2.12", 
            "filesize": 4101, 
            "details": "Important note to Switch users\\nOn the Switch, since v1.84, please use nsp injection to start uae4all2, otherwise the config save as and savestate export options will not work. On SX OS, you can do this by holding down R while launching any installed game to make hbmenu appear.\\n\\nUse4All2 Mod is an Amiga emulator for Vita and Switch. This is my mod of this great Amiga emulator that was originally ported to the Vita by Cpasjuste. Depending on when you read this, this mod might be ahead or behind his version.\\n\\nThanks to Cpasjuste for the original port and for jumping in and adding shader support and making the assembler optimizations work.\\n\\nThanks to ScHlAuChi for extensive testing, ideas, and for contributing the new larger virtual keyboard images.\\n\\nThanks to the original authors Chui, john4p, TomB, notaz, Bernd Schneider, Toni Wilen, Pickle, smoku, AnotherGuest, Anonymous engineer, finkel, Lubomyr, pelya and many more.\\n\\nThanks to my supporters on Patreon: Andyways, CountDuckula, Matthew Machnee, and Sean Ritzo.\\n\\nINSTALLATION\\n\\nObtain and copy BIOS files kick13.rom (size: 262,144 bytes), kick20.rom (size: 524,288 bytes) and kick31.rom (size: 524,288 bytes) to your SDCard into /switch/uae4all2/kickstarts/\\nUse your favorite Homebrew Launcher or Homebrew Loader to start Uaeall2\\n\\n\\nFull speed emulation of most Amiga games with zero frameskip\\nLarge, complete virtual keyboard with adjustable position and adjustable transparency\\nThree fully mappable custom control sets: map Vita buttons to any Amiga joystick or key input, three custom control sets supported\\nMultiple hard-file support: up to 4 hdf files (size <2GB each) can be mounted simultaneously\\nMultiple controller support on Vita TV: up to four paired controllers can be fully mapped\\nAnalog mouse control: control the mouse using the analog stick with adjustable sensitivity\\nShader support: default sharp_bilinear_simple uses integer pre-scale for sharp, undistorted pixels with minimum blur, even if game is zoomed to fill the full Vita screen\\nCustom autofire: any mapped Vita button can have autofire with adjustable rate\\nSavestate with hard-file support: state can be saved even when hard-files are used\\nAdditional emulator settings: sprite-sprite collisions can be enabled, blitter settings can be changed\\nAdjustable stereo separation\\nA button can be mapped to slow mouse in custom controls. When custom controls are on and that button is held down, the mouse pointer speed is greatly reduced. This is useful for precisely positioning the cursor.\\nBluetooth keyboard and mouse support\\nSticky virtual keyboard modifiers: allows keyboard combos like CTRL-C to be entered easily\\nTouchpad style pointer controls using the front touch panel and (optional) the rear touch panel\\nSupports loading files from ux0: or uma0: partition\\nParallel port joystick adapter support for multiplayer games with up to 4 joysticks.\\nAdditional savestate slot called auto, for automatic savestate loading", 
            "app_dls": 7267, 
            "md5": "660a4c0507e30cc8464127d0ca832cfd"
        }, 
        {
            "category": "game", 
            "binary": "/2048/switch/2048.nro", 
            "updated": "12/10/2021", 
            "name": "2planes", 
            "license": "none", 
            "title": "2 Planes", 
            "url": "https://github.com/mactec0/2Planes_SWITCH/releases", 
            "description": "homebrew game", 
            "author": "mactec0", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 8529, 
            "version": "1.0.1", 
            "filesize": 5138, 
            "details": "Nintendo Switch homebrew game", 
            "app_dls": 2197, 
            "md5": "b747662f495fde2e8791604aace78d8e"
        }, 
        {
            "category": "legacy", 
            "binary": "/switch/Homebrew_SD_Setup/sdsetup-switch.nro", 
            "updated": "27/04/2020", 
            "name": "Homebrew_SD_Setup", 
            "license": "Mozilla PLv2", 
            "title": "Homebrew SD Setup", 
            "url": "https://github.com/noahc3/sdsetup-switch/releases", 
            "description": "Switch Homebrew App for SDSetup", 
            "author": "noahc3", 
            "changelog": "v0.3\\n\\nAdditions:\\n\\nThe app now contains an autoupdater and will update itself when it sees a new version available.\\nVersion numbers are now displayed next to each package.\\nThe download progress screens now have icons.\\nIn the future there will be a spinner to indicate the download is still active and the app is not frozen, but I need threading to get fixed in LovePotion first.\\nFixes:\\n\\nThe sdsetup.zip file downloaded to the SD card is now correctly deleted.\\nThe app now exits to the home menu after a download to fix (workaround) a bug where hbmenu would hang if you tried to launch another app after downloading with SDSetup.\\nThis will be fixed properly in the future.\\n\\nv0.21\\n\\nUUID passed to server is now random rather than static (debugging leftover)", 
            "screens": 0, 
            "extracted": 10333, 
            "version": "v0.3-alpha", 
            "filesize": 4467, 
            "details": "Warning: The current release of the app is buggy and not officially supported. You should strongly consider avoiding use of this app and instead use https://www.sdsetup.com or the Homebrew App Store until further notice.\\n\\nUpdate homebrew and CFW without ever leaving the comfort of your Switch!\\nThis app allows you to access and download packages from www.sdsetup.com right on your Switch, no PC required! Many homebrews and CFWs can be updated without ever taking out your SD card.\\n\\nThe app features both touch controls and controller support via a cursor.\\n\\nSee the SDSetup repo for more information on the whole SDSetup project.", 
            "app_dls": 27358, 
            "md5": "4b328f2b1838de2e52f4aa029df3f285"
        }, 
        {
            "category": "concept", 
            "binary": "/switch/Plutonium/Dialogs.nro", 
            "updated": "27/03/2019", 
            "name": "CustomUI", 
            "license": "GPLv3", 
            "title": "Plutonium Example", 
            "url": "https://github.com/XorTroll/Plutonium", 
            "description": "Simple C++ libnx library for creating switch-like UI homebrew apps!", 
            "author": "XorTroll", 
            "changelog": "0.2\\n\\nRendering:\\n\\nThe internal application rendering system has slightly changed to improve dialogs' rendering, which has also changed some rendering callbacks for elements.\\nNew functions have been added into SDL2-based rendering system, mostly related to round shapes.\\nDialogs have been redesigned, without the old fullscreen, round shapes. Now the right joystick allows fast moving among options, and all the margins and sizes are automatically computed.\\n\\nElements:\\n\\nRounded shapes have been added, now applying to progress bars and dialogs.\\nSome element destructors have been fixed and/or improved.\\nAdded a WIP focus system, which is barely untested:\\n\\nIt's based in Windows's focus system with UI elements.\\nOnly an element has focus, and focus is changed via touch or R-Stick, based on stick directions.\\nAs said it's WIP, so might not work as expected. By default elements don't use the focus system.\\n\\n0.1 (newer)\\nRenamed to Plutonium, reversioned, and example UI updated\\n\\nupdated 0.2.1 old\\n\\nJust a few things fixed, the API is still the same.\\nNot uploading the examples, as they are the same as 0.2.\\n\\n0.2 old\\n\\nUsing events\\nWindows, backgrounds, colors, pages... everything new\\nNow using shared fonts\\nWhat else to say, everything is completely new\\nObviously, working with latest libnx", 
            "screens": 0, 
            "extracted": 32850, 
            "version": "0.2.1", 
            "filesize": 13136, 
            "details": "A library to facilitate creating official-looking homebrew apps and easily creating interfaces. See https://github.com/XorTroll/CustomUI for usage information and source code.\\n\\nPlutonium uses software-accelerated SDL2 rendering.\\nPlutonium's performance is based on WPF's system. The user doesn't directly interact with the rendering, as it's done via a main rendering system and different objects to render.\\nSame way WPF does, you can create an UI by making a custom Application class inheriting from pu::Application class, or simply creating a variable and adding elements to it.\\nThe main function to initialize the application is Show().\\nCheck the examples for a basic usage of the libraries. In case you want to see a really powerful app which really shows what Plutonium is capable of, take a look at Goldleaf.\\nCheck the documentation for a more detailed explanation of the library's usage.", 
            "app_dls": 834, 
            "md5": "fdb53ee92ec0785e8a22b7653c81e549"
        }, 
        {
            "category": "game", 
            "binary": "/switch/odamex/odamex.nro", 
            "updated": "16/12/2019", 
            "name": "Odamex", 
            "license": "GPLv3", 
            "title": "Odamex", 
            "url": "https://github.com/Ch0wW/odamex/releases", 
            "description": "A Classic Doom multiplayer port", 
            "author": "Ch0wW, The Odamex Team", 
            "changelog": "pre-08X-alpha-2\\n\\nFix \"kill\" command spam, and fix the command being usable during the intermission screen.\\nReenabled classic Coop scoreboard online, and during demos.\\nAdded con_autohide to hide the console on specific conditions.\\nFix classic deathmatch demos to not properly sync after a player's death.\\nFixed a case where TDM scores weren't properly refreshed on non-warmup games.\\nSecrets are now syncronized between clients.\\nAdded support for Freedoom up to 0.12.1. Please note the game now makes you aware if you are using an outdated IWAD.\\nTeam/Chat beeps can now be disabled. Please be aware that Odamex still makes chat from the server itself is still audible.\\nFix clients being able to get stuck on a stair with sv_unblockplayers.\\nNew CVAR sv_nompthings to remove mp-only items.\\nNew CVAR sv_instantswitch to instantly change weapons.\\nAdded a door fix from Nautilus.\\nAdded network loop improvements from jsd.\\nAdded new CVARs sv_coop_completionist, sv_skipkills, sv_skipsecrets for a new coop mutator called \"the completionist\". Callvote calls are also supported (thanks jsd !)\\nClient fixes from jsd.\\nRecompiled with latest libnx builds.\\n\\npre-08X-alpha-1\\n\\nAdded co_fixarchvileflame CVAR to potentially fix the archvile's flame going crazy on rare occasions.\\nAdded support for Episode 4's PAR times (from Doom 3 BFG's).\\nMenu hotkeys are now working again.\\nOdamex now auto-disables a few options in SP/MP in the menu (such as load/save).\\nAdded support for skystretch | forcenoskystretch | nocrouch in the MAPINFO.\\nmap \"lobby\" now enables the lobby's MAPINFO flag.\\nSome various platform-specific WADDIR optimisations have been made.\\nCheat \"give\" now works again.\\nDisable cheat \"IDDT\" after loading a new map or joining a server.\\nCheat commands \"IDDQD\", \"IDKFA\" and \"MDK\" have been created.\\nAdded basic binding support for the automap.\\n\\nswitch081-v3\\n\\nUpdated with the latest libnx libraries, for 9.0 support.\\nAutomap is now bound by default to (-) instead of RSHOULDER.\\nFix for bug #1280 (forced colors after switching teams aren't properly refreshed)\\nFix team scores increasing during warmup\\nFix callvote arguments being case-sensitive\\n(unsure if will be felt or not) mouse support is disabled because of the latest update.\\ncompiling Odamex is now easier since it is integrated within the CMake fil", 
            "screens": 0, 
            "extracted": 13706, 
            "version": "pre-08X-alpha-2", 
            "filesize": 6393, 
            "details": "Odamex is a multiplayer-centric client/server source port originally based on Zdoom 1.22/csDoom. Despite offering many modern features and comforts, the engine is also capable of playing back many vanilla Doom demos. In addition to its strong netcode, other significant modern features include a truecolor software renderer, widescreen, uncapped frame rates, on-the-fly wad loading, and net demos with playback controls.", 
            "app_dls": 597, 
            "md5": "1640ef5d61816bc0deb60923302aa3e3"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/switch-ftp-client.nro", 
            "updated": "28/01/2023", 
            "name": "SwitchFTPClient", 
            "license": "GPLv2", 
            "title": "Switch FTP Client", 
            "url": "https://github.com/cy33hc/switch-ftp-client", 
            "description": "Simple FTP Client app for the switch", 
            "author": "cy33hc", 
            "changelog": "v1.0.7\\n\\nAdd Thai, Greek and Arabic language\\n\\nv1.0.6\\n\\nAdd Hungarian language translations\\nEmulate left analog stick as Dpad and right analog stick for fast scrolling\\n\\nv1.0.5\\n\\nSwitched to an alternate implementation of IMGUI gui library which fixes some random flicking graphics\\n\\nv1.0.4\\n\\nAuto detect system language and apply translations. For non standard languages like Catalan,Croatian,Euskera,Galego,Indonesian,Ryukyuan you'll still need to update the config file\\n\\nv1.0.3\\n\\nFixed a bug where if you try to rename a file without changing the name, it caused the file to be deleted.\\n\\nv1.0.2\\n\\nMinor UI fixes\\nFiles over 2GB does not display properly and progress dialog not showing the progress", 
            "screens": 0, 
            "extracted": 29131, 
            "version": "1.0.7", 
            "filesize": 16306, 
            "details": "A simple FTP Client app for the switch to connect to a remote FTP Server to transfer files back and forth.", 
            "app_dls": 19969, 
            "md5": "ad13c90df53bec292c0c8442ef52ece0"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "02/11/2024", 
            "name": "Hekate", 
            "license": "GPLv2", 
            "title": "hekate", 
            "url": "https://github.com/CTCaer/hekate/releases", 
            "description": "Bootloader - CTCaer mod", 
            "author": "CTCaer", 
            "changelog": "6.2.2\\n\\nHOS 19.0.0 support\\nL4T: Update ARC to v6\\nAdded latency decoupling via ram_oc_opt.\\nFixed an issue on Oled skus where they couldn't automatically reboot to OFW if stock failed.\\n\\n6.2.1\\n\\nL4T: Update ARC to v6\\nVast improvements to Signal Quality\\nPerformance and Bandwidth increased\\nSome timings were slightly adjusted so ram_opt might need to be adjusted accordingly\\nFixed boot issues in HOS and L4T\\nAdded back forced charger enable in-case hekate boots in a state with it disabled\\n\\n6.2.0\\n\\nHOS 18.1.0 support\\nhekate can now launch HOS by up to 50% faster on many usecases\\nOnly these usecases are affected. The rest are the same/similar.\\nFixed an issue with blue screen - code 01 on T210 (Erista). Download updated v2.\\nMitigated a weird issue on T210B01 (Mariko). Download updated v3.\\nFixed an issue with L4T booting on T210 (Erista). Download updated v4.\\nMany improvements and fixes under the hood (check BDK changes)\\n\\n6.1.1\\n\\nHOS 18.0.0 support\\nFailed Stock booting because of pkg1 issues will now reboot to OFW if conditions are met (T210B01 or no autorcm for T210)\\nFixed an issue with clearing system counters\\nL4T and ARC changes:\\nAdvanced ram timings config (ram oc opt) is now finalized (check the helper site for the new %)\\nFixed an issue with ram bank priorities (increases performance 1-5%, depends on usage range)\\nAdjusted scaling for SDMMC1 and DDR200\\nT210: Frequencies passed changed from 204/408/666/800/1600/OC to 204/408/800/1333/1600/OC\\n\\n6.1.0\\n\\nFixed an issue where emuMMC sector offset parsing was failing if SD card was bigger than 1TB.\\nL4T and ARC changes:\\nAllow boot partition to be exFAT\\nThis will need an update of the bootstack of various L4T releases. Mostly important for Lakka and for users that do not want to format.\\nSignificant changes were done to Arachne for RAM OC to increase performance and stability\\nSeveral timings were improved and corrected for both T210/LPDDR4 and T210B01/LPDDR4X\\nStability was improved for higher frequencies for T210/LPDDR4\\nIt also significantly affects high density ram modules like in 8GB configurations\\nAdditionally, they can be improved extra with the ram_oc_opt ac mode also.\\nFixed an issue where sometimes timing reduction was not allowed on 1600 MHz\\nA new ram_oc_opt= parameter was added to support advanced ram oc configuration for both T210 and T210B01.\\nMostly for users with T210/LPDDR4 because of low frequencies and others that like to optimize (T210B01/LPDDR4X).\\nRead more in wiki.\\nram_oc_vdd2 max voltage limit was raised to 1237mV for T210. T210B01 remains at Jedec max of 1175mV.\\nFixed an issue for DDR200 on T210 when RAM frequency was oc one\\n\\n6.0.7\\n\\nHOS 17.0.0 support\\nOptimized HOS INI1 packaging when it can fit inside the kernel region.\\nL4T: Allow undervolting of RAM for stock frequencies\\nL4T: Corrected some timings for Arachne that were higher than they should have\\n\\n6.0.6\\n\\nBoot entries:\\nAllow overriding bootwait\\nbootwait can now be used on boot entries to override the global one.\\nL4T/Arachne T210 (Erista) and T210B01 (Mariko) changes:\\n\\nAutomatically set rated DRAM frequency for T210B01 by default.\\nSince Arachne is now final and stable use 1866 MHz for old ones and 2133 MHz for newer ones.\\nT210 will still use 1600 by default, since these chips are rated as such.\\nAllow T210B01 RAM OC up to 3200 MHz (from 3000) and T210 RAM OC up to 2366 MHz (from 2133)\\nSome ram models and binning can handle it. This needs L4T 5.1.2 release and up to work.\\nImproved 8GB table creation for T210\\nAllow ram undervolting. VDD2 min: 1050mV, VDDQ min: 550.\\nSome timings were corrected to use latency based base values instead of frequency\\nRaises overall bandwidth performance and lowers latency\\nAdded Memory PTSA DDA rework support for increased efficiency\\n\\n6.0.5\\n\\nL4T: Add BPMP-FW support for T210 (power management).\\nL4T: Add fine tuned DRAM voltage selection via ram_oc_vdd2 and ram_oc_vddq.\\nMore info will be in the L4T 5.1.1 config readme.\\n\\n6.0.4\\n\\nHOS 16.0.3 support\\n\\n6.0.3\\n\\nA mitigation was added for bad chainloaders that leave sd gpios in a bad state\\nL4T: Now some 2019 T210B01 Samsung ram chips can be overclocked to 2133 MHz for Linux/Android.\\nL4T: Added a mandatory change for supporting SD UHS DDR200 bus speed for Linux/Android.\\nFixed an edge case where if hekate was run and the rtc alarm was fired after, booting to HOS would power off the device.\\nSince in that case the Switch was awakened via Power or USB, all flags are now cleared during Auto HOS Power off checks.\\nVarious fixes and improvements\\n\\n6.0.2\\n\\nHOS 16.0.0 Support\\nFixed an issue which could, in some cases, cause Stock-mode to hang on boot on HOS 1.0.0 to 6.1.0.\\nFixed an issue on TUI mode where user could not access options without a hekate_ipl.ini\\nIn case hekate started with removed or broken SD and was plugged later\\nL4T Loader: updated T210B01 SC7-Exit firmware to account for new burnt fuses count\\nVarious other improvements.\\n\\n6.0.1\\n\\nFixed an issue with some FW data not propagating on T210B01.\\nFixed an issue with passing incorrect number of mtc tables on T210\\n\\n6.0.0\\n\\nL4T Loader\\nMandatory for new L4T releases and especially for Mariko support.\\nCoreboot is no more (Still supported until everything gets updated though).\\nR2P for Mariko. Will be used by L4T.\\nAuto HOS power off will blink 3 times on OLED panels now\\nThe previous method of slow fade out doesn't work on OLED panels, so blink instead.\\nChanged battery enough limits\\nIncreased by 50-100mV. As always if you see the hekate battery empty icon, charge your switch, otherwise it can easily randomly shut off.\\nVarious improvements/fixes\\n\\n5.9.0\\n\\nHOS 15.0.0 full support\\nFixed a regression on HOS 6.2.0 causing TSEC to hang hekate\\nA new animated ticker line is now shown during bootlogo's delay time\\nIt gives a nice visible feedback and a reminder to user to press VOL- if needed.\\nIt can be disabled by editing hekate_ipl.ini and setting noticker=1 in [config] section. (GUI option may come later.)\\nThat only disables the ticker for custom bootlogos, not the default hekate one.\\nFor new Mariko users, Auto HOS Power Off feature is now enabled by default\\nExisting users, can enable it, as always, in Nyx -> Options -> Auto HOS Power Off.\\nAdded an error message in case payload launching fails\\nPreviously it wouldn't show anything.\\nSupport for new dram chips\\nMany under the hood improvements\\nNotice about Atmosphere 1.0.0 and up: The fss0=atmosphere/fusee-secondary.bin in hekate_ipl.ini must be changed to fss0=atmosphere/package3. And make sure that atmosphere/contents folder does not have old Atmosphere components.\\nNotice about resized emuMMC: Resized emuMMC does not have the slow bug anymore. You can create a new one or recreate it via Nyx and the issue will be gone.\\n\\n5.8.0\\n\\nBetter backlight control for Aula OLED panel\\nFixed an issue where Nyx would fail to load after a failed attempt of chainloading a payload\\nAdded watchdog timer to protect against hangs from SD corruption when loading and running LP0/Minerva configuration\\nNow if the libraries are corrupted and are executed, it will fire the watchdog after 5s if BPMP hangs and reload and skip them\\nFixed a bug in low battery monitor where it could deinit display 2 times.\\nVarious BDK (HW) changes that are propagated to hekate main (aka under the hood improvements)\\n\\n5.7.2\\n\\nHOS 14.0.0 Support\\nImprove boot speed even further\\nThese changes come and sit on top of v5.7.0 significant boot speed optimizations\\nAnd issue was fixed where it would unmount sd on new setups with no hekate_ipl.ini and throw an error about missing Nyx.\\nThat was introduced in v5.7.0 and was caused because creating a new ini would unmount the sd card at the end.\\nVarious fixes and improvements\\n\\n5.7.0\\n\\nHOS 13.2.1 Support\\nSignificantly improve HOS total boot speed\\nImprove hekate init speed\\nImprove payload launching speed\\n\\n5.6.5\\n\\nHOS 13.1.0 Support\\n\\n5.6.4\\n\\nVarious optimizations\\nImproved more error messages for HOS boot\\nOn mariko, instead of a generic \"Is BEK missing?\", it will now say if it really is missing or the pkg1 is actually corrupt.\\nOn Erista/Mariko, the \"Wrong pkg1 flashed!\" error will now also tell which pkg1 type on which unit type.\\n\\n5.6.3\\n\\nFixed an issue that was causing hangs in hekate when parsing emummc.ini that has paths bigger than 128 characters\\nAdded Panic error reporting\\nThese are normally shown on a device without AutoRCM as colored panic screens. Now hekate can also show them in text form, plus their error code.\\nChanged description of boot2 fatal error to better reflect possible causes\\n\\n5.6.2\\n\\nFixed some issues with emuMMC ID in v.5.6.2:\\nFixed emuMMC ID size\\nThis only affects users that use more than 1 emuMMC and actually care about the ID\\nSet emuMMC ID when emupath= key is used and emuMMC changes on the fly with a boot entry\\n\\n5.6.1\\n\\nHOS 13.0.0 Support\\nImproved error messages for pkg1/pkg2 mismatch\\nImproved error message on fatal because of mixed Atmosphere components because of old path in fss0 key.\\n\\n5.6.0\\n\\nFull support for Switch OLED (Aula)\\nFor basically Display, HW/Fuses, Dram, boot (will need HOS 13.0.0), etc, In case you are able to run it there.\\nAs for display, that's subject to change on \"how it works\" if OLED panel mods for earlier Switch (Icosa/Iowa) appear.\\nSept is now completely removed\\nBoot process on Erista 7.0.0 and up is now completely overhauled\\nIt's also now autonomous thanks to bundled new TSEC Keygen firmware by Atmosphere\\nMake sure you extracted latest bootloader folder from release\\nWrongly flashed pkg1 can now be identified and inform user\\nErista pkg1 on Mariko or Mariko pkg1 on Erista.\\n\\n5.5.8\\n\\nHOS 12.1.0 Support\\nThis uses a new mkey. New Sept will need to run at least once on Erista models.\\n\\n5.5.7\\n\\nHOS 12.0.3 Support\\nhekate had support for 12.0.3 on clean SYS cfw or OFW already.\\nSupport for emuMMC and SYS/Emu FS patches like nogc, had to be updated otherwise hekate would throw an error if used.\\nv5.5.7 adds full 12.0.3 support for all of that.\\n\\n5.5.6\\n\\nHOS 12.0.2 Support\\nAuto NoGC is now applied if you have 12.0.2 and 14 fuses\\nThat's because 12.0.2 burnt a fuse and brought the total to 15 fuses.\\nIf user is still in 12.0.0-12.0.1 you will still need kip1patch=nogc.\\nIf updated to 12.0.2, that line can now be removed if wanted.\\nAnd as always if auto nogc is not wanted, you can disable it in the Options Tab.\\nFixed Seamless display for L4T Linux/Android\\nThere was an issue where hekate would clear the bootlogo when launching L4T.\\nThat is now fixed and the bootlogo will remain until kernel finishes init.\\nFixed an issue when a kip patch was defined 2 times it would throw an error.\\n\\n5.5.5\\n\\nHOS 12.0.0 Support\\nAdd USB3.0 enable via exosphere support (needed for 9.0.0 and up)\\nIf you enable that, it will impact signal quality of WiFi 2.4 GHz and Bluetooth.\\nAdd Seamless Display support for L4T Linux/Android.\\nEnsure RAM Overclocking is disabled when booting stock to fix sleep issues\\nMinerva was updated with more accurate clock trimmers\\nOptional voltage change was added to minerva when RAM OC is used via compiler flags\\nThis removes the need for hekate main to be recompiled. Max allowed voltage is 1250mV.\\n12.0.0 didn't burn a fuse, so AutoNOGC, doesn't work IF you have 14 burnt fuses.\\nUse kip1patch=nogc in your boot entry if NOGC is desired in that case.\\n\\n5.5.4-v2\\n\\nNothing changed in hekate main. Check v5.5.4 & Nyx v1.0.0 changelog if you want to learn more.\\n\\n5.5.4\\n\\nBetter user reporting for Mariko Warmboot Storage (MWS) with missing firmware\\nIn case warmboot firmware was not found in MWS cache in SD, it will now notify user that sleep mode will be disabled if continue booting is selected.\\nEKS for Erista now automatically upgrades itself, in order to fix issues with normal vs r2p paths when it was created with old hekate.\\nMain BCT is now checked for improper values before running Sept in Erista\\nBefore, launching Sept in such cases (improper BCT) it would make it black screen.\\nNow an error will show up that instructs user to run sept with proper BCT at least once, in order to cache keys in EKS.\\nFatFS now supports simple GPT\\nIn case you mangled your Hybrid MBR, this will allow you to launch Nyx if FAT partition is the first one.\\nSDSC cards (<= 2GB) are now supported\\nMany other bug fixes and improvements\\n\\n5.5.3\\n\\nFixed an issue with sdmmc driver. This might increase compatibility with a certain set of SD cards.\\nFixed an issue with a bad chainloader. Release was updated to include 63d0330\\nCompiled with latest BDK.\\n\\n\\n5.5.2\\n\\nAdded back an SD card mitigation for old coreboot roms\\nAnyone that still relies on that should actually use an updated coreboot.rom.\\nL4T Linux/Lakka/Android P/Q already have a newer one.\\nFixed an issue where AutoRCM status would be reported falsely on modchipped switches\\nPower management (Regulator framework/Reboot/Power off) was refactored\\nPower off now disables all regulators and comes back to init state, effectively using even less power when powered off.\\nRegulator framework was updated to simplify the whole process of changing regulators for all 4 types.\\nHOS versioning was refactored to use fuses instead of keyblobs\\nThis will make future hekate updates simpler.\\n(Basically KB version was not providing enough info to identify and select each version's quirks. This change doesn't actually affect the user, it just reduces the codesize/complexity of hekate. Also it has nothing to do with actual fuses burnt.)\\nSimplified RAM OC for users that compile an overclocked Minerva library.\\nMany bugfixes\\n\\n5.5.1\\n\\nHOS 11.0.1 support\\nFix sleep in modchipped Eristas\\nFirst BCT, that is used in warmboot binary, has improper modulus. Now it looks all 4 for a valid one.\\nAdd exosphere uart logging support\\nThis can be enabled via compile time flags or exosphere.ini\\nMitigate an issue when initializing some Phison SD Cards\\n\\nv5.5.0\\n\\nHOS 11.0.0 support\\nMariko (T210B01) HW support\\nhwinit, dram/lp0, display, sdmmc, ccplex, fuse, etc were all updated to support the new SoC.\\nMariko (T210B01) HOS support\\nIn order to boot HOS on Mariko, all keys should be in place before launching hekate.\\nFailing to do that you will be greeted with Pkg1 decryption failed! Is BEK missing?.\\nAdditionally, Atmosphere must be updated to 0.17.0 that will have Mariko support.\\nAdded Mariko Warmboot Storage (MWS)\\nThis dumps the warmboot binary on SD to allow downgrading when fuses are burnt.\\nThe warmboot exploit doesn't exist in Mariko, so the warmboot binary must be paired with fuses.\\nTake care when wiping SD Card, you need to keep it backed up.\\nAdded support for Exosphere Fatal binary for Mariko\\nCustom binaries can be used with the exofatal= option.\\nFix AutoRCM status checks on Mariko and modified BCTs\\nFixed an issue with exFAT supported FS.kip checks\\nFix an issue where hekate wouldn't load if damaged fuel gauge chip.\\nMany other changes and fixes\\nemuMMC\\nHOS 11.0.0 support\\nFixed an issue with slow boot and speed in 11.0.0\\nMariko (T210B01) support\\n\\nv5.3.4\\n\\nMesosphere support (Atmosph\u00e8re's kernel reimplementation)\\nupdate.bin is now automatically created on first boot\\nThis allows l4t/android or anything else that injects/warmboots an old hekate to always use the latest one\\nAs a reminder, it gets automatically updated via injecting a new hekate once\\nBootloader protection\\nCurrently can only be enabled via editing hekate_ipl.ini.\\nUsing bootprotect=1 in [config] disallows any reading/writing of the bootloader folder and its contents inside HOS, preventing any corruption of it.\\nThis of course has the side-effect of homebrew that depend on it (e.g. hekate Toolbox) to not work fully.\\nFix an issue where failing to patch emuMMC would allow user to continue booting\\nSome extra fixes.\\n\\nv5.3.3\\n\\nHOS 10.2.0 support\\nAdd backup pkg1 loading support\\nHelps in cases primary pkg1 is corrupted\\nBetter SD info in hekate TUI\\nAnd better error handling\\nFix exo fatal dump header\\nThis fixes a regression where it was removing the AFE2 header.\\nFix an issue with sleep when hekate is launched from bad chainloaders\\nAndroid/L4T boot mode is now not cleared if user canceled auto boot\\n\\nv5.3.2\\n\\nFix pkg2 re-encryption for 8.1.0/9.0.X\\nThis fixes issues with panics to RCM or blue screens when new exosphere is used (0.13.0 and up).\\nAdd panic dumping (pstore) for L4T Linux/Android\\nThis is disabled for now because it causes dumps if the register has garbage inside.\\nAnd many more fixes.\\n\\nv5.3.0\\n\\nFull Exosph\u00e8re 2 support (Atmosph\u00e8re 0.13.0 and up)\\nCompatibility for older atmosphere releases remains. You can boot both old releases and new 0.13+.\\nEven faster boot times by managing eMMC better. Saves 500ms.\\nMany HOS launch QoL fixes and checks.\\nEnable charger unconditionally for deadlock protection.\\nFix kip1patches sometimes not applying on very specific edge cases. (Existing since ever).\\nAllow booting if kip1 patches fail. (It will ask you.).\\nDo not continue when patches are important (example: emummc, nogc, etc) or you don't know the implications.\\nAdd corrupted bootlogo protection. Avoids soft-locking.\\nAnd many more fixes.\\n\\nv5.2.1\\n\\nNew in this version\\nFixed emupath key. You can now finally switch between emuMMC via config\\nIf that emuMMC is not found, it will now show you an error.\\nFixed prodinfo overriding keys\\nFixed exosphere.ini parsing (v5.2.0 shadow release)\\nFixed some issues with FatFS\\nemuMMC (since v5.2.0)\\nFile based is almost as fast as RAW now\\nUpdated, improved and faster SDMMC driver\\nEven raw partition based got a boost.\\nBased on https://github.com/m4xw/emuMMC/tree/54b9d24365e1943832a2f50b3324ca11cb0c4999\\n\\nv5.2.0\\n\\nhttps://github.com/CTCaer/hekate/releases\\n\\nv5.1.4\\n\\nHOS 10.0.0 support\\nAdded Empty Battery screen on boot\\nThis will show an empty battery icon if voltage is pretty low.\\nIt will power off after 15s if NOT charging. It continues boot after reaching enough charge.\\nIt can be bypassed with VOL- & VOL+. For more, read 5f142b4.\\n(Previously, if battery was less than 2800mV, the console wouldn't react - black screen - to a rcm injection.)\\nFixed an issue where if sept folder was missing, hekate could not write itself there.\\nSome bug fixes\\nemuMMC\\nHOS 10.0.0 support\\nBased on m4xw/emuMMC@b168ddf\\nNyx v0.8.7\\nFixed an issue with LvGL that was making Nyx hang and corrupt text\\nAdded touch panel HW testing, before allowing forced calibration\\nThe touch IC fw has a bug that allows calibration to happen when the panel is defected.\\nThat will eventually happen from HOS though when a touch fw gets updated...\\nDump pkg1/2 tool now supports HOS 10.0.0\\nAdd touchscreen initialization retries in case it fails.\\nSome bug fixes\\n\\n\\nv5.1.3\\n\\nFixed an issue with booting CFW on < 7.0.0\\nA missing check was causing old versions to boot complete stock.\\nFix issues with the usual sd card suspects when doing a warmboot based reboot.\\nThe SD Card regulator is now disabled on HW init and re-enabled at the appropriate time.\\nSupport for Atmosph\u00e8re experimental content.\\nUse the fss0experimental=1 key on a boot entry to enable it. For now it's only for NCM.\\nSupport fatal context version AFE2\\nAdd more Minerva checks, in case it is paired with old bootloader folder contents.\\nSupport coreboot.rom chainloading that is not 1MB.\\n\\nv5.1.2\\n\\nHOS 9.2.0 support\\nAdded support for parsing sept from fss0\\nFixed issue with mixing older versions on L4T/Android\\nFixed an issue where hekate would not honor updater2p key\\nBetter boot errors communication\\nBetter stability with BPMP clocks\\nFixes for heap, lists, ini parsing, fss0 and many others.\\n\\nv5.1.1\\n\\nAdded Atmosph\u00e8re's system memory pool increase kernel patches\\nNow sysmodules have way more available ram\\nAdded updater for update.bin and reboot_payload.bin binaries\\nupdate.bin is updated if old.\\nreboot_payload.bin is updated if old and if updater2p=1 key is configured (for now only manually via hekate_ipl.ini), it forces an update even if the current payload is not hekate.\\nAdded hekate libraries error printing in order to inform user to also update bootloader folder\\nFixed hekate main compatibility with old Minerva to avoid hangs on black screen when injecting\\nSome users forgot to drag n drop bootloader folder and replace files, which caused that issue.\\nFixed an issue where users with bootwait=0 could not enter the menu\\n\\nv5.1.0\\n\\nFull support for 9.1.0\\nFaster and better DRAM training\\nThis performance change affects both hekate and Nyx.\\nlibsys_minerva.bso was updated and the update is mandatory.\\nIf you notice slow performance in hekate or Nyx, you forgot to drag n drop the bootloader folder from release.\\nEven faster HOS boot\\nBecause of the aforementioned change, HOS now boots even faster.\\nEnabled Low Battery Shutdown when voltage is less than 2.8V\\nThis will help with many users that kill their battery by forgetting their devices into RCM/AutoRCM.\\nFixed an issue with some users hanging in black screen or logo for Nyx loading\\nThis is unrelated with HOS boot issues.\\nFixed a critical issue with heap collapsing on edge cases. Thanks @shchmue.\\nAdditionally, heap management became more robust and fragments way less often.\\nAdded support for entering fastboot on Android.\\nThis requires of pressing VOL+ first and while holding it, also start holding VOL-.\\nExternal patches only look for patches.ini now\\nThe reason is that patches_template.ini is now useless and no one should install homebrew when title replacement exists.\\nAlso because apparently it confuses users into thinking that it takes precedence over patches.ini, even though it explained countless of times that it's only loaded if patches.ini is not found.\\nLastly there's a confusion where users thought that empty patches is not the same with no patches, even though it's exactly the same. So now any empty patch will throw an error.\\nTo sum up, removed to simplify the process because of user errors.\\nFixed an issue with force shutdown timeout, where it would power off if PWR button was pressed for 2s. It's now back to 6s.\\nFixed instant boot to menu (\"bootloop\") on errors. Now hekate will properly wait for user input in order to go back to menu.\\nFixed an issue with tsec keys, where KFUSE didn't have enough time to initialize.\\nFixed an issue where double defined patches (like NOGC), would fail the process. Now any reapplied patch, will be properly marked as applied.\\nCountless refactors and bugfixes in hw init and drivers\\nMany general bugfixes\\n\\nv5.0.2\\n\\nFull support for 9.0.0\\nFixed SaltyNX for emuMMC 8.x.x\\nThere was an issue with fs mitm patches where it caused hangs for SaltyNX.\\nAdd support for forced AutoBoot via id key - Android reboot\\nYou can now add id=max7char to your boot entries and hekate can be instructed to autoboot via only this.\\nThis will be helpfull especially with many Linux distros and Android (id=SWRANDR).\\nAutoNOGC protection for fatal errors in emuMMC\\nNOGC will now be applied automatically when fuses are >= 9.0.0 and emuMMC is less than that.\\nStreamline power cycles for Sandisk U1 SDR104\\nNo more hangs because of this.\\nFix CPU/GPU on warmboot reboot from Linux/Android\\nAllow critical info to be shown when a fatal error occurs while AutoBooting HOS\\nNow, before booting Nyx right away, it will show the error message and wait for a button press.\\nAdd exosphere/kernel no user exceptions handler cfg\\nAnd many other bugfixe\\n\\nv5.0.1\\n\\nFixed keygen for 6.2.0 stock and CFW\\nFixed boot to 6.0.x/6.1.0\\nFixed hang issues with booting HOS\\nThese were created from cache coherency issues, or sd card fast reinit or stack corruption.\\nDisabled stock emuMMC until it's fixed\\nCheck news at https://github.com/m4xw/emuMMC\\nNow if patches.ini is not found kip patches will be loaded from patches_template.ini.\\nAdded a check that emuMMC is not loaded without custom secmon and warmboot.\\n\\nv5.0.0\\n\\nIntroducing Nyx v0.8.0\\nNyx is hekate's GUI. Packs many features, like FastFS, emuMMC manage, customization, etc.\\nLook below for more.\\n8.1.0 support\\nemuMMC support\\nIt supports disabling it by boot entry (emummc_force_disable=1), stock (not all fw ver support it) and many more.\\nWorks with SD raw partition and SD file based. (SD file based is extremely slow. Wait for FastFS 4 emuMMC).\\nThis version can sanely shutdown and also supports more SD cards than before.\\nThanks to a collab with @m4xw , @SciresM, @hexkyz.\\nSupercharged boot times\\nEven with emuMMC or kip1 patching, it's faster than before.\\nSupercharged Backup/Restore with FastFS (Nyx only)\\nBackup and Restore is now orders of magnitudes faster.\\nSome examples (measured on a U3 SD): No verif: 9min, Sparse: 15min, etc. Even Full with hashes is extremely faster.\\nExternal KIP1 patching support\\nNow non-important patches reside outside of hekate binary. For now this can only patch KIPs defined in hekate's code, with whatever new patches. Next versions will support other KIPs.\\nMany bugfixes\\n\\nNyx v0.8.0\\n\\nSnappy and fluid GUI w/ touch support\\nYes! This runs on BPMP!\\nAll classic launch options are there\\nemuMMC manage\\nChange between raw partition emuMMCs and SD file based ones easily.\\nCreate file based or raw partition based from eMMC via the Create button.\\nYou can also restore a backup directly to sd partition via the Restore option in tools (outside of emuMMC), AFTER you turned ON SD emuMMC Raw Partition.\\nMigrate other types of emunand (raw partition or sd file), repair existing raw partition configurations, or migrate a backup (outside of restore folder), to sd file based.\\nEverything is currently made to protect Linux partitions.\\nAdditionally, the raw partition based is done in 16MB offset, so it can protected from quick formats.\\nAll Info and Tools are now supercharged\\nDump individual kips from eMMC, see detailed info about fuses, do backups and restores way faster, etc.\\nCustomization support\\nCustom icons for boot entries and also a background is supported. (Check readme for how to use them).\\nMany additions in automation. For example, Nyx will automatically dump pkg1/2 after a sept run.\\nScreenshot support. Touch the screen with 3 fingers (no need for swipe).\\nAnd many many more smaller and bigger features.\\nNOTE: The folders in emuMMC now hold nyx configurations. file_based and raw_based. The first tells it that it's a file based one and the other holds the sector of that emuMMC.\\nNOTE2: This changelog will be updated with missing info.\\n\\nv4.10.1\\n\\nReverted 204MHz SD device clock\\nSome U1 sd cards with Sandisk microcontroller misbehaved in this speed.\\nSome small QoL changes\\n\\n\\nv4.10\\n\\nFull 8.0.0 support\\nAdd brick protection for RCM patched units\\n(On a patched unit, if you enable RCM, you cause a brick that needs external eMMC programmer to fix.)\\nAdd Exosphere panic report and save to SD\\nUseful to debug those weird colors.\\nAdd status bar update when executing Fix archive bit tools\\nSo you know that you have to wait.\\nFixed a TSEC query timeout for 6.2.0. Thanks @shchmue.\\nAdd support for AutoRCM on devkits\\nBattery \"desync\" fix is now applied on boot\\nBecause of that, the entry in tools got removed.\\nUpdate FatFS to R0.13c (p3)\\nCleaning and refactoring of GFX\\nMany bugfixes\\nCheck readme.md for more.\\n\\nNOTE: You will need sept and a custom secmon and warmboot binary to boot 7.0.0-8\\n\\n\\nv4.9\\n\\nWarning: Because of the new versioning changes, please delete sept/payload.bin.\\n\\nNew in this version\\n\\nSupport for parsing Atmosphere's Fus\u00e9e Secondary Storage (FFS0)\\nUsing fss0={sd path} allows you to parse kips, exosphere and warmboot from a fusee secondary binary.\\nExosphere and warmboot are overridable if these entries are defined after that.\\nAdditionally any extra kip can be loaded as before via kip1={sd path}/* for many, or kip1={sd path} for a sigle one\\nWarning: Don't double load core kips like loader, pm, sm and ams_mitm. The result will be a hang.\\nSupport for split files restore Thanks to @emvym3two\\nYou can now restore using parts or FAT32. The only condition it that all parts must be in the sd card.\\nIt protects from fake sd cards, bad sectors and frequent I/O corruption. Aka, ~100% of cases.\\nPerformance changes for Backup/Restore/Verification\\nAligned buffers will now up the speeds by a lot.\\nVerfication is now set to Sparse mode by default.\\nIt protects from fake sd cards, bad sectors and frequent I/O corruption. Aka, ~100% of cases.\\nChange order of invoking sept.\\nThis is important, otherwise it can break tools like memloader.\\nUntil a semi-usb init solution is found, hekate will show bootlogo and allow you to go to menu.\\nIf >= 7.0.0 after that, it will run sept and then show logo again without a wait. For as long as rebuilding the boot process takes.\\nSmarter versioning for update.bin and sept payloads\\nNow it supports hotfix versions and it's still compatible with old hekate versions.\\nSept is now updated via hekate's copy in IRAM. This negates the mandatory usage of update.bin and it copies always the most updated version.\\nAdditionally if sept/payload.bin is found that it's foreign, it is renamed and hekate takes its place for running sept. After that it renames the original payload back and continues with booting.\\ndebugmode is now obsolete for atmosphere. It's enabled by default.\\nSome nasty stack corruption bugs were fixed\\nCheck readme.md for more.\\n\\nNOTE: You will need sept and a custom warmboot binary to boot 7.X.X.\\n\\nv4.8\\n\\nFull 7.0.0/7.0.1 support.\\nThe keys are generated via Atmosph\u00e8re's sept.\\nAdditionally the sept/payload.bin, if found that it is hekate, it gets updated via update.bin.\\nReboot to a selected boot entry via HOS hb\\nYou can now force a boot configuration on hekate by setting the boot storage in the hekate binary.\\nThis can be done via a homebrew, which sets the ini entry that is desired to boot.\\nAdditionally force boot to menu can also be achieved. Please check readme.md for more\\nAuto NoGC\\nIt checks fuses and applies the patch automatically if higher firmware.\\nIt is now a global config and set on auto by default. (0: Disabled, 1: Auto)\\nFixed a bug with ini list, where it would hang when using wildcard * with kip1=.\\nQuality of life fixes under the hood, that ease user's life.\\nAs always many bug fixes and some refactoring.\\nBacklog from v4.6svc beta:\\n\\nsvcControlCodeMemory patches that helps dynarec on emulators.\\nFixed sleep mode with debug mode when official 6.X.X secmon is used\\nAdded RTC driver which now also disables wake up alarm when Auto HOS Power Off is used\\nHelps when users that use AutoRCM inject and power off pretty fast.\\nFixed GPU on Linux when booting from warmboot\\nAdded missing fallback auto calibration of sd cards and plus some small fixes.\\nCheck readme.md for more.\\n\\nNOTE: You will need sept and a custom warmboot binary to boot 7.X.X.\\n\\nv4.6svc\\n\\nNew in this BETA\\nAdded patch for svcControlCodeMemory that helps dynarec on emulators.\\nFixed sleep mode when debug mode is on and official 6.X.X secmon is used\\nAdded RTC driver which now also disables wake up alarm when Auto HOS Power Off is used\\nHelps when users that use AutoRCM inject and power off pretty fast.\\nFixed GPU on Linux when booting from warmboot\\nAdded missing fallback auto calibration of sd cards and plus some small fixes.\\nNOTE: You can get the other files (lp0 library) from a previous release.\\n\\nv4.6\\n\\nThis version supports booting ALL current OS/CS CFW, Linux chainloading and payload tools.\\nNo more SD card removals\\n\\nLatest OFW supported: 6.2.0\\n\\nNew in this version\\nFixed sleep for downgraded units with efuses burnt more than required.\\nFixed update.bin chainloading and also forced hw init on update, in case it changes again in the future.\\nThis is a breaking fix and requires to have v4.6 to your modchip/dongle.\\nNew archive bit fix\\nIt can now also fix the Nintendo folder. No more \"corrupted\" sd when upgrading sd card or restoring Nintendo folder.\\nFixed UART debug printing. Thanks @hyln9\\nAuto HOS power is now disabled by default. Probably, most people learned what it does and can enable it from the Options menu.\\nSome small SMMU emulation for TSEC fixes for the unluckiest out there. Max wait time remains small.\\nMany many many fixes and also added some error msgs for restore and boot options.\\nNOTE: Everything hekate related, moved to bootloader folder.\\nCheck readme.md for more.\\n\\nv4.5\\n\\nFull 6.2.0 support. Many thanks to @nwert and @balika011 for their help!\\n-Supports Secure Monitor and new Exosphere\\n-Supports booting 6.2.0 with less than 8 fuses\\n-It has 100% success ratio\\n-Added support to 'Print TSEC keys' and 'Dump pkg1/2' tools\\nFixed YouTube HDCP issue. Thanks @hexkyz for taking the time to investigate.\\nEvery file lister is now ignoring hidden files and .dot files. Thanks @StevenMattera\\nThe Minerva Training Cell library for hekate was updated to latest version (v1.1)\\nAdded \"silent option to Auto HOS power off option. You can now choose if you want the logo to be shown. Thanks @Huntereb\\nRefactored the monolithic main.c to simpler grouped sections. Additionally hos.c took some love.\\nMany many bugfixes\\nNOTE: Everything hekate related, moved to bootloader folder.\\nCheck readme.md for more.\\n\\nv4.2:\\n - Support \"*\" folder wildcard in kip1 key\\n   Using <folder>/* can now parse and load all kip and kip1 files inside that folder.\\n - Add option to enable/disable Auto HOS power off\\n   If you do not use a modchip/dongle, Options->Auto HOS power off to disable.\\n - Allow canceling of the verification process\\n   Now you can cancel backup and verification process. If backup phase is done, canceling in verification, will keep your files.\\n - Some small bugfixes and support certain cfw on its stock version\\n\\nv4.1:\\n - Full 6.0.0 support\\n - Improved .ini/payload handling\\n - PWM backlight\\n - Auto full power off when the device woke up from HOS power off\\n   Usefull with modchips/dongles when using AutoRCM. (You can see it as a breathing backlight with hekate's logo).\\n - Backup can be now cancelled\\n - Bootrom dumping\\n\\nNote: Everything hekate related, moved to bootloader folder.", 
            "screens": 4, 
            "extracted": 3317, 
            "version": "6.2.2", 
            "filesize": 901, 
            "details": "Custom Nintendo Switch bootloader, firmware patcher, and more.\\n\\nlots of configuration options available and you would be better to read here : https://github.com/CTCaer/hekate .\\n\\nNotice about Atmosphere 1.0.0 and up: The fss0=atmosphere/fusee-secondary.bin in hekate_ipl.ini must be changed to fss0=atmosphere/package3. And make sure that atmosphere/contents folder does not have old Atmosphere components.\\n\\nNotice about resized emuMMC: Resized emuMMC does not have the slow bug anymore. You can create a new one or recreate it via Nyx and the issue will be gone.", 
            "app_dls": 140078, 
            "md5": "a11e6e3a95e6540cddb9e31e1a83d743"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/switch-time/switch-time.nro", 
            "updated": "15/08/2024", 
            "name": "switch-time", 
            "license": "The Unlicense", 
            "title": "switch-time", 
            "url": "https://github.com/3096/switch-time/releases", 
            "description": "Change NetworkSystemClock", 
            "author": "3096", 
            "changelog": "0.1.5\\n\\nChangelog:\\n\\nAdd adjustments by 10-minute, 1-month, 1-year deltas\\nAdd an icon by izenn (created by Freepik - Flaticon)\\nGeneral software stability improvements to enhance the user's experience\\nSHA256:\\nae2b9d5384dac11e651bd5f32cd451e6dccad2fa1c14fa1895c296d1c2d441fe switch-time.nro\\n\\nCredits:\\n\\n@thedax for NX-ntpc, from which the parent project is forked.\\n@Cytraen for changing the servers to cloudfare.\\n@vonhabsbourg for adding month and year change.\\n@izenn for the watch icon created by Freepik - Flaticon.\\n\\n0.1.1\\n\\nAdded a hidden L functionality - quick launch by replacing hbmenu.nro\\nFixed an issue when NetworkSystemClock is not set\\nGeneral software stability improvements to enhance the user's experience", 
            "screens": 0, 
            "extracted": 345, 
            "version": "0.1.5", 
            "filesize": 145, 
            "details": "Change NetworkSystemClock\\n\\nCredit\\n\\n@thedax for NX-ntpc, from which this project is forked.\\n\\nFunctionality\\n\\nChange time by day/hour\\nContact a time server at http://ntp.org to set the time back to normal", 
            "app_dls": 4467, 
            "md5": "19a802daa5e8796acf21c51e49e142eb"
        }, 
        {
            "category": "game", 
            "binary": "none", 
            "updated": "15/12/2024", 
            "name": "TetrisOverlay", 
            "license": "GPLv2", 
            "title": "Tetris Overlay", 
            "url": "https://github.com/ppkantorski/Tetris-Overlay", 
            "description": "A Tetris overlay for the Nintendo Switch", 
            "author": "ppkantorski", 
            "changelog": "0.3.3\\n\\nBug fix for B key exiting when it should not be.\\nIncreased duration for screenshot opacity.\\n\\n0.3.2\\n\\nUpdated for compilation with latest libultrahand (v1.8.2).", 
            "screens": 0, 
            "extracted": 956, 
            "version": "0.3.3", 
            "filesize": 363, 
            "details": "An Ultrahand-enhanced Tesla overlay that brings classic Tetris gameplay to the overlay menu. This overlay allows for in-menu gameplay with dynamic UI elements, saving and loading of game state, and high score tracking.\\n\\nNotice: Requires Ultrahand Overlay or Tesla Menu.", 
            "app_dls": 429, 
            "md5": "9e4125fd9221577981c0205642519e91"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/pplay/pplay.nro", 
            "updated": "21/02/2022", 
            "name": "pplay", 
            "license": "n/a", 
            "title": "pplay", 
            "url": "https://github.com/Cpasjuste/pplay/releases", 
            "description": "video player for the Nintendo Switch", 
            "author": "Cpasjuste", 
            "changelog": "3.5\\n\\nadd back ftp support\\nbug fixes and stability improvements..\\n\\n3.4\\n\\nFix USB\\n\\nv3.1\\n\\nfix incorrect screen resolution\\nimprove scraper results with levenshtein algorithm\\nfew fixes and improvements\\n\\nv3.0\\n\\nfix for 9.0+ firmware\\nadd tmdb scraper\\nMany more untracked changes (UI, Browser, etc.)\\n\\nv2.1\\n\\nplayer: hide loading message and report error... on file loading error\\nplayer: fix http browsing of folders with the ' special characters\\nplayer: fix http loading of files with special characters\\nplayer: speedup http browsing\\n\\nv2.0\\nuse mpv interface as ffmpeg wrapper (provide a fast, stable and powerful experience)\\nadd external font support\\ndisable automatic media info extraction thread, media info is extracted when a media is loaded\\nlot of fixes and improvements\\n\\nv1.5\\n\\nenable rmvb extension support\\nincrease subtitle atlas size, should/may fix truncated subtitles\\nfix pause/resume when using home button\\nfix audio synchronization when using home button\\nreset osd play button when seeking\\nallow audio frequency < 48 khz without software conversion\\n\\nv1.4\\n\\nimplement threading (major speed improvement)!\\nfix date format in status bar\\nfix status bar not hidden on timeout hide\\nset lower buffering option by default (thanks threading)\\n\\nv1.3\\n\\nimprove audio decoding (fix some audio desynchronization, most 720p media seems to works fine even with medium buffering, this also fix some audio seeking problem in some media)\\nadd status bar (time and battery)\\nadd crappy pPlay title image\\nfix some random crashes when scanning media folder\\n\\nv1.2\\n\\nplayer: disable screen dimming and auto sleep when playing\\nplayer: fix pcm* audio format (unable to initialize audio resampler error)\\nplayer: fix \"unsupported sutbtitle format\" error (subtitle will be disabled)\\npplay: add ftp support (ftp://user:password@ip:port/), WIP (very slow loading time..)\\npplay: fix media information caching of long path/filename\\npplay: force loading of media information on load if not cached", 
            "screens": 0, 
            "extracted": 32454, 
            "version": "3.8", 
            "filesize": 14773, 
            "details": "pPlay is a video player for the Nintendo Switch. pPlay support most popular video formats, have subtitles (embedded ass) and http streaming support.\\n\\nUsage\\nUse left/right to switch menu's and windows... select a media and... have fun.\\nNotes\\npPlay should be able to play most media. While 720p should be mostly fine, 1080p support can vary with medias and bit rates. If so (audio de-sync for example), increasing buffering can help in most situation. This can be done in the main menu (left). Please note that increasing the buffer size will have some side effect like longer loading and seeking time, but also to stop a video (buffers needs to be released). This is more visible when using http streams, of course.\\n\\npPlay can stream media from an http server with directory listing enabled. To do so, you must edit the pPlay configuration file (pplay.cfg) to add your server address (NETWORK = 'http://samples.ffmpeg.org/';). Please note that you need a good and stable network connection for this, and you will probably have to set buffering to \"VeryHigh\" for smoother experience.\\n\\npPlay will extract media information in background, but i did spot a very few files which make the device crash. If so, you can disable this in pPlay configuration file (pplay.cfg): CACHE_MEDIA_INFO = 0;\\n\\npPlay will push the cpu speed when a 1080p media is played, and restore previous speed when paused or stopped. This is safe but can be disabled in the main option menu (left).\\n\\nPlease note that there is a (big?) delay when switching video/audio/subtitles streams to see the change. This is worked on but in the meantime, be patient :)", 
            "app_dls": 39039, 
            "md5": "aa1b6aa39a8e542a14882e41723dea9d"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/brainfuck/Brainfuck_Interpreter.nro", 
            "updated": "18/10/2018", 
            "name": "brainfuck", 
            "license": "none", 
            "title": "Brainfuck Interpreter", 
            "url": "https://github.com/TheKgg/switch-brainfuck", 
            "description": "Brainfuck Interpreter", 
            "author": "Thekgg", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 361, 
            "version": "1.0", 
            "filesize": 98, 
            "details": "Initial release for Switch Brainfuck. Probably not going to be updated any time soon.\\n\\nPut a .bf file with code (only code, no comments) in either the root of your emulator's SD card or in the same folder as your .nro. It will be booted on start. When it asks for input move the left joystick to select a number.", 
            "app_dls": 788, 
            "md5": "deeb33e50958f0e15dfcb4e7e3387ffd"
        }, 
        {
            "category": "game", 
            "binary": "/switch/diablo-nx/diablo-nx.nro", 
            "updated": "15/07/2019", 
            "name": "devilution-nx", 
            "license": "The Unlicense", 
            "title": "devilution-nx", 
            "url": "https://github.com/lantus/devilution-nx/releases", 
            "description": "Diablo for the Nintendo Switch", 
            "author": "lantus", 
            "changelog": "0.95\\n\\nMore bug fixes. Thanks rsn887 and erfg12!\\n\\nPrevent \"spell not rdy\" speech on exit dialog\\nMap L/R/A to char/inv/select spell, closer to PS1\\nMap B button to cancel in menu, and A to OK\\nPrevent walking with dpad while talking to people\\nAllow B button to skip intro (in addition to plus)\\nSupport physical USB keyboards\\nImplement touch controls\\nImprove event code, fix touch controls pointer missing\\nEnsure touch keyboard fails gracefully without softlock\\nSwap A/B in menu so B is OK, A is cancel\\nRemove hacks that are not neccessary with new event handling\\nUse SDL_GameController for portability, make touch portable\\nSimplify controller switch statements\\nUse SDL Game Controller also for menu navigation\\n\\n0.94\\n\\nLeft stick click for quest log\\nY in inventory to read books\\nFix infinite stats\\n\\n0.93\\n\\nlots of bug fixes! Thanks erfg12!\\n\\nFixed attack/pickup/open actions\\nFixed left/right/up/down movements\\nFixed inventory and hotspell snap grid\\nFixed towner chat\\nPlus opens menu, Minus opens automap\\nChanged readme to show Windows and MacOS compilation instructions\\nD-pad emulates joystick\\nAutomap moves with right joystick when open\\nController buttons now closely mimic PS1 controller setup (please don't let ppl change this again)\\nAdded lots of SWITCH definitions to hopefully get it closer to merging with master code", 
            "screens": 0, 
            "extracted": 12390, 
            "version": "0.95", 
            "filesize": 4930, 
            "details": "Diablo build for modern operating systems. This is the Nintendo Switch Port. It's still in Beta as i continue to map the controls over from the PC version\\n\\nHow To Play:\\n\\nCopy DIABDAT.MPQ from original Diablo game disc or GOG version.\\nLaunch diablo-nx.nro\\nEnjoy :)\\n\\nControls\\n\\nLeft Analog : Move Hero\\nB : Attack\\nY : Open Chest/Talk/Pick Up\\nX : Inventory\\nR : Character\\nRight Analog : Simulate Mouse\\nZR : Left Mouse Click\\nZL : Drink Heal Potion\\nMinus : Escape to Menu\\n\\n\\nNotes\\n\\nWhen pressing 'B' to Attack a monster. it will try to attack the nearest on. Im still playing around with the control scheme. There are lots of bugs.", 
            "app_dls": 8538, 
            "md5": "d39826399c22687861d99cc3d6157f8e"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/Openbor/OpenBOR.nro", 
            "updated": "10/05/2020", 
            "name": "openbor", 
            "license": "n/a", 
            "title": "OpenBor", 
            "url": "https://github.com/Cpasjuste/openbor", 
            "description": "OpenBOR is the ultimate 2D gaming engine", 
            "author": "cpasjuste", 
            "changelog": "3.0.7087-2\\n\\nadd rumble support (activate/deactivate from gamepads menu settings)\\n\\n3.0.7087\\n\\nadd opengl support\\nadd single/split joycon option menu\\nfix crash on exit\\nupdate to latest openbor git\\ngeneral system stability improvements to enhance the user's experience...", 
            "screens": 0, 
            "extracted": 9313, 
            "version": "3.0.7087-2", 
            "filesize": 3809, 
            "details": "OpenBOR is the ultimate 2D gaming engine with over 10+ years of active development behind it. With OpenBOR you can build anything from simple button mashers to elaborate projects rivaling the most lavish professional offerings. Download one of the dozens of ready to play game modules available here, or grab the development kit and start up one of your own!\\n\\n\\nPut your *.pak files in a Paks folder, inside OpenBOR.nro directory.\\n\\nOpenBOR official website: http://www.chronocrash.com/forum/", 
            "app_dls": 6168, 
            "md5": "ba2ea08a69825d87e6472796f5b3e56e"
        }, 
        {
            "category": "game", 
            "binary": "/switch/GirlsAreWeirdNX/GirlsAreWeird.nro", 
            "updated": "21/03/2022", 
            "name": "GirlsAreWeirdNX", 
            "license": "MIT", 
            "title": "GirlsAreWeirdNX", 
            "url": "n/a", 
            "description": " Unofficial port of Girls are Weird.", 
            "author": "faithvoid", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 46275, 
            "version": "1.0.0", 
            "filesize": 21912, 
            "details": "Unofficial port of the Ren'Py visual novel \"Girls Are Weird\" by bentosmile, using the Ren'Py Switch SDK.\\n\\n", 
            "app_dls": 950, 
            "md5": "16ebb6299631a75b45b5a6440bb15263"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/SuperModysseyLoader/SuperModysseyLoader.nro", 
            "updated": "27/03/2023", 
            "name": "SuperModysseyLoader", 
            "license": "MIT", 
            "title": "Super Modyssey Loader", 
            "url": "n/a", 
            "description": "Easily install Super Mario Odyssey Mods.", 
            "author": "hostedposted", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 34347, 
            "version": "3", 
            "filesize": 13073, 
            "details": "Super Modyssey Loader allows you to easily install Super Mario Odyssey mods from the GameBanana site.\\n\\nJust boot up the app, select the mod, and then click Install!", 
            "app_dls": 17828, 
            "md5": "44b458e9d633893bf0ec620c1bcd16f0"
        }, 
        {
            "category": "game", 
            "binary": "/switch/pacpac_switch.nro", 
            "updated": "11/10/2024", 
            "name": "Pacpac", 
            "license": "GPLv3", 
            "title": "Pacpac", 
            "url": "https://codeberg.org/glitchapp/pacpac", 
            "description": "PacPac (fork from https://github.com/tyl)", 
            "author": "glitchapp", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 15593, 
            "version": "pacpac-mobile-0.1-6", 
            "filesize": 7741, 
            "details": "This a fork of 'pacpac', a pacman clone written by \"tylerneylon\".\\n\\nThings I replaced and modified in this fork:\\n\\nIncreased overal resolution.\\nAdded textures to the wall\\nReplaced all primitives that draw the characters with tiles and textures", 
            "app_dls": 299, 
            "md5": "fad241dbfb9a3cf8ae7c1169f346c401"
        }, 
        {
            "category": "game", 
            "binary": "/switch/funkin-rewritten/funkin-rewritten.nro", 
            "updated": "15/09/2022", 
            "name": "FunkinRewritten", 
            "license": "GPLv3", 
            "title": "Funkin' Rewritten", 
            "url": "https://github.com/HTV04/funkin-rewritten", 
            "description": "Rewrite of Friday Night Funkin'", 
            "author": "HTV04", 
            "changelog": "april-fools-dos-2\\n\\nNothing but a version Bump. aplogies.\\n\\nv1.1.0 beta 2\\n\\nSwitch: The Nintendo Switch port now uses love-nx as its engine, which gives Funkin' Rewritten keyboard support and full feature parity with the PC version!\\nFunkin' Rewritten can now run on web browsers! However, it currently isn't available online because of some issues with Game Jolt. These release notes will be updated with a link when Game Jolt is fixed.\\nFinally added a countdown!\\nFixed all charts, which fixes issue #12.\\nFixed issue #19.\\nTutorial now has the OG game's zoom effect.\\nOptimized gamestate code.\\n\\nv1.1.0 beta 1\\n\\nAdded Week 6.\\nUpdated all charts to Week 7's (see https://twitter.com/mth13208/status/1426346224597323778).\\nReplaced ratings with Kade Engine's colored ratings.\\nA lot of optimizations.", 
            "screens": 0, 
            "extracted": 168673, 
            "version": "april-fools-dos-2", 
            "filesize": 159794, 
            "details": "Friday Night Funkin' Rewritten is a rewrite of Friday Night Funkin' built on L\u00d6VE and L\u00d6VE Potion for Windows, macOS, and Linux, as well as previously unsupported platforms, like the Nintendo Switch!\\n\\nFriday Night Funkin' Rewritten features:\\n* A rewritten engine focused on performance and playability\\n* Much less memory usage than the original game\\n* Controller support\\n* Other cool features, like downscroll\\n* And more to come!\\n\\nJoin the Discord server for updates: https://discord.gg/tQGzN2Wu48", 
            "app_dls": 50558, 
            "md5": "dc744e8d65c950ebafad40b12abc2d24"
        }, 
        {
            "category": "concept", 
            "binary": "/switch/touch-screen/touch-screen.nro", 
            "updated": "25/10/2018", 
            "name": "touch-screen", 
            "license": "none", 
            "title": "Touch Screen", 
            "url": "https://github.com/Dontwait00/touch-screen-modified/releases", 
            "description": "Touch Screen demo", 
            "author": "Dontwait00", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 254, 
            "version": "1.0", 
            "filesize": 105, 
            "details": "touch-screen-modified\\n\\nFork from switchbrew/switch-examples/hid/touch-screen repository. Added row & column support", 
            "app_dls": 439, 
            "md5": "7e012a71ea864506735d14c6215a2ddb"
        }, 
        {
            "category": "game", 
            "binary": "/switch/SDLPoP/SDLPoP.nro", 
            "updated": "25/01/2020", 
            "name": "SDLPoP", 
            "license": "n/a", 
            "title": "SDLPoP", 
            "url": "https://github.com/usineur/SDLPoP", 
            "description": "Open-source SDL Prince of Persia clone", 
            "author": "usineur, NagyD", 
            "changelog": "1.3 (version vita-1.7 for tracking purposes)\\n\\nBased on v1.20 release (2019-10-13)\\n\\n1.2\\n\\nBased on v1.19 release (2019-03-31)\\nZL / ZR buttons can decrease/increase time (\"cheats\" must be enabled in menu)\\n\\nv1.1\\n\\nHW acceleration support\\nswkbd support", 
            "screens": 0, 
            "extracted": 8811, 
            "version": "vita-1.7", 
            "filesize": 3581, 
            "details": "This is an open-source port/conversion of the DOS game Prince of Persia.\\nIt is based on the disassembly of the original PoP1 for DOS.", 
            "app_dls": 12969, 
            "md5": "25adcd0057db8f56c8d35794375d880e"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Calculator_NX/Calculator_NX.nro", 
            "updated": "11/10/2021", 
            "name": "Calculator_NX", 
            "license": "MIT", 
            "title": "Calculator_NX", 
            "url": "https://github.com/EmreTech/Calculator_NX/releases", 
            "description": "A simple calculator program made in C++", 
            "author": "EmreTech", 
            "changelog": "2.0.1\\n\\nBug fixes in 2.0.1:\\n\\nRemoved the user having to manually exit out of the app after an update has been downloaded\\nFixed versioning in overlay\\n\\n2.0.0\\n\\nNew features in 2.0.0:\\n\\nComplete rewrite, starting from scratch\\nNew UI look (still powered by Borealis yoga)\\nCan now evaluate expressions\\nReimplementation of the updater\\nAdded a new Tesla menu Overlay! (Comes in a separate file from the original app)\\n\\n1.3.2-beta2\\n\\nNew features with 1.3.2 Beta 2:\\n\\nFixing bugs and compiler warnings\\nRemoving the CMD app\\nImprovements:\\n\\nImproved how the config and download folders are made if they both don't exist\\nFixed compiler warnings about functions in calculator.hpp being defined as static even though that's not needed\\n\\n1.3.1\\n\\nFixed an issue where switching to the CMD version of the app didn't work, and the other way around.\\n\\n1.3.0\\n\\nCalculator_NX now comes with a GUI! The GUI is made with the borealis library, which uses the Apache v2.0 license.\\nIf you prefer the older, CMD look of the app, you can switch to it! (This feature is untested)\\n\\n1.2.0\\n\\nChanged the calculation method to allow an \"infinite\" amount of numbers and floating-point numbers\\n\\n1.2.0-beta\\n\\nThis has not been tested, be aware of any bugs/glitches and report them to the issue tracker.\\n\\n1.1.0\\n\\nThis has some changes related to crashing when you type in letters instead of numbers. I also customized the Makefile to add more details about the app itself.", 
            "screens": 0, 
            "extracted": 3434, 
            "version": "2.0.1", 
            "filesize": 1485, 
            "details": "A simple calculator program made in C++, which is also my first Switch Homebrew application! Controls are Up to select Addition, Down to select Subtraction, Left to select Multiplication, and Right to select Division. Once you selected an operator, press L to calculate.", 
            "app_dls": 2730, 
            "md5": "5dd7af5bbdc2f27a38796f7386a2a91d"
        }, 
        {
            "category": "game", 
            "binary": "/switch/mirrormagic/mirrormagic.nro", 
            "updated": "12/06/2021", 
            "name": "mirrormagic", 
            "license": "GPLv2", 
            "title": "Mirrormagic", 
            "url": "https://github.com/rsn8887/rocksndiamonds/", 
            "description": "In the tradition of Deflektor and Mindbender", 
            "author": "rsn8887", 
            "changelog": "1.15\\n\\non Switch, add 12.0.0 support. Only .nro files changed, data is the same.\\n\\n1.14\\n\\non Switch, add 9.0.0 support\\non Switch, fix .ogg audio playback\\non Switch, fix pointer getting stuck when controlled with physical USB mouse\\n\\n1.13\\n\\non Switch, fix automatically turning on/off VSync on selecting/deselecting Game Speed: 60 fps mode\\n\\n1.12\\n\\nfix crash when loading levelsets that change screenmode, such as \"Supaplex (Original)\"\\non Switch, fix slow-down when pressing home button\\non Switch, use 1080p resolution when docked\\n\\n1.11\\n\\nOn Switch, implement on-screen keyboard (only works when launching with nsp injection)\\n\\n1.10\\n\\nfixed problem on Switch with too-large screen in docked mode when loading saved config. The workaround was to change window size to 100% and save again. Now Fullscreen mode should be set to \"On\" and then this problem does not appear anymore.\\n\\n1.9switch\\n\\nsame as release 1.9, but added Switch executables to the downloads\\n1.9\\n\\nadd '60 fps' game speed setting for perfectly smooth motion in some levels on the Vita. It works well with the bundled Emerald Mine levelsets. This mode is 20% faster than the default setting 'normal.'\\n\\nremoved slow-down when playing levelsets that use the Emerald Mine engine with default graphics.", 
            "screens": 0, 
            "extracted": 13128, 
            "version": "1.15", 
            "filesize": 5826, 
            "details": "Mirrormagic is a game by Holger Schemel in the tradition of Deflektor and Mindbender. You guide a laser beam by adjusting mirrors before the time limit runs out.\\n\\nFor more information on how to play the game, or to load custom levels, view the source repo at github.com/rsn8887/rocksndiamonds/\\n\\nThanks:\\n- Thanks to my awesome supporters on Patreon, especially Andyways, CountDuckula, and Sean Ritzo.\\n- Thanks @FrangarCJ for help with optimizing the rendering.\\n- Thanks to Holger Schemel for making a great and portable game.\\n- Thanks to the many devs of VitaSDK for a great development environment.\\n\\n\\nVita/Switch-Exclusive Features:\\n\\n- game controller mapping including analog joystick mouse controls\\n- front touch controls with left/right mouse click and drag and drop gestures\\n- support for bluetooth keyboard and mouse\\n- the game runs smooth at the same speed as the desktop versions\\n- additional level package with thousands of levels as separate download (see 'More Levels')\\n- auto-hide mouse cursor when using the dpad\\n- easily switch player focus in multiplayer games using r+triangle and r+square\\n\\n\\nGamepad Controls (Switch):\\n\\nDpad or left stick = move player and navigate menus\\nright stick = move mouse pointer\\nB = primary button (+ direction for snap action or turning mirrors, also 'ok' in menu)\\nA = secondary button (drop dynamite)\\nY or L = left mouse button\\nX or R = right mouse button\\nMinus = quit (escape key, also cancels requesters)\\nPlus = pause (space key)\\nR+X = set focus to next player (ALL->1->2->3->4)\\nR+Y = set player focus to previous player (ALL<-1<-2<-3<-4)\\n\\n\\nTouch Controls:\\n\\nNote: for multi-touch gestures, the fingers have to be far enough apart from each other, so that the Vita will not erroneously recognize them as a single finger. Otherwise the pointer will jump around.\\n\\nSingle short tap = left mouse click\\nSingle short tap while holding a second finger down = right mouse click\\nSingle finger drag = move the mouse pointer\\nDual finger drag = drag'n'drop (left mouse button is held down)\\nThree finger drag = drag'n'drop (right mouse button is held down)", 
            "app_dls": 708, 
            "md5": "cf11e11c179f541b448b5a2e18c7ea5a"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Unlucky.nro", 
            "updated": "21/06/2022", 
            "name": "Unlucky", 
            "license": "GPLv3", 
            "title": "Unlucky", 
            "url": "https://github.com/TheLogicMaster/Unlucky", 
            "description": "An RPG based around RNG", 
            "author": "TheLogicMaster", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 28609, 
            "version": "1.0", 
            "filesize": 11441, 
            "details": "Unlucky is a LibGDX Android RPG game based on RNG (random number generator) with a turn-based battle system. RNG is usually frowned upon in games, but this game's entire theme is RNG. Everything from attacks in battle to item enchanting to movement is based on RNG.\\n\\nThe player ventures and battles monsters in maps with various themes. Currently there are three available worlds all with 10+ levels in each world. In these maps, the player will have to defeat monsters and find a star tile to complete the level. Monsters may drop items that can improve the player's strength. These items may be sold in the shop for gold or enchanted to increase their power. There are currently 100+ items dropped by monsters and sold in the shop.\\n\\nPort by: TheLogicMaster using SwitchGDX\\nGame by: mingli1", 
            "app_dls": 492, 
            "md5": "41c79d87cdf6eb94cade0e92a11a43c0"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/Jaguar/Virtual_Jaguar.nro", 
            "updated": "16/07/2018", 
            "name": "jaguar", 
            "license": "n/a", 
            "title": "Virtual Jaguar", 
            "url": "https://gbatemp.net/threads/retroarch-switch.492920/page-49", 
            "description": "Virtual Jaguar Emulator.", 
            "author": "Natehaxx", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 3404, 
            "version": "beta", 
            "filesize": 1145, 
            "details": "Virtual Jaguar libretro core  a initial beta release.", 
            "app_dls": 2049, 
            "md5": "5eeaa4567a1c5b42b6dc614aeff897da"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/libretro_fceumm.nro", 
            "updated": "16/07/2018", 
            "name": "fceumm", 
            "license": "none listed", 
            "title": "FCEUMM", 
            "url": "https://gbatemp.net/threads/retroarch-switch.492920/", 
            "description": "NES Retroarch Core", 
            "author": "Retroarch", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2525, 
            "version": "very beta", 
            "filesize": 979, 
            "details": "A very beta version of this core , games play from the SD card.\\n\\nScreen settings\\nGame Saves\\nButton Config\\nAnalog input.", 
            "app_dls": 5490, 
            "md5": "ee4303e634b5ade0b4214dfc9bd9abbe"
        }, 
        {
            "category": "game", 
            "binary": "/switch/InvadersNX/InvadersNX.nro", 
            "updated": "28/07/2018", 
            "name": "InvadersNX", 
            "license": "none listed", 
            "title": "InvadersNX", 
            "url": "https://github.com/MaesterRowen/InvadersNX/releases", 
            "description": "A space invaders type game.", 
            "author": "MaesterRowen", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 5555, 
            "version": "1.0", 
            "filesize": 3091, 
            "details": "This game is a port for a game I created for the Xbox 360 homebrew scene a year or so ago; and wanted to port it over to the Nintendo Switch as a learning project and to get myself familiar with SDL2.", 
            "app_dls": 1332, 
            "md5": "523d1917df93f2c1cb07fc1847455347"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/AA-Reboot.nro", 
            "updated": "05/11/2023", 
            "name": "AAReboot", 
            "license": "n/a", 
            "title": "AA-Reboot", 
            "url": "https://github.com/ThatFinnDev/AA-Reboot", 
            "description": "Reboot instantly to hekate", 
            "author": "ThatFinn", 
            "changelog": "1.1\\n\\nhekate.bin on the root of the sd card is now optional (used if other payloads are desired)", 
            "screens": 0, 
            "extracted": 357, 
            "version": "1.1", 
            "filesize": 123, 
            "details": "Reboot to a hekate.bin at sdmc://hekate.bin. It instantly reboots to this payload and you don't have to press - like the rebootToPayload nro from the atmosphere cfw. The application name is AA-Reboot because when you star it (mark it) in the hb menu, it will be the first homebrew application", 
            "app_dls": 7708, 
            "md5": "9f18d7fc54bb2c866ca5e807b625cc8c"
        }, 
        {
            "category": "tool", 
            "binary": "none", 
            "updated": "21/12/2024", 
            "name": "FPSLocker", 
            "license": "MIT", 
            "title": "FPSLocker", 
            "url": "https://github.com/masagrator/FPSLocker", 
            "description": "An overlay that allows to set custom FPS in retail games.", 
            "author": "masagrator", 
            "changelog": "2.1.0\\n\\nAdded support for changing refresh rates in docked mode. Read more in README.\\nChanged some design choices of libtesla to make it less taxing on CPU. Fixes issues where opening FPSLocker could cause visible performance drop in some games.\\nWhenever FPSLocker patch is currently forcing 60 Hz, overlay will inform about this in main menu\\n\\n2.0.3\\n\\nCheck/download config file call is now done in a separate thread\\nThis fixes problem with overlay being unresponsive\\nYou get additional info\\nYou still won't be able to exit Advanced settings until thread has finished work\\nNow there is a timeout that if thread runs for longer than 30 seconds, it will return, unlocking overlay\\nFew text changes related to received informations from Check/download config file\\n\\n2.0.2\\n\\nRemake Advanced Settings page\\nNow \"Check/download config file\" when cannot find patch file in Warehouse, it will check games list for possible informations as:\\nIf this titleid is listed\\nIf titleid is listed, then if BID is listed and how patch recommendation looks like for it\\nIf titleid is listed and BID is not listed, then how patch recommendation looks like for latest listed BID\\nMore detailed informations when using options in FPSLocker Patches category\\n\\n2.0.1\\n\\nFixed a bug that was crashing OS when trying to disable/enable Display Sync while game not supported by SaltyNX was running.\\n\\n2.0.0\\n\\nAdd Display settings menu to change LCD refresh rate (don't put Switch to dock with changed refresh rate while game is running, otherwise there is a chance game will crash), not available for OLED model. SaltyNX 0.8.0+ is required for this menu to show. More in readme.\\nAdd support for next revision of game configs that make them smaller and move most of calculations to FPSLocker overlay itself.\\nMove from c++20 to c++23\\n\\n1.2.8a\\n\\nFix \"Set Buffering\" in games with Quadruple Buffering (f.e. Assassin's Creed Revelations - The Lost Archive)\\n\\n1.2.8\\n\\nFix retrieving BID from games using new RTLD (such as Tomb Raider I-III Remastered)\\nTo fix compability with new RTLDs fully, it is necessary to update SaltyNX to at least 0.7.2 version!\\n\\n1.2.7\\n\\nAdd support for downloading additional files from Warehouse if config file have \"Addons\" entry. Used currently only to fix compability issue in Tears of the Kingdom with atmosphere's romfs listing cache creation which allows loading romfs mods.\\n\\n1.2.6a\\n\\nFix overlay lock not working since libnx 4.5.0 release\\n\\n1.2.6\\n\\nAdd option in Advanced Settings to download config from repository Check/download config file. More in README.\\nSlightly redesign Advanced Settings UI.\\n\\n1.2.5a\\n\\nFix saving settings if \"plugins\" folder doesn't exist inside SaltySD folder.\\n\\n1.2.5\\n\\nAdd support for SaltyNX 0.7.0+\\n\\n1.2.4\\n\\nPrint titleid and buildid if no config is found\\nAllow using all available buffers when game is not using all of them.\\nFor this release to properly work it is required to update NX-FPS to version 1.5.4\\n\\n1.2.3\\n\\nAllow in games using Quadruple Buffering (for example Assassin's Creed The Ezio Collection) to force Triple Buffering.\\nWhen saving settings with different Buffering than Double, Window Sync will be reseted to Enabled.\\n\\n1.2.2\\n\\nAllow setting double buffer in games that are using triple buffer.\\nMore in README.\\n\\nNX-FPS 1.5.2+ is required\\n\\n1.1.3\\n\\nProvide better API detection.\\nNow you can see if game is using NVN, EGL or Vulkan in Advanced Settings.\\n\\nRequires updating NX-FPS to at least 1.3 version.", 
            "screens": 0, 
            "extracted": 1066, 
            "version": "2.1.0", 
            "filesize": 505, 
            "details": "An overlay that with companion SaltyNX plugin NX-FPS allows to set custom FPS in Nintendo Switch retail games.\\n\\nDisclaimer: Tool is utilizing detection of graphics API to manipulate FPS and in special cases it requires using patches made per game for each version to get more than 30 FPS. You can find those patches HERE\\nMax supported yaml size is 32kB, though it can be expanded in next updates.\\n\\nRequirements:\\n* Atmosphere CFW\\n* My fork of SaltyNX, version 0.5.1+\\n* NX-FPS 1.1+\\n* Tesla environment: ovlloader + Tesla Menu\\n\\nOverlay runs in two modes:\\n\\n* When game is running\\n\\nIf game is supported by SaltyNX and you installed everything correctly, you will see menu where first line states NX-FPS plugin is running. Explanation of each line:\\n\\nInterval Mode - it's used by NVN API to set limiter to either 30 FPS (2) or 60 FPS (1 or 0 (0 means that game never bothered to set it, it can be also a sign that game is not utilizing NVN but EGL or Vulkan))\\nCustom FPS Target - it's used to lock game to certain FPS. If game is using engine proprietary FPS locks, it may not be able to unlock more than 30 FPS without additional patches.\\nBig number on the right - it shows how many frames have passed in last second for currently running game. This is to confirm that lock is working as expected.\\nIncrease/Decrease FPS target - Change FPS Target by 5. Minimum is 15 FPS, max is 60 FPS. If FPS is set above 30 FPS, it sets interval mode to 1. Otherwise it sets interval to 2.\\nDisable custom FPS target - Removes FPS Target. Since we cannot predict what interval mode is expected at this point, it is in user's discretion to manipulate FPS to bring back correct interval before disabling FPS target.\\nAdvanced settings - submenu which consists of:\\nSync Wait - this is dangerous setting that disabled in most cases will crash game (for example Witcher 3 and Breath of The Wild), but in some can bring benefit of disabling double buffer at the cost of small graphical glitches (for example Xenoblade Chronicles 3). Use it with caution.\\nConvert config to patch file - if proper config file exists for this game and version, you will get an option to convert it to patch file that will be loaded when you will run this game next time. Patch is saved to SaltySD/plugins/FPSLocker/patches/*titleid_uppercase*/*buildid_uppercase*.bin\\nDelete patch file - if proper config file exists for this game and version, you will get an option to delete patch file so it won't be loaded when you will run this game next time.\\nSave settings - save profile for currently running game that will be loaded next time by plugin on boot automatically. Don't use it if you disabled Sync Wait and you didn't test it properly that it won't cause crash. Profile is saved in SaltySD/plugins/FPSLocker/*titleid_uppercase*.dat\\n\\n* When game is not running:\\n\\nIt will list installed games (max 32) and as first option it's available \"All\" submenu.\\nInside each one you will find two options:\\n\\nDelete settings - it will delete file created by \"Save settings\" option\\nDelete patches - it will delete file created by \"Convert config to patch file\" option\\n\\nThanks to ~WerWolv for creating Tesla environment, and ~cucholix + ~Monked for tests.", 
            "app_dls": 12372, 
            "md5": "7828fba747dc9809f11d3a731610291e"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/switch-cheats-updater/switch-cheats-updater.nro", 
            "updated": "12/05/2020", 
            "name": "switch-cheats-updater", 
            "license": "GPLv3", 
            "title": "switch-cheats-updater", 
            "url": "https://github.com/HamletDuFromage/switch-cheats-updater/releases", 
            "description": "Update your cheat files for your games", 
            "author": "HamletDuFromage", 
            "changelog": "1.2.1\\n\\nNow supports ReiNX\\n\\n1.2.0\\n\\nMultiple QOL improvments\\n\\n1.1.7\\n\\nCreates a /sxos directory in the sd card root for those who don't already have it (and experience a black screen because of it)\\n\\n1.1.6\\n\\nYou can now prevent cheats for a specific game to be overwritten by listing them, one per line, in config/cheats-updater/exclude.txt\\n\\n1.1.4\\n\\nAdded XCI support for SXOS users\\n\\n1.1.3\\n\\nFixed a dumb path typo that resulted in SXOS users getting a blank screen\\n\\n1.1.1\\n\\nThe homebrew now detects games installed to NAND and gamecards\\n\\n1.1\\n\\nAdded cheats deletion and opt-in instructions download", 
            "screens": 2, 
            "extracted": 1949, 
            "version": "1.2.1", 
            "filesize": 895, 
            "details": "A Nintendo Switch homebrew app to automatically update your cheat files for your installed games, gamecarts and XCIs. Supports Atmosphere, ReiNX and SXOS.\\n\\nFetches the latest cheats from the gbatemp general thread through my mirror (updates once a day)\\nBlacklist titles\\n\\nBy default, this homebrew will overwrite the existing cheats. If you have your own cheat files that you'd like to keep as is, you may add the title IDs of the corresponding games, one ID per line, to /config/cheats-updater/exclude.txt. Use http://tinfoil.io/title to find the title ID of a game.", 
            "app_dls": 88644, 
            "md5": "56349291d2b35529cfe9a8265f4a375b"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/screen-nx/ShareNX.nro", 
            "updated": "26/11/2020", 
            "name": "screen-nx", 
            "license": "GPLv2", 
            "title": "screen-nx", 
            "url": "https://github.com/HookedBehemoth/ShareNX/releases", 
            "description": "upload screenshots directly from your switch", 
            "author": "HookedBehemoth", 
            "changelog": "2.0.0b\\n\\nupdate pu\\n\\n2.0.0\\n\\nAlmost completely rewritten by @HookedBehemoth . Should look a lot less incompetent now!\\nSupport for other websites through the use of site-specific configuration files\\nConfigs must be placed in /switch/screen-nx/sites\\nConfigs can be changed by pressing the X button in-app\\nConfigs allow you to easily change the theme of the application, as well as the site to upload to\\nExamples can be found here. Feel free to submit a pull request with your own sites!\\nVideo thumbnails\\nImage thumbnails --- This completely fixes #2\\nSlightly modified UI with visible controls\\nProbably a lot of bugs fixed\\n\\n1.2.1\\n\\nFixed file sorting so that files created in the months of October, November, and December don't end up at the bottom of our list\\nAllow files older than a week to be re-uploaded (in case they got removed)\\nAdded an Icon\\nAdded a status message for uploading so you actually know the software is doing something\\n\\n1.2.0\\n\\nadded video support\\n\\n1.1.1\\n\\nThis release should work with the 9.0.0 HID changes.\\n\\n(current atmosph\u00e8re version mitigates this but you need to update your homebrew to use it on future versions.\\n\\n", 
            "screens": 0, 
            "extracted": 10836, 
            "version": "2.0.0b", 
            "filesize": 4946, 
            "details": "upload screenshots directly from your switch", 
            "app_dls": 7345, 
            "md5": "fe13e396426f010ccb9d77b84ea75033"
        }, 
        {
            "category": "game", 
            "binary": "/switch/stepmania/stepmania.nro", 
            "updated": "19/09/2019", 
            "name": "stepmania-nx", 
            "license": "n/a", 
            "title": "stepmania-nx", 
            "url": "https://github.com/retronx-team/stepmania-nx/releases", 
            "description": "Stepmania 5.x Switch Port", 
            "author": "retronx-team", 
            "changelog": "nx2\\n\\nFix drawing of 3D models, leading to missing parts for dancers, or crash in certain songs\\nResets back the video renderer at start, to prevent failures if the config file was edited\\nHOS 9.0.0 ready: compiled against latest libnx (v2.5.0)", 
            "screens": 0, 
            "extracted": 79640, 
            "version": "5.1-nx2", 
            "filesize": 64620, 
            "details": "Welcome to StepMania, a rhythm game simulator. If you're not familiar with the concept of rhythm games, it involves triggering inputs (e.g. buttons, foot panels) in time to the music. StepMania can be controlled with a keyboard or one of various specialized controllers.\\n\\nGetting Started\\n\\nSong Installation\\n\\nStepMania requires a specific folder layout when installing songs: Songs/[group folder]/[song folder]/\\n\\nUsing one of the included songs as an example:\\n\\nSongs/StepMania 5/Springtime/Kommisar - Springtime.mp3\\nSongs/StepMania 5/Springtime/spring.png\\nSongs/StepMania 5/Springtime/springbn.png\\nSongs/StepMania 5/Springtime/Springtime.ssc\\nEach of these files serves as a part of the simfile. StepMania 5 supports various formats, including (but not limited to) SSC, SM, DWI, KSF and BMS. With the multi-file BMS and KSF formats, put all the files in the song's folder.\\n\\nDefault controls\\n\\nACTION\tKey 1\tKey 2\\nLeft\tDPAD L\tY\\nRight\tDPAD R\tA\\nUp\tDPAD U\tX\\nDown\tDPAD D\tB\\nUpLeft\tL\t\\nUpRight\tR\t\\nBack\tMinus\t\\nStart\tPlus\t\\nSelect\tZL\t\\nCoin\tZR\t", 
            "app_dls": 4237, 
            "md5": "cd3fc054b27b6a350866557d9797284d"
        }, 
        {
            "category": "game", 
            "binary": "/switch/smw/smw.nro", 
            "updated": "07/12/2020", 
            "name": "supermariowar-nx", 
            "license": "n/a", 
            "title": "Super Mario War NX", 
            "url": "https://github.com/retronx-team/supermariowar-nx", 
            "description": "A port of Super Mario War", 
            "author": "p-sam", 
            "changelog": "bx4\\n\\nUpstream fixes and changes\\n\\nInput was refactored:\\n\\nD-Pad and Left stick are now combined\\nNew defaults: B = Jump; Y = Turbo (Like on a mario game)\\nJoycon split option was removed, you can instead open up the system controller applet to remap controllers freely\\nNetwork multiplayer support (experimental):\\n\\nLobby server needed (check README for more info)\\nCross-platform PC <-> Switch supported\\n\\nnx3\\n\\nAdapted changes, and compiled against latest libnx (v2.5.0)\\nNew directory structure using subrepos instead of 2 different repos\\n\\nnx2\\n-adds split joycon support with an option in controls screen (credits to @rsn8887 for this and the initial linear filtering)\\n-adds screen size options (fit to aspect ratio, integer scale, 1:1 and stretched fullscreen)\\n-adds screen filtering option (nearest, linear, or best which currently is equal to linear)\\n\\n2.0.0-nx1\\n\\nInitial Release.", 
            "screens": 0, 
            "extracted": 50558, 
            "version": "2.0.0-nx4", 
            "filesize": 39582, 
            "details": "A port of Super Mario War to the Switch, using SDL2 and libnx.\\n\\n\\n\\n\\n\\n.", 
            "app_dls": 28423, 
            "md5": "e7cd3e982a6cc35a19f4075e964fab93"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Pixel-Painter.nro", 
            "updated": "26/08/2020", 
            "name": "pixel-painter", 
            "license": "n/a", 
            "title": "Pixel Painter", 
            "url": "https://github.com/16BitWonder/Pixel-Painter-Switch", 
            "description": "Create colorful pixel art", 
            "author": "16BitWonder", 
            "changelog": "1.8.0\\n\\nRemoved deprecated gfx API code (Yes, v1.7.0 was that old)\\nBuilt with latest libnx (v3.3.0) for 9.0.0+ compatibility\\nOnce again, this will likely be the final release unless it's somehow broken again.\\n\\n1.7.0\\n\\nMade it so that controls are only handled when a button is actually pressed\\nThis will likely be the final release unless it's broken again in the future.\\n\\n1.6.0\\n\\nFixed the application so it works as intended", 
            "screens": 0, 
            "extracted": 323, 
            "version": "1.8.0", 
            "filesize": 139, 
            "details": "My first Switch homebrew application, a port of my 3DS application Pixel-Painter.\\nUses the hello-world template from libnx as a base.\\nFeatures:\\n- The ability to draw with six different colors on the screen\\n- Controls and color information on the left side of the screen", 
            "app_dls": 3182, 
            "md5": "3485fabd8f763fbcbac033f25788eebf"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/UpThemAll.nro", 
            "updated": "13/11/2021", 
            "name": "UpThemAll", 
            "license": "GPLv2", 
            "title": "UpThemAll", 
            "url": "https://github.com/HookedBehemoth/UpThemAll", 
            "description": "Update all switch games", 
            "author": "HookedBehemoth", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 672, 
            "version": "2.0.0", 
            "filesize": 340, 
            "details": "UpThemAll includes a graphical interface (new to v2.0.0) that assists users with updating their Nintendo Switch games conveniently and easily.\\n\\nPress a button and they'll be updated all in one go!", 
            "app_dls": 5299, 
            "md5": "400a096e04ed75382786c5f2fef5316e"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/libretro_mame2000.nro", 
            "updated": "16/07/2018", 
            "name": "mame2000", 
            "license": "none listed", 
            "title": "MAME 2000", 
            "url": "https://gbatemp.net/threads/retroarch-switch.492920/", 
            "description": "MAME Arcade Retroarch Core", 
            "author": "Retroarch", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 16450, 
            "version": "very beta", 
            "filesize": 3997, 
            "details": "A very beta version of this core , games play from the SD card.\\n\\nScreen settings\\nGame Saves\\nButton Config\\nAnalog input.", 
            "app_dls": 10964, 
            "md5": "e9956ce83da8939ebbdd34495f7632a1"
        }, 
        {
            "category": "game", 
            "binary": "/switch/nxengine-evo/NXEngine-Evo-v2.6.5-Switch.nro", 
            "updated": "29/03/2024", 
            "name": "nxengine", 
            "license": "GPLv3", 
            "title": "NXEngine-evo", 
            "url": "https://github.com/nxengine/nxengine-evo/releases", 
            "description": "Cave Story Port.", 
            "author": "nxengine", 
            "changelog": "2.6.5-1 - no changes just tracking current version numbering.\\n\\n2.6.4\\n\\nTons of gameplay/weapons/ai fixes and optimizations (yes, boost jumping works now)\\nAnimated portraits\\nStrafing, configurable OK/Cancel.\\nSupport for custom soundtracks and playlists.\\nConfigurable SFX/Music volume.\\nSwitch port\\nOut-of-bounds tiles support to make maps look better on high/widescreen resolutions\\nDynamic title backgrounds based on 260.rec\\nNew improved and accurate Organya/Pixtone player and overall refactored soundmanager.\\nRefactored and cleaned up renderer (should make porting to libretro/whatever easier)\\nInitial mod support (couple of mods are coming later)", 
            "screens": 0, 
            "extracted": 40013, 
            "version": "2.6.5-1", 
            "filesize": 12003, 
            "details": "Cave Story / Doukutsu Monogatari is a Japanese freeware PC side-scrolling platformer game from 2004.\\n\\nThis is a reimplementation of the original freeware game engine, using its data files.\\nIt has nothing to do with Cave Story+ (published by Nicalis and being an actual, official Switch game).", 
            "app_dls": 8261, 
            "md5": "00a1dca95755131d268db70a2abca2a0"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Easypower/EasyPower.nro", 
            "updated": "03/10/2018", 
            "name": "easypower", 
            "license": ".", 
            "title": "EasyPower", 
            "url": "https://github.com/klockee/EasyPower/releases", 
            "description": "A quick utility to reboot the Nintendo Switch", 
            "author": "klockee", 
            "changelog": "0.2\\n\\nAdded icons and an installable (.nsp) version created with The-4n's hacBrewPack. The titleID for the .nsp is 0104561737950000.", 
            "screens": 0, 
            "extracted": 244, 
            "version": "0.2", 
            "filesize": 108, 
            "details": "A quick utility to reboot the Nintendo Switch - load the .nro through hbmenu or any other method to reboot the console immediately.", 
            "app_dls": 4865, 
            "md5": "95cabd9343b20bf565a51188041537d7"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "02/11/2024", 
            "name": "QuickNTP", 
            "license": "GPLv2", 
            "title": "QuickNTP", 
            "url": "https://github.com/nedex/QuickNTP/releases", 
            "description": "A Tesla plugin for Nintendo Switch to sync time with NTP servers", 
            "author": "nedex", 
            "changelog": "1.2.8-1\\n\\nUpdated to latest libnx\\n\\n1.2.8\\n\\nUpdated to latest libtesla which fixes a crash in docked mode\\n\\n1.2.7\\n\\nSupport for 16.0.0\\n\\n1.2.6\\n\\nAdded Cloudflare and Google NTP servers ( Thanks to @DraconicNEO! )\\nTested up to 14.1.2 with Atmosphere 1.3.2\\n\\n1.2.5\\n\\nUpdated to C++20\\nCode optimized: now using exceptions and \"proper\" strings\\n\\n1.2.1\\n\\nUpdated with libnx 4.1.3-1 and newer libtesla.\\nTested up to 12.1.0 with Atmosphere 0.19.5\\n\\n1.2.0\\n\\nAdded new option to set network time to user-set time\\nTested up to 10.2.0 with Atmosphere 0.14.4\\n", 
            "screens": 1, 
            "extracted": 829, 
            "version": "1.2.8-1", 
            "filesize": 149, 
            "details": "THIS HOMEBREW REQUIRES THE TESLA OVERLAY MENU INSTALLED : \\n\\nhttps://apps.fortheusers.org/switch/Tesla-menu\\n\\nSyncs the Nintendo Switch time with a list of NTP Servers.\\n\\nSometimes you just can't update your system date and time with Nintendo's official servers.\\nThis Tesla overlay lets you update the time on the fly with a list of NTP Servers, keeping the system clock synced via internet with the touch of a button.\\n\\nWhen using this application, make sure the \"Synchronize Clock via Internet\" option is enabled in System settings since this program changes the \"Network clock\".\\nAlso, don't send a lot of requests: NTP servers should be requested in 36 hours intervals.\\n\\nFeatures\\n\\nUpdate the time by selecting from a list of servers\\nShow the current offset against the selected server\\n\\nMotivation\\n\\nUsing a custom DNS it's not possible to sync the time with Nintendo's servers, and the Switch appears to gain some minutes each month.\\n\\n\\n\\n", 
            "app_dls": 11758, 
            "md5": "96c4a239586c7e74998fad8344073087"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/NXMilk/NXMilk.nro", 
            "updated": "17/03/2024", 
            "name": "NXMilk", 
            "license": "n/a", 
            "title": "NXMilk", 
            "url": "https://github.com/proconsule/NXMilk", 
            "description": "Audio player supporting projectM VIS", 
            "author": "proconsule", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 28634, 
            "version": "0.0.3", 
            "filesize": 15516, 
            "details": "Audio player supporting projectM VIS", 
            "app_dls": 1448, 
            "md5": "8dda362588305027f6ea0547c5ae5893"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/DC-uLaunch_Updater/DC-uLaunch_Updater.nro", 
            "updated": "02/12/2019", 
            "name": "DC-uLaunch_Updater", 
            "license": "n/a", 
            "title": "DC-uLaunch_Updater", 
            "url": "https://github.com/Dcnigma/DC-uLaunch_Updater/releases", 
            "description": "Update application for installing and removing uLaunch", 
            "author": "Dcnigma", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 9627, 
            "version": "0.0.6", 
            "filesize": 4072, 
            "details": "Uses\\n-Install/update uLaunch.\\n-Remove uLaunch.\\n-Install extra Themes.\\n-In app update.\\n-Reboot to payload.\\n\\nInstallation\\nThis is very simple just download the DC-uLaunch_Updater.nro from my github page or on this page (but its a zip).\\nCreate and place in your /switch/Ulaunch-update/ folder.\\nAnd then your done launch from HBmenu or uLaunch.", 
            "app_dls": 6692, 
            "md5": "7599050b3f905486334dad585632cd4b"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/khedgb.nro", 
            "updated": "29/12/2018", 
            "name": "khedgb", 
            "license": "MIT", 
            "title": "khedgb", 
            "url": "https://github.com/jakibaki/khedgb", 
            "description": "Gameboy Color emulator", 
            "author": "jakibaki", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 1506, 
            "version": "1.0", 
            "filesize": 641, 
            "details": "If you're having trouble with this (or don't want to deal with the problems it has) I recommend following this tutorial to play gb/gbc games in the excelent vba-next port.\\n\\nSince retroarch isn't working on anything higher then 3.0 right now I ported the gameboy color emulator khedgb to the nintendo switch. (Works on all versions as far as I know)\\n\\nMore info : https://gbatemp.net/threads/gbc-emulator-port-khedgb-works-on-5-0.503969/", 
            "app_dls": 8445, 
            "md5": "ae754ae435fb5ad0c342aec9be3e8033"
        }, 
        {
            "category": "game", 
            "binary": "/switch/HotPocolate.nro", 
            "updated": "15/08/2018", 
            "name": "hot_pocolate", 
            "license": "GPL3", 
            "title": "Hot-Pocolate", 
            "url": "https://github.com/illteteka/Hot-Pocolate/releases", 
            "description": "TACTILE ENTERTAINABLE ADORNMENT", 
            "author": "illteteka", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 33755, 
            "version": "1.0", 
            "filesize": 29966, 
            "details": "HOT POCOLATE is an application built for monster collecting cop-locked .gifs and blending them into a silk-seizure anxiety-maize.\\n\\nHow to play: Before playing HOT POCOLATE, queue up some music and get in a comfortable position. Hold the the left Joycon like a TV remote and hit any button on beat with the music. After becoming entranced, the background will sync up with the music that is playing.\\n\\nWARNING: Hot Pocolate may potentially trigger seizures for people with photosensitive epilepsy.\\n\\nFeatures:\\nBinary versions of HOT POCOLATE contain over 100!! (wow!) unique .gifs to scroll through at your leisure.\\nTwo semi-secret chief executive officer battles inspired by classic arcade games.\\nThe good stuff:\\nHOT POCOLATE is applicable to several unique operating systems, including:\\n\\nA Nintendo Switch capable of running homebrew (tested and working on firmware 5.1.0)\\nA screensaver for Microsoft Windows\\nYour overpriced Mac computer\\n\\nMade with love, ILL TETEKA, 2018\\n\\nSpecial thanks: NotQuiteApex for testing and feature suggestions (GO PLAY HIS GAME!!!!!), TurtleP for porting L\u00f6ve to the honking Switch, Chris for convincing me to finish this, And YOU especially if you\u2019re still reading this...\\n\\nTroubleshooting, Nintendo Switch only: If the application refuses to boot for whatever reason, start Hot Pocolate with both Joycons attached and then remove the left Joycon when the application starts. In docked mode, I get good results by placing the Switch in sleep mode before docking.", 
            "app_dls": 1092, 
            "md5": "7b6c2ca1443fd271acf28c900290405c"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/bean-stick-checker/bean-stick-checker.nro", 
            "updated": "22/04/2022", 
            "name": "bean-stick-checker", 
            "license": "GPLv3", 
            "title": "BeanNX Stick Checker", 
            "url": "https://github.com/TransKat/bean-stick-checker", 
            "description": "Homebrew app to check stick position.", 
            "author": "TransKat", 
            "changelog": "2.0.0\\n\\nThe entire user experience has been redone.", 
            "screens": 0, 
            "extracted": 340, 
            "version": "2.0.0", 
            "filesize": 127, 
            "details": "Small little homebrew app for Nintendo Switch to check the stick positions on controllers.", 
            "app_dls": 1712, 
            "md5": "97d17daee0ba504e5aac50af30c88973"
        }, 
        {
            "category": "game", 
            "binary": "/switch/nomoore.nro", 
            "updated": "21/06/2022", 
            "name": "nOmooRe", 
            "license": "GPLv3", 
            "title": "nO mooRe", 
            "url": "https://github.com/TheLogicMaster/nomoore", 
            "description": "One Room that doesn't change, time does", 
            "author": "TheLogicMaster", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 26869, 
            "version": "1.6", 
            "filesize": 12219, 
            "details": "One Room that doesn't change, but time does... Made in 48h for Ludum Dare 37.\\n\\nA short game about a girl who is not allowed to follow her dreams. Her name is Moore and her passion is drawing. She is in One Room that does not change, but time does...\\n\\nPort: TheLogicMaster\\nGame: Christian DeTamble", 
            "app_dls": 252, 
            "md5": "88b41dc429033a360faa76f2062bb9b4"
        }, 
        {
            "category": "game", 
            "binary": "/switch/dhewm3/dhewm3nx.nro", 
            "updated": "22/10/2018", 
            "name": "dhewm3", 
            "license": "GPLv3", 
            "title": "dhewm3", 
            "url": "https://github.com/fgsfdsfgs/dhewm3/releases", 
            "description": "port of dhewm 3", 
            "author": "fgsfdsfgs", 
            "changelog": "0.1.0_nx\\n\\nInitial Switch release. More of a PoC than an actual playable port.", 
            "screens": 0, 
            "extracted": 15878, 
            "version": "0.1.0_nx", 
            "filesize": 6707, 
            "details": "dhewm 3 is a Doom 3 GPL source port, known to work on at least Windows, Linux, macOS and FreeBSD.\\n\\nThe goal of dhewm 3 is bring DOOM 3 with the help of SDL to all suitable platforms.\\n\\nBugs present in the original DOOM 3 will be fixed (when identified) without altering the original gameplay.\\n\\nThe official homepage is: https://dhewm3.org\\n\\nThe project is hosted at: https://github.com/dhewm\\n\\nDownload the latest release: https://github.com/dhewm/dhewm3/releases/latest\\n\\nConsult the FAQ at: https://github.com/dhewm/dhewm3/wiki/FAQ\\n\\nReport bugs here: https://github.com/dhewm/dhewm3/issues\\n\\n\\nCompared to the original DOOM 3, the changes of dhewm 3 worth mentioning are:\\n\\n64-bit port\\nSDL for low-level OS support, OpenGL and input handling\\nOpenAL for audio output, all OS-specific audio backends are gone\\nOpenAL EFX for EAX reverb effects (read: EAX-like sound effects on all platforms/hardware)\\nBetter support for widescreen (and arbitrary display resolutions)\\nA portable build system based on CMake\\n(Cross-)compilation with MinGW-w64\\n\\n\\nThe game, both the NRO and the data files (i.e. the base and/or d3xp folders), should be installed to /switch/dhewm3/ on your SD card.\\n\\nnxlink debugging is enabled when either DEBUG or NXLINK_DEBUG is defined.\\n\\nCopy over pak000.pk4 through pak008.pk4 from your PC Doom 3 installation's base folder to /switch/dhewm3/base/. Make sure the game is patched to the latest version (1.3.1). The Steam version is already patched. Doom 3 BFG files won't work.", 
            "app_dls": 349, 
            "md5": "baf6058db2405c133c1141ef78191d29"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/neopop-SDL/neopop/neopop.nro", 
            "updated": "16/07/2018", 
            "name": "neopop_SDL", 
            "license": "N/A", 
            "title": "neopop-SDL", 
            "url": "https://gbatemp.net/threads/release-neopop-sdl-for-switch.499206/#post-7884164", 
            "description": "Neo Geo Pocket and Neo Geo Pocket Color emulator", 
            "author": "Nop90", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 6776, 
            "version": "0.2", 
            "filesize": 1959, 
            "details": "This is the 2nd preview release,with some bug fixes , I just compiled the emulator with my SDL lib making only minor tweaks, so there is a lot of work left for oprimizing everything.\\n\\n Please read the thread on GBAtemp for fuller instructions.\\n\\nhttps://gbatemp.net/threads/release-neopop-sdl-for-switch.499206/#post-7884164", 
            "app_dls": 2508, 
            "md5": "d8f78e08927c4d16dc16cfd28907a766"
        }, 
        {
            "category": "game", 
            "binary": "/switch/xash3d-valve.nro", 
            "updated": "02/05/2021", 
            "name": "xash3d-switch", 
            "license": "GPLv3", 
            "title": "xash3d-switch", 
            "url": "https://github.com/switchports/xash3d-switch/releases", 
            "description": "Xash3D FWGS Engine", 
            "author": "Datamats", 
            "changelog": "v1.0.1\\n\\nUpdate libnx so hid will work on 9.0.0+\\n\\nv1.0.0\\n\\nnwindow is used now instead of the deprecated gfx api\\nthe touchscreen should work now\\nmoved over to filesystem times for savefiles thanks to libnx\\nimplemented the console and various UI requiring text input using swkbd\\nadded options for overclocking, for the really care cases where you might benefit from it\\nmade cl_showfps default to 0 (you can always change it using the console)\\na dmc sdk branch has been ported and is available, additionally a decay port has been added that needs more testing\\n\\nv0.4.0\\n\\nAll the nro's have been renamed to ease the process of adding new games and making it easier to port new dlls, please delete all the half-life-*.nro's\\nThe game switching implementation should be a lot more flexible now and you should be able to keep the nro's where you want as long as you keep them together\\nMods should now work as expected as long as they do not contain custom entities / weapons or other specialized code put in a dll file\\nOpposing force should be fixed\\nVarious fixes and improvements to stability\\n\\nv0.3.0\\n\\nBlue Shift / Opposing Force builds has been ported and added to the build system\\nThe Custom Game menu should not crash anymore, but it will only work if all the nro's are in the /switch directory and are not renamed.\\n\\nv0.2.1\\n\\nThere should be no more crashes after quitting from the menu back to the hbmenu\\n\\nv0.2.0\\n\\nThe timestamp of saves are now saved into a own file as a temporarily workaround until libnx gains timestamps. (Now you will go back to the last autosave when you die instead of having to start over)\\nIncreased the buffer for file copies, this makes saving in some cases multiple times faster\\nFixed the screenshots for saves being broken due to the dynamic resolution system\\nMore work trying to fix crashes (hbmenu will still crash when you quit from the mainui, this is being worked on)\\nAdded a working icon", 
            "screens": 0, 
            "extracted": 14741, 
            "version": "1.0.1", 
            "filesize": 5791, 
            "details": "DOESNT WORK ON LATEST FIRMWARES\\n\\nXash3D Engine is a custom Gold Source engine rewritten from scratch. Xash3D is compatible with many of the Gold Source games and mods and should be able to run almost any existing singleplayer Half-Life mod without a hitch. The multiplayer part is not yet completed, multiplayer mods should work just fine, but bear in mind that some features may not work at all or work not exactly the way they do in Gold Source Engine.\\n\\nXash3D FWGS is a fork of Xash3D Engine, which aims on crossplatform and compatibility with original Xash3D and Gold Source.\\n\\n\\nThis packages already includes the extras.pak files from https://github.com/FWGS/xash-extras/releases in your valve directory ,\\n\\nGet a copy of half life that contains the 'valve' folder. and add to the valvev folder already within your appstore download.\\n\\nXash3D should now launch, it will take a couple seconds to load the assets needed for displaying the menu and you should be able to play!\\n\\nand problems please use the appstore feedback form, thanks..", 
            "app_dls": 8895, 
            "md5": "5704cacbc5b7af49b6c800cf94acb3ae"
        }, 
        {
            "category": "legacy", 
            "binary": "none", 
            "updated": "07/08/2023", 
            "name": "sys-ftpd", 
            "license": "n/a", 
            "title": "sys-ftpd", 
            "url": "https://github.com/jakibaki/sys-ftpd/releases", 
            "description": "Ftpd as a sysmodule", 
            "author": "jakibaki", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 381, 
            "version": "not listed", 
            "filesize": 326, 
            "details": "This is a nintendo-switch sysmodule which runs a ftpd-server in the background (on port 5000 with no auth).", 
            "app_dls": 40574, 
            "md5": "2c25c7c4226391448b94c9fdac342cdb"
        }, 
        {
            "category": "tool", 
            "binary": "none", 
            "updated": "16/11/2024", 
            "name": "UltrahandOverlay", 
            "license": "GPLv2", 
            "title": "Ultrahand Overlay", 
            "url": "https://github.com/ppkantorski/Ultrahand-Overlay", 
            "description": "The fully craft-able overlay executor.", 
            "author": "ppkantorski", 
            "changelog": "1.8.2\\n\\nNew Page Swap toggle for swapping the overlays and packages page locations.\\nLocated in Settings > UI Settings > Miscellaneous > Effects > Page Swap.\\nThis feature will draw the packages menu on the left and the overlays menu on the right when enabled.\\nFixes to libultrahand for preventing screenshots from occurring during capture event initializations.\\nThis is particularly useful for isolating actual capture button events from initializations within projects like bitmap-printer / PNGShot.\\nIf using bitmap-printer, it is currently recommended to use a version built with pull request #25 or else there will be dragons (unwanted screenshots in the Bitmaps directory generated every time a libultrahand compiled overlays is opened).\\nIf using PNGShot, it is currently recommended to use a version built with pull request #5, however builds from latest source code on the repo should now work as well without producing unwanted screenshots.\\nNotice:\\nAll projects built with libultrahand will need to be recompiled with latest libultrahand for this fix to apply.\\n\\n1.8.1\\n\\nNew package header ;show_version= is an optional true/false option for forcing the menu to show the package version instead of the current section title under the package title. (false by default)\\nVarious bug fixes.\\nFix to Software Update command and Memory Expansion to download nx-ovlloader/nx_ovlloader+ v1.0.8 instead of v1.0.9 if AMS version is < 1.8.0.\\nFix for forwarder footers being updated when they should not be.\\nFix for table with null value replacements not correctly aligning Not available / UNAVAILABLE_SELECTION text properly.\\nFix for combo labels not being converted to their icon counterparts upon initialization.\\n\\n1.7.8\\n\\nFix for display underscanning in libtesla.\\nOverlays will need to be rebuilt with this fix for them to also have no issues with display underscan. (see Edizon as an example)\\nNew command expansion for backlight called backlight auto (which takes parameter on / off) for controlling the auto screen brightness feature.\\nbacklight auto on will turn on the auto brightness feature.\\nbacklight auto off will turn off the auto brightness feature.\\nExample toggle:\\n[Auto Brightness]\\n;mode=toggle\\non:\\nbacklight auto on\\noff:\\nbacklight auto off\\nNew placeholder function math to resolve mathematical expressions.\\nCalled {math(MATH_EXPRESSION)} where MATH_EXPRESSION is a mathematical expression like 1+1, (5+4)/9, etc.\\nCan also be called {math(MATH_EXPRESSION, true)} where true forces the output to always be an integer.\\nUsers can use +, -, /, *, % as well as brackets ( and ) within their mathematical expressions.\\nNew placeholder function random to generate a random integer.\\nCalled {random(START_VALUE,END_VALUE)}.\\nNew placeholder function length to compute the length of a provided string.\\nCalled {length(STRING)}.\\nAny white spaces on the left and right of the string will be trimmed.\\nPlaceholder replacement order of operations fix.\\nUsers can use nested placeholders called in any sequence now.\\nRemoval of old progress animation UI setting.\\nMostly unused, and a bit out dated in terms of design preferences. I think it is better for now to remove this feature.\\nBug fix for touch with trackbars.\\nIssue was that sliding to the left of the slidable area caused the value to become the max value for the slider.\\nThis should no longer be an issue.\\nVarious subtle UI tweaks.\\n\\n1.7.7\\n\\nList of changes:\\n\\nNew table scrolling implementation.\\n;scrollable= is a true/false table parameter for initializing a table with a scrollable property (false by default).\\n;top_pivot= is a true/false table parameter for making the top of the table have a selectable property (false by default).\\n;bottom_pivot= is a true/false table parameter for making the bottom of the table have a selectable property (false by default).\\nA variety of modifications were made to properly handle table scrolling (for touch / click both above and below scrollable tables).\\nTables can now use list_file_source for reading raw text files directly into a table and displaying the text line by line.\\nCalled list_file_source <PATH_TO_TEXT_FILE>\\nText is drawn in the section portion and can utilize ;section_text_color= for alternative coloring.\\nVarious UI related tweaks and fixes.\\nFull Changelog: d016b6f...v1.7.7\\n\\nUpdate:\\n\\nSlight table scrolling bug fix. (was miscounting the last step) - 09/15/2024 3:30 AM PST\\nFull Changelog: v1.7.7...73b10bd\\n\\n1.7.6\\n\\nList of changes:\\n\\nNew symbol placeholder variables.\\n{A}, {B}, {X}, {Y}, {L}, {R}, {ZL}, {ZR}: Button symbols for A, B, X, Y, L, R, ZL, and ZR.\\n{DUP}, {DDOWN}, {DLEFT}, {DRIGHT}: Directional pad (D-Pad) buttons symbols.\\n{LS}, {RS}: Symbols for the left stick (LS) and right stick (RS) click buttons.\\n{PLUS}, {MINUS}: Symbols for the Plus and Minus buttons.\\n{UP_ARROW}, {DOWN_ARROW}, {LEFT_ARROW}, {RIGHT_ARROW}: Arrow symbols pointing up, down, left, and right.\\n{RIGHT_UP_ARROW}, {RIGHT_DOWN_ARROW}, {LEFT_UP_ARROW}, {LEFT_DOWN_ARROW}: Diagonal arrow symbols indicating direction combinations.\\n{POWER}: Power button symbol.\\n{HOME}: Home button symbol.\\n{CAPTURE}: Capture button symbol.\\n{REFRESH_SYMBOL}: Refresh symbol.\\n{WARNING_SYMBOL}: Warning symbol.\\n{INFO_SYMBOL}: Information symbol.\\nNew progress symbol throbber implementation. (for commands in progress that do not utilize the progress percentage)\\nToggle-related bug fixes. (bug was introduced in v1.7.5)\\nThis should resolve issues a number of issues with toggles not retaining their state after being clicked.\\nStorage capacity in Device Info has been corrected. (was previously showing free space instead of the amount of space being consumed)\\nSlight UI corrections.\\nVarious code optimizations.\\nFull Changelog: 3801fca...v1.7.6\\n\\nUpdate:\\n\\nString formatted combo symbols replacements for tables. - 09/10/2024 09:08 PM PST\\nSlight tweak to throbber implementation (slightly more optimized). - 09/10/2024 09:46 PM PST\\nArrow symbols fix. (some were mis-mapped) - 09/11/2024 09:00 AM PST\\nFull Changelog: v1.7.6...d016b6f\\n\\n1.7.3\\n\\n(stability update)\\n\\nList of changes:\\n\\nLong tap (touch > 0.5s) of an overlay / package on the main menu will now open the overlay / package settings menu upon release.\\nFuse data is now reloaded / re-dumped upon boot.\\nNew true / false option disable_reload is now stored in fuse.ini for manual disabling of the fuse data reload function.\\nMore corrections and improvements to the wallpaper swapping feature.\\nInterpreter relevant bug fixes (especially with handing large boot_package.ini files).\\nThese fixes should make opening OC Toolkit faster as well as fix the Backup and Restore functions when used with wallpapers.\\nFew additional minor bug fixes.\\nImportant: Fuse data has new key names, so you may need to reboot once or delete sdmc:/config/ultrahand/fuse.ini after updating from v1.7.2.\\n\\nFull Changelog: 9ff96ba...v1.7.3\\n\\nUpdate:\\n\\nSlight table text alignment correction. - 09/05/2024 6:10 AM PST\\nFull Changelog: v1.7.3...9f6c2d8\\n\\n1.7.2\\n\\nList of changes:\\n\\nContinued expansion of Device Info to now include local IP, eMMC storage, CPU/GPU/SOC Speedo + IDDQ and more.\\nFuse related data is auto-dumped to sdmc:/config/ultrahand/fuse.ini if fuse.ini is missing.\\nSpecial thanks to Masagrator.\\nSlight reorganization of Settings Menu.\\nMore renderer related tweaks and bug fixes. (faster pixel rendering / more FPS)\\nPackage settings menu now includes a toggle for Boot Package and Error Logging.\\nError logging will now only occur for packages when Error Logging is set to an On state. (off by default)\\nLogs will be generated within the package folder in log.txt.\\nRoot package / root boot package logging will only work with command logging.\\nCalls of logging command will always bypass Error Logging and log errors and commands to the designated log.txt.\\nNew placeholder variables {cpu_speedo}, {cpu_iddq}, {gpu_speedo}, {gpu_iddq}, {soc_speedo} and {soc_iddq}.\\nNew progress indicator bar for visualizing download, unzip, and copy percentages.\\nNew theme color settings progress_color and progress_alpha.\\nReturn of shutdown controllers for manually powering off all connected bluetooth controllers.\\nThis feature still does not work with Mission Control. Just a heads up.\\nNew language variables.\\nAlternate languages may still need translations done to the updated .json files.\\nUpdates to libraries devkitA64 and libnx.\\nNumerous code optimizations for smaller compilation size and slightly faster commands.\\nVarious bug fixes.\\nFull Changelog: d959363...v1.7.2\\n\\nUpdate:\\n\\nPre-release period is over. Things appear to be stable. - (09/03/2024 12:27 PM PST)\\nNumber of memory related bug fixes.\\nCorrections to memory ID (got messed up upon initial release).\\nCouple logging related bug fixes.\\nCopy buffer has been increased to 4x and properly linked.\\nLive wallpaper swapping bug fix. - (09/03/2024 3:21 AM PST)\\nMore live wallpaper swapping bug fixes. - (09/03/2024 4:15 AM PST)\\nTighter/stricter timing for swapping wallpapers to prevent more random crashes. - (09/03/2024 6:28 AM PST)\\n\\n1.7.1\\n\\nExpanded System page to include various device related information.\\nThis table currently includes device firmware, bootloader version, hardware type, memory information, and storage information.\\nSpecial thanks to ComplexNarrative.\\nNew command placeholder variables {ram_vendor}, {ram_model}, {ams_version}, and {hos_version}.\\nExpansion of refresh command to include wallpaper for the ability to reload wallpaper.rgba,\\nCalled refresh wallpaper.\\nImproved scrolling implementation. (proper time-synced speed interpolation)\\nComplete recalibration of character width map.\\nThis should result in more proper table alignments when using tables with info sections aligned to the right.\\nMultiple memory related bug fixes.\\nMore memory leaks have been fixed, which should result in less heap overloads / crashes.\\nLanguage replacements are now performed on every ListItem and CategoryHeader upon initialization.\\nThis fixed entries like, for example, Reboot To and Shutdown from not being properly translated.\\nLanguage json's may still need some translations for the new words that have been included.\\nRemoval of shutdown controllers for space conservation. (commented out)\\nDid not want to remove this function, but because it only works with Nintendo controllers (and not Mission Control) it does seem somewhat redundant since the sync button on Nintendo controllers effectively turns off the controller as well.\\nIf it is highly desirable, I may include this command again in future revisions. But for size stability, I could not get it to fit properly this time around.\\nNumerous code optimizations and bug fixes.\\n\\n1.7.0\\n\\nNew memory expansion option (located in Settings > System).\\nThis function requires internet the first time it is ran, otherwise you can place nx-ovlloader.zip and nx-ovlloader+.zip in sdmc:/config/ultrahand/expansion/. (see here for the .zips)\\nnx-ovlloader.zip (base memory) and nx-ovlloader+.zip (expanded memory) are recompilations of WerWolv's nx-ovlloader 1.0.6/1.0.7.\\nNotice: This feature will utilize an extra 2 MB of system memory for overlays and will require a reboot after being toggled for changes to apply.\\nNew wallpapers implementation. (requires memory expansion)\\nWallpapers must be formatted in .rgba and be exactly 448x720 pixels in resolution.\\nPlace .rgba formatted wallpapers into sdmc:/config/ultrahand/wallpapers/, then they will show up in the Wallpaper Manager in the Settings Menu.\\nSidenote: For full 60 FPS in Ultrahand with wallpapers, overclock CPU >=1581.0 MHz.\\nNumerous optimizations to the libTesla renderer.\\nMulti-thread rendering. (requires expanded memory)\\nReduced big-O complexity.\\nSidenote: With stock clocks and no wallpaper, users should expect to now get ~60 FPS in menu. \ud83d\ude0e\\nVarious improvements to tables, track-bars and the track-bar highlight/select cursor.\\nTime-synced controller scrolling implementation, time-synced click saturation effect, and a variety of corrections within libTesla.\\nMod .pchtxt's now utilize @stop properly when generating IPS mods. (helpful for developers)\\nNew Polish language implementation and slight bug fixes to the languages menu.\\nVarious bug fixes.\\nFix for missing pre-generated root package. (was missing in v1.6.9)\\nDownloads bug fix. (was broken fi missing path sdmc:/config/ultrahand/downloads/ in v1.6.9)\\nCompilation libraries have been updated (excluding devkitA64 which has been left at r25.1-1).\\n\\n1.6.9\\n\\nDropdown and forwarder commands can now use custom labels/footers by using footer= with a value other than null in the package's config.ini.\\nCustom name and version labels for overlays and packages can now be set in /config/ultrahand/overlays.ini and /config/ultrahand/packages.ini by using options custom_name= and custom_version=.\\nOverlays will only be renamed when displayed on the menu. Direct modification of the overlay is still required for any re-naming of the overlay modules themselves.\\nPackages will now assume names in the following priorities.\\ni. Priority 0: Custom names and versions written in packages.ini.\\nii. Priority 1: Package name stated in the header in the package.ini file for the Ultrahand package.\\niii. Priority 2: If none of the above, it will assume the name based upon the Ultrahand package folder.\\nIf left empty, custom name and version parameters will be unused.\\nNew option for table ;header_indent= for drawing a single header indent on left side of the line.\\nThis is meant to be used on one line \"header-like\" tables.\\nNew table text color options for info_text_color and section_text_color.\\ntext : Ultrahand theme text color used for default text.\\nheader : Ultrahand theme text color used for headers.\\non_value : Ultrahand theme color for On values / values.\\noff_value : Ultrahand theme color for Off values / version labels.\\nKey combo string representations in packages will now return their symbolic representation.\\nSoftware update menu will now pull an indicator for the latest Ultrahand Overlay version from the GitHub API.\\nThemes classic.ini and ultra.ini will now be auto-downloaded when opening the Theme manager if they do not exist.\\nDownloads are now stored in a temporary state until completion. After completion, they are then moved into place.\\nThis should help with failed downloads and files being removed/replaced after a failed download to an existing filepath.\\nThe packages menu commands section now utilizes the same core logic as the packages themselves. (code optimization)\\nVarious subtle UI positioning corrections and bug fixes.\\nBug fix for cursor jumping/sliding after using hotkeys (with a d-pad down button) in games.\\n\\n1.6.8\\n\\nList of changes:\\n\\nIntroduction of ini_file_source function and expansion of ini_file function.\\nDropdown selections can now use ini_file_source <PATH_TO_INI> which will return a list of ini section name.\\nIntroduction of new placeholder index replacements selections{ini_file(<INDEX>)} / {ini_file_source(*)} for returning section names. (regular usage of ini_file placeholder calls will still function the same way, as well as ini_file_source)\\nNamed step-trackbars can now use standard json_source, json_file_source, and ini_file_source source functions and placeholder replacements.\\nExpansion of filter to non-path type entries in dropdown selections.\\nCalled filter <NAME_OF_ENTRY>.\\nExpansion of exit command to exit directly to the overlays menu or packages menu.\\nCalled exit overlays / exit packages.\\nExpansion of refresh command.\\nrefresh theme: reload/refresh the current current loaded theme (/config/ultrahand/theme.ini)\\nrefresh package: reload/refresh the current working package (redraws menu)\\nIntroduction of compare function to compare two text file lists and output a duplicate files list.\\nCalled compare <PATH_TO_TXT_1> <PATH_TO_TXT_2> <OUTPUT_TXT_PATH>.\\nNew option -copy_filter / -cp_filter for move / mv commands utilizing -src + -dest.\\nCalled move -src <SRC_TXT> -dest <DEST_TXT> -copy_filter <FILTER_TXT>.\\nThis will run a copy instead of move for files in the filter list text file.\\nIntroduction of new placeholder function split for splitting strings.\\nCalled {split(<STRING>,<PATTERN>,<INDEX>)}.\\nFor example, if the string is Test - String, the pattern is \" - \", and the index is 0, the output would be Test.\\nUpdates to the pre-generated /switch/.packages/package.ini root package file to include Reboot To (for booting directly into /bootloader/hekate_ipl.ini boot entries.\\nNotice: Users may need to delete /switch/.packages/package.ini for it to generate a new one.\\nVarious optimizations to the command interpreter, file manipulation logging, bulk execution implementations, and to move / mv operations.\\nAdditional tweaks to the dangerous pattern detection function.\\nUpdate to Mod Alchemist now at v0.4.7.\\nBug fixes for toggling content mods with duplicate files (utilizing -copy_filter and compare).\\n\\n1.6.7\\n\\nList of changes:\\n\\nNew optional command parameters for copy/cp, move/mv, and delete/del commands for transfer logging and bulk executions.\\n\\na. File manipulation logging: -log_src / -log_dest (outputs a text list for source file and destination file locations)\\n\\ncopy <source_file_path> <destination_file_path> -log_src <src_output_txt_file_path> -log_dest <dest_output_txt_file_path>\\nmove <source_file_path> <destination_file_path> -log_src <src_output_txt_file_path> -log_dest <dest_output_txt_file_path>\\ndelete <source_file_path> -log_src <src_output_txt_file_path>\\nb. Bulk execution: -src / -dest (utilizes text lists to perform transfer operations on all entries)\\n\\ncopy -src <src_input_txt_file_path> -dest <dest_input_txt_file_path>\\nmove -src <src_input_txt_file_path> -dest <dest_input_txt_file_path>\\ndelete -src <src_input_txt_file_path>\\nImprovements and fixes to file_source toggle functions.\\n\\nImproved handling of null placeholder replacements.\\n\\nCorrections to isDangerousCombination (the dangerous pattern combination detection function).\\n\\nThe following paths are now ultra-protected (unable to delete or move files from):\\nsdmc:/Nintendo/Contents/\\nsdmc:/Nintendo/save/\\nsdmc:/emuMMC/RAW1/Nintendo/Contents/\\nsdmc:/emuMMC/RAW1/Nintendo/save/\\nSlight improvements to dangerous pattern detection.\\nUpdates to Mod Alchemist (now v0.4.6, requires Ultrahand v1.6.7+).\\n\\nNow utilizes the new command options for managing \"Contents\" mods.\\n\\n1.6.6\\n\\nStability update.\\n\\nList of changes:\\n\\nMajor memory leak has been fixed.\\nThis issue was present for a while now, but until Mod Alchemist was never as concerning. Since Mod Alchemist can draw extremely long menus, memory overflow problems became more apparent.\\nHas been resolved and should result in better memory handling across all Ultrahand packages/commands.\\nSlight tweaks to the displayed version label formatting for overlays and packages.\\nFailed interpreter spawning bug fix.\\nCommands would occasionally get locked in an \"in-progress\" mode when there were memory related problems when trying to spawn the interpreter thread. When memory related problems occur, the command will return a failed command state instead (red \"X\").\\n\\n1.6.5\\n\\nIntroduction of root-layer boot package implementation for executing commands upon startup.\\nCommand [boot] located within /switch/.packages/boot_package.ini (if it exists) will be now be auto-ran once on startup.\\nThis feature can be useful for Switch Android users if they wanted to remove the auto-generated Android folders (for instance).\\nIntroduction of new command pchtxt2cheat (called pchtxt2cheat /path/to/file.pchtxt).\\nThis function will convert pchtxt files and load them into the correct directory for the game's cheat.\\nImportant: The game's title ID must be present somewhere within the pchtxt for this function to work.\\nVarious bug fixes to pchtxt2ips's IPS generation.\\nExpansion of shutdown command to turn off all bluetooth controllers.\\nThis function is called shutdown controllers.\\nNotice: I have heard that this command may fail (return a red X) with MissionControl due to conflicting services, so just a heads up.\\nSource function file_source can now be chained (called one after another) for combining multiple sources into a single list.\\nSource function definitions can now also utilize an ini_file placeholder replacement (with the ini_file specified before the definition).\\nVarious bug fixes to file_source toggles.\\nSubsequent clicks to file_source toggles are now handled properly with alternating path replacements according to the last line move {file_source} /destination/path/ (must be present for file_source toggles).\\nVarious bug fixes to ini_file placeholder replacements.\\nFailed replacements now return null again instead of Not available (the UNAVAILABLE_SELECTION language variable).\\nWhen a value is null on a table info section, it is now auto replaced with UNAVAILABLE_SELECTION.\\nLanguage selections in the Settings Menu now state their full names in their translated language with their abbreviations listed as footers.\\nThis included updates to all /config/ultrahand/lang/ files.\\nAdditional key combo LS+RS has been added to the combos list.\\nThis includes a correction to the LS button icon.\\nCommands mirror_copy and mirror_delete can now accept wildcard patterns.\\nIntroduction of new Ultrahand Package Mod Alchemist designed for managing, converting, and installing game mods. (formerly the Mod Master example package)\\nNotice: This package requires Ultrahand Overlay v1.6.5+.\\n\\n1.6.4\\n\\nOptimizations to the ;on_every_tick= implementation for track-bars.\\nFaster on every tick command execution.\\nNew table option additions ;section_text_color= and ;info_text_color=.\\nBoth section and info text color are optional parameters that can be set to:\\ndefault (normally default when unspecified)\\nwarning (new built-in theme color warning_text_color)\\nor any specified RGB888 hex color string\\nForwarder package versions and title colors are now inherited from the layer 0 package (package.ini) if left unspecified within the forwarder package.\\nUsers no longer need to specify forwarder package versions and colors on every forwarder package ini.\\nBottom buttons and settings menu touch functions now utilize theme colors click_color and click_alpha for drawing highlights on the touch regions.\\nVarious touch interaction bug fixes. (touching \"OK\" on top of a track-bar, bottom regions for touch adjusted to language text size, etc.)\\nSlight tweaks to pixel blender for drawn strings during hiding.", 
            "screens": 1, 
            "extracted": 2275, 
            "version": "1.8.2", 
            "filesize": 701, 
            "details": "WARNING: This will overwrite Tesla Menu if already installed.\\n\\nUltrahand Overlay is a Tesla Menu replacement built from the ground up off of libtesla that provides powerful C/C++ commands through the usage of its own custom interpretive programming language (similar to Shell/BASH). It is a versatile tool that enables you to create and share custom command-based packages, providing enhanced functionality for managing files and directories on your SD card.\\n\\nWith Ultrahand, you have the flexibility to customize and shape your file management system according to your needs, empowering you with greater control over your system configurations.", 
            "app_dls": 2226, 
            "md5": "542e4f52993d8bc1644e769b7e9c2030"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/HomeBrew-Manager/HomeBrew-Manager.nro", 
            "updated": "27/10/2019", 
            "name": "HomeBrew-Manager", 
            "license": "GPLv2", 
            "title": "HomeBrew-Manager", 
            "url": "https://github.com/KranKRival/HomeBrew-Manager/releases", 
            "description": "A simple homebrew manager", 
            "author": "KranKRival", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 902, 
            "version": "1.0.0", 
            "filesize": 321, 
            "details": "A simple homebrew manager\\n\\napologies for the lack of info the dev didnt provide much :)", 
            "app_dls": 3483, 
            "md5": "4eb1dbcfea3085429fc0c71593bf6355"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/JKSV/JKSV.nro", 
            "updated": "16/11/2024", 
            "name": "jksv", 
            "license": "n/a", 
            "title": "JKSV", 
            "url": "https://github.com/J-D-K/JKSV/releases", 
            "description": "Save Manager", 
            "author": "J-D-K", 
            "changelog": "11/05/2024\\n\\nJKSV's default configuration settings have been updated to use ZIP as the default backup option instead of JKSM's original unpacked folder format.\\nThis can be changed by scrolling down to the end of the user selection menu and opening the settings menu if you wish to use folders instead. Note that ZIP offers higher compatibility with games that use UTF-8 file paths and other oddities that the save containers allow that the SD card does not. Folders allow easier access to the files themselves.\\nIf you've been using JKSV for a while, chances are your current configuration file will override this change. If you would like the best compatibility possible, I recommend toggling the \"Export Saves to ZIP\" option to on from here on out.\\nWith this release, I've included a ZIP with my preferred configuration when I use JKSV. Simply unzip it to your SD card and you're good to go.\\nJKSV's configuration file is now written upon toggling or changing an option instead of at exit or cleanup. Too many people aren't aware you should be exiting JKSV with plus instead of the home button to allow it to save your configuration and cleanup.\\nUpdated translations for:\\nTraditional Chinese by @qazrfv1234.\\nItalian by @Pf-16\\nKorean by @DDinghoya\\nLatin American Spanish (ES419) by @impeeza\\nUpdated WebDav instructions thanks to @impeeza\\nI have written a guide to JKSV's settings menu and what the options do here.\\nWith that, I would like to focus on FsLib and rewriting JKSV. I've learned a lot over the past few years and am aware of a lot of things I could have and should have done differently.\\n\\nThanks everyone. Take care of yourselves.\\nJK\\n\\n08/06/2024\\n\\nOops, I lied: Extra release edition.\\nThis release contains the following fixes and tweaks for Webdav:\\n\\nFixes empty file names on certain Webdav servers.\\nUses path safe titles for Webdav servers.\\nNOTE: This will cause an issue where this release of JKSV will target a different parent folder than the previous one for Webdav.\\n\\nAs with the previous, everyone should thank @rado0x54 for the Webdav support and fixes.\\n\\nHave a nice day everyone!\\n\\n07/18/2024\\n\\n(Experimental?) WebDav support thanks to @rado0x54. Instructions for using and setting it up can be found in Remote Instructions.\\nI'd also like to take this time to actually sincerely thank and apologize to @rado0x54. I didn't mean to ignore you or ignore your work and I really do think it's cool and appreciate it.\\n\\nThis will be the final release of JKSV until my work cleaning up and rewriting the code is finished. I wish I could freeze time and have it done overnight, but I can't. Thanks for being patient everyone.\\n\\n02/23/2023\\n\\nThis release contains a fix for the system font issues caused by the recent Switch update thanks to @SciresM.\\n\\nIt also forces me to post a release containing my in progress Google Drive code. Please note that while it works, I never had time to add and complete automatic upload/patching code. Uploading needs to be manually done for now. I promise I'll be back someday to finish it. You can read the instructions to set it up here.\\n\\nThere may be other changes I made in the past two years. If there are issues, report them and I'll do my best to figure them out when I can.\\n\\n-JK\\n\\n09/01/2021\\n\\nAdds Traditional Chinese support back thanks to @qazrfv1234\\nFixes output paths/title definitions not being read after initial import of old configurations\\nSeparates trash bin into sub folders so trashed backups aren't impossible to find.\\n\\n05/17/2021\\n\\nThe main reason for this update is to fix issues restoring New Pokemon Snap saves. Any new issues caused by the updated code to handle this can be reported. Other things since last time:\\n\\nUpdated Traditional and Simplified Chinese translation files.\\nNew sort options: Games can be sorted alphabetically, by play time, or by last played.\\nPaths to directories and files can be filtered from being backed up and deleted on restoring saves.\\nCreate a file named pathFilters.txt in the folder of the game you wish to filter files from. Add a file or folder for each line. For example, sv:/file.ext or sv:/directory for folders.\\nVarious other tweaks.\\nAny issues should be reported. I'll be working on expanding the New Snap container for expanded snap saves and keeping an eye out for issues I'm not aware of.\\n\\n06/07.2020\\n\\nTraditional and Simplified Chinese translations are included thanks to Leo and JamePeng\\nAny English strings leftover are my entirely my fault, but most of the UI is translated thanks to these two.\\nOutput folders used by games can be set by the user by creating a text file named titleDefs.txt and adding lines such as 01006C300E9F0000 = \"Dragon Quest XI S\". This is to help with folders that default to title ID because of unicode characters.\\nData loading has been reworked.\\nAll save data types should be supported now. The last three (System BCAT, Cache, and Temporary Storage) will only show if any data is found for them.\\nBlacklisted and unmountable titles are skipped sooner in loading, preventing JKSV from loading or creating icons for them.\\nFixed a memory leak where user icons weren't freed if titles were reloaded.\\nJKSV now has the option to backup and restore to and from ZIP archives.\\nJKSV can now write its own working directory to a ZIP archive that can be easily backed up and stored somewhere. (This is in the extra's menu).\\nNSP build is back for people who want it.\\n\\n05.20.2020\\n\\nHold time for confirmation is shortened. Options are added to completely disable it depending on what you want.\\nMinus and ZR are swapped for Options and Extras on the user selection screen\\nExploring the romfs of the title taken over by the homebrew menu is back in the extras menu.\\nSave Data can be erased from your system in the title selection screen like in the switch's settings menu. Holding A is required to confirm this.\\nA custom path for JKSV can be used by creating a file named jksv_dir.txt in your switch folder and typing the path you want to use. This must end with a /. For example, sdmc:/switch/.JKSV/ will make JKSV use a folder in the switch folder that is hidden from the hbmenu.\\nDump All can now be exited early by holding B until the current file is finished.\\nThe User selection screen has been changed to only show the maximum number of users instead of the title select's max of 32.\\nCertain strings can be translated with en-US.txt in JKSV's romfs. Naming this file trans.txt and placing it in JKSV's working directory will make JKSV load it instead of the default US text by myself. This is not 100% complete yet. Please wait if you're interested in making a translation to be included with JKSV in the future.\\nVarious new options.\\nTouch controls have been removed. Sorry.\\n\\n04.10.2020\\n\\nI wasn't planning this, but I've seen way too many people overwrite their ACNH saves with BCAT data and losing their progress.\\n\\nAdded Options Menu to User Select\\nOption one adds Device Saves to accounts when on. This is disabled by default.\\nOption two automatically creates a backup before restoring any save. These are automatically named starting with AUTO. This is enabled by default.\\nOption three is a small CPU overclock. This is to keep the text based UI mode running a bit smoother for people. This is disabled by default.\\nDeleting and Restoring saves now requires the user to hold A to 100% confirm they are sure they want to continue\\nUsers can now be changed in the title selection menu by pressing L or R.\\nTitles can now be favorited and pushed to the top of the title selection by pressing minus.\\nstdio is now used instead of C++ fstream and cuts down size about 200KB.\\nVarious changes and fixes.\\nThis is a prerelease. Parts of the UI's touch controls are not working correctly at the moment. I just don't want people accidentally losing their progress if I can help it.\\n\\n03.21.2020\\n\\nDev. Sv has been renamed Device and is moved higher up in the user select\\nJust a quick update for convenience since I'm going to be ripping apart Freebird's GUI and adapting it to JKSV as much as possible. I don't know how long this might take.\\n\\n01.06.2020\\n\\nSort of emergency release because of HID changes. Bug reports are appreciated. Changes since last year:\\n\\nEverything is enabled. You no longer need to hold a combo to enable:\\nSystem Saves\\nBCAT\\nDevice Saves\\nGeneric icons are generated for things without icons instead of using a big '?'.\\nUpdated for latest libnx\\nROMFS opening code has been removed until I have more time to remake it.\\nHopefully text mode loading is fixed\\n\\n\\n01/08/2019\\n\\nNew Icon thanks to @igniscitrinus\\nNSP Build\\nExtras menu is now accessible by pressing minus instead of button combo\\nExtra option added to delete downloaded update data and reboot console\\nTerminate Processes by titleID - For advanced users to explore normally unopenable system save data archives\\nLayout has been updated to resemble official Switch menus better\\nGraphics file updated for new libnx\\nAdded function to count directory sub dirs, files, and total size. Usable by selecting properties in Adv Mode on a directory.\\nSwitch Software Keyboard and dictionary support.\\n\\n09/15/2018\\n\\nBis storage exploration via Adv. Mode. Pressing ZL, ZR, and Y will activate this and take you to a different menu. All of the standard Adv. Mode options work here, but copying back to bis storage is disabled.\\nNAND Backup. I added this to experiment with FsStorage and stress test some things with larger files a week or two ago. I wouldn't use it as your only way to backup you NAND, but it is there.\\n\\n08/26/2018\\n\\nRewritten, more stable text-wrapping\\nEvery system font is now loaded\\nAdds title blacklisting. Pressing X in the title select will add the selected title to a list that prevents it from being shown. This is located at 'sd:/JKSV/blacklist.txt'\\nFile size is now displayed inside the progress bar\\nOther small tweaks\\n\\n08/05/2018\\n\\nShould fix games with non-ASCII titles. They will now default to their title ID.\\nTweaks some things related to strings.\\nAdds back the 3DS shortcut of holding L or R while selecting new to just auto name the backup\\nTitles are now sorted a bit better by using UTF8\\nThe input guide in the bottom right corner can now be used as button presses for touch controls. I still don't consider touch controls 100% complete\\nVarious UI tweaks and changes", 
            "screens": 1, 
            "extracted": 10307, 
            "version": "11/05/2024", 
            "filesize": 3939, 
            "details": "JKSV for Switch. Mostly to get familiar with libnx. This is still a WIP. Nothing is final yet! You will have to build the newer UI yourself. I'm not providing binaries until I consider it usable", 
            "app_dls": 111106, 
            "md5": "b3bbe97b5f3b19927ed9a7e41f92dac5"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "01/06/2023", 
            "name": "Tesla-menu", 
            "license": "GPLv2", 
            "title": "Tesla-Menu", 
            "url": "https://github.com/WerWolv/Tesla-Menu/releases", 
            "description": "The Nintendo Switch overlay menu", 
            "author": "WerWolv", 
            "changelog": "1.2.3\\n\\nUpdate libtesla\\n\\n1.2.2\\n\\nProper 16.0.0+ Support\\n\\n1.2.1\\n\\nUpdate libtesla (#57)\\n\\n1.2.0\\n\\nThis is just a small release to sort overlays according to their file name on disk.\\n\\nWith this you can now for example prefix overlay files you want to appear in the list first with 0_, 1_ and so on.\\n\\n1.1.4\\n\\nUpdate for latest Atmosphere + libnx hid changes\\n\\n1.1.3\\n\\nUpdate to libtesla 1.3.3 to fix crashes with too many sysmodules running\\n\\n1.1.1\\n\\nUpdated to libtesla v1.3.1\\nThis fixes an issue that caused touch input to not work at all in the Tesla Menu\\n\\n1.1.0\\n\\nUpdated Tesla to make use of latest libtesla features\\nDisplay version numbers of overlays\\nNew help message for if no overlays were found\\n\\n1.0.2\\n\\nUpdated code to latest libtesla\\n\\n1.0.1\\n\\nFixed a bug that rarely caused crashes when moving the focus around in a list\\nFixed inputs only be accepted from handheld mode", 
            "screens": 0, 
            "extracted": 379, 
            "version": "1.2.3", 
            "filesize": 158, 
            "details": "The initial overlay menu to be loaded by nx-ovlloader. It's main purpose is to let the user select other overlays to be loaded. The default directory for overlays is /switch/.overlays where only .ovl files (Plain old .nro files renamed to .ovl to differentiate them from normal homebrew) get loaded.", 
            "app_dls": 144638, 
            "md5": "4a5ba36a981684b0904b31d1bcc3daca"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "10/09/2023", 
            "name": "sys-tune", 
            "license": "n/a", 
            "title": "sys-tune", 
            "url": "https://github.com/HookedBehemoth/sys-tune/releases", 
            "description": "Background audio player", 
            "author": "HookedBehemoth", 
            "changelog": "2.0.0\\n\\nBulk song queuing by @lucasdepetrisd\\nadd some config options by @ITotalJustice\\nRetain settings after restarts\\nGame audio volume settings for per game volume control\\nPlayback based on titleID\\nCan be used for home menu background music\\n\\n1.2.2\\n\\nbump version for bugfix\\n\\n1.2.1\\n\\nFix the music browser if the folder sdmc:/music/ isn't used\\n\\n1.2.0\\n\\nadd option to shut down service\\nthis is to work around an issue with some games that use up all audio renderer sessions\\nthe next time you open the overlay it will start the service again\\nplaylist now shows everything\\ndrop Atmosphere-libs in favor of p-sam's IPC server used in sys-clk\\nfrees up some memory\\nlowers compilation time by a lot\\nrecompiled overlay with latest libtesla\\nan bug in earlier versions could cause a crash if too many overlays were opened\\n\\n1.1.2\\n\\n- implemented flac and wav support\\n- implement seeking in tracks\\n- mp3's are now fully scanned\\n   - this fixed an issue where some songs with varying compression levels showed a wrong total length\\n- switched to audrv/audren\\n- this fixed an issue where sleep worsened audio output quality\\n- now utilizes ams::fs\\n- this reduced memory usage slightly\\n\\n1.0.0\\n\\nInitial Release.", 
            "screens": 3, 
            "extracted": 3478, 
            "version": "2.0.0", 
            "filesize": 322, 
            "details": "Background audio player for the Nintendo switch + Tesla overlay\\n\\nInstallation\\n\\nDownload the release zip from here\\nPut mp3 files to your sd card.\\n\\nYou can manage playback via the Tesla overlay in the release.\\n\\nSleep mode\\n\\nSadly putting the console to sleep while music is playing causes issues. So please pause before you put your console to sleep.", 
            "app_dls": 12751, 
            "md5": "fe0c20f87269075fc80d0dd81027fbbe"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/RandPlayNX/RandPlayNX.nro", 
            "updated": "07/05/2020", 
            "name": "RandPlayNX", 
            "license": "GPLv3", 
            "title": "RandPlayNX", 
            "url": "https://github.com/JrRadiant/RandPlayNX/releases", 
            "description": "start a random game ", 
            "author": "JrRadiant", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 370, 
            "version": "0.0.9", 
            "filesize": 157, 
            "details": "A simple homebrew tool for NX to help you start a random game from your game library. Hope this time you can actually play your games without the need of a painful choice.\\n\\nTested with FW 10.0.2, CFW atmosph\u00e9re 0.12.0.\\n\\nHow to use:\\n\\nFirst of all, count all your games at your Switch library. You can do it faster by counting lines at the All Games screen first, then multiple it by 6, adding the additional X<6 games if needed.\\nSo, you have 128 games installed for example. (No more than 3000 games, please. ^^)\\nLaunch the app, press A.\\nEnter the total amount of your games (128).\\nMaroon is the number of horizontal lines to skip at All Games screen,\\nYellow number is the number of the actual game to play on the next row.\\nPress B and run your game that was chosen by a Random God! ^_^ (Well, forsooth, it's a rand() seeded by your local timestamp.)", 
            "app_dls": 1150, 
            "md5": "c1d3436488e7569e6ac619cfd8975289"
        }, 
        {
            "category": "theme", 
            "binary": "/switch/ThemezerNX/themezer-nx.nro", 
            "updated": "23/10/2021", 
            "name": "ThemezerNX", 
            "license": "GPLv3", 
            "title": "ThemezerNX", 
            "url": "https://github.com/suchmememanyskill/themezer-nx/releases", 
            "description": "A switch theme downloader ", 
            "author": "suchmememanyskill", 
            "changelog": "2.0.0\\n\\nA lot of the ui has been re-organised or re-colored by @Migushthe2nd!\\n\\nAdded:\\nButton shortcuts are now displayed in the UI\\nIcons have been added to the side menus\\nThe path /switch/NXThemesInstaller/NXThemesInstaller.nro is now an option for the installer nro placement (thanks @FlyingBananaTree)\\nErrors in queries are now displayed to the user, rather than silently ignored\\nModified:\\nThe color scheme and iconography now more closely resembles the site's UI\\nButton shortcuts have been expanded, besides L and R now X, Y and minus have an assignment (see above)\\nThe queued installs menu now only shows installs that are queued\\n\\n1.1.2\\n\\nThemezer-nx now auto starts at the Packs tab, rather than the All tab\\nThe LR buttons can now be used to navigate between pages", 
            "screens": 1, 
            "extracted": 10100, 
            "version": "2.0.0", 
            "filesize": 3548, 
            "details": "This app downloads themes from https://themezer.net/ and installs them through the nxthemesinstaller.\\n\\nYou probably want to have the nxthemesinstaller either installed via the hbappstore or as nro in the switch folder in order for this app to be able to install themes.\\nYou can also download themes, and they'll be stored inside sd:/Themes/ThemezerNX/(target)/(creator)/(themename).nxtheme\\n\\n\\n\\n", 
            "app_dls": 105601, 
            "md5": "823a2009d0e7bebe7aff95a36b5410ce"
        }, 
        {
            "category": "game", 
            "binary": "/switch/A-Square-Astray-Public.nro", 
            "updated": "10/09/2022", 
            "name": "A-Square-Astray", 
            "license": "GPLv3", 
            "title": " A Square Astray", 
            "url": "https://github.com/TheLogicMaster/A-Square-Astray-SwitchGDX/releases", 
            "description": "A Square Astray - Ported to Switch", 
            "author": "TheLogicMaster", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 39050, 
            "version": "1.0", 
            "filesize": 20878, 
            "details": "A square is astray!\\n\\nCorrect its path and guide it to the finish line by drawing lines. When you place a line, it becomes a collidable object in the game. Avoid obstacles and wisely place lines to alter the square's path.\\n\\nCreated using LibGDX and ported with SwitchGDX\\n\\nDeveloped by Alex Schimpf\\nPorted by Justin Marentette", 
            "app_dls": 196, 
            "md5": "4b816096396bf185be61d59797dd1665"
        }, 
        {
            "category": "game", 
            "binary": "/switch/ChunkIntercept/ChunkIntercept.nro", 
            "updated": "03/08/2020", 
            "name": "ChunkIntercept", 
            "license": "n/a", 
            "title": "ChunkIntercept", 
            "url": "https://github.com/PappaSoul/ChunkIntercept", 
            "description": "small homebrew game", 
            "author": "PappaSoul", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 166, 
            "version": "1.0", 
            "filesize": 24, 
            "details": "This is a small homebrew game I originally made for the nintendo switch, since its creation is has slowly been ported to various devices and updated.", 
            "app_dls": 235, 
            "md5": "b797258ca520c59e0695b7f79ec974e2"
        }, 
        {
            "category": "game", 
            "binary": "/switch/MazeNX/MazeNX.nro", 
            "updated": "20/01/2019", 
            "name": "MazeNX", 
            "license": "MIT", 
            "title": "MazeNX", 
            "url": "https://github.com/simontime/MazeNX/releases", 
            "description": "Scary Maze Game clone", 
            "author": "simontime", 
            "changelog": "v1.2.0\\n\\nAdded mouse support!\\n\\nUpdated controls:\\nNow plays just like the original when the mouse is plugged in.\\nAlso this seems to be the first homebrew title ever made that uses libnx mouse support\\n\\nv1.1.0\\n\\nAdded touch support!\\n\\nUpdated controls:\\nTouch in the direction you want to go.\\nTouch with 2 or more fingers to move faster.\\n\\n", 
            "screens": 0, 
            "extracted": 721, 
            "version": "1.2.0", 
            "filesize": 351, 
            "details": "A scary maze game clone for Switch\\n\\nControls:\\n\\nJoysticks/D-pad to move\\nHold ZR to move faster\\nOr:\\nTouch in the direction you want to go.\\nTouch with 2 or more fingers to move faster.\\nOr:\\nPlay via a mouse!", 
            "app_dls": 1176, 
            "md5": "f0db7f26497319d01fae829ee964607a"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "29/07/2024", 
            "name": "TegraExplorer", 
            "license": "GPLv2", 
            "title": "TegraExplorer", 
            "url": "https://github.com/suchmememanyskill/TegraExplorer/releases", 
            "description": "A payload-based file manager for your switch!", 
            "author": "suchmememanyskill", 
            "changelog": "4.2.0\\n\\nThis update overhauls how system wipe's inside tegraexplorer are done. This should now fix the black screen on boot after performing a system wipe, and also save battery calibration values after a wipe.\\n\\nPlease report any issues in the Issues tab\\n\\nSystemwipe message has been edited to convey a bigger sense of danger when using the wipe script.\\nGenerate save index (#91, #96)\\nThis fixes the black screen issue\\nKeep the aging save (and index it) (#97, #99)\\nThis fixes battery issues after a system wipe\\nOn a lite system, this would have previously caused the battery to charge to unsafe levels. If you have previously ran the systemwipe script on a lite, you cannot run this script again to fix this.\\nMassive thanks to @JeffVi, who single-handedly fixed the systemwipe script\\n\\n4.1.1\\n\\nThis is actually just v4.1.0-b1, with 2 changes\\n\\n@bleck9999 added that the power and volume buttons can always be used as up/down/a\\nThe keyboard is also now fixed with just power/volume controls\\nThe firmwaredump script no longer automatically tries to read the firmware\\nPS: I messed up the selected branch of which this release is based, and i seemingly cannot edit this. it's based on this commit\\n\\n4.1.0-b1\\n\\nUpgrade BDK to Lockpick-RCM 1.19.10\\nNew keydump strategy, hopefully mitigating pkg1 hotfixes\\nThanks a lot to @JeffVi for helping me port the Lockpick_RCM BDK to TegraExplorer!\\n\\nThanks a lot to @lucasaf04 for testing this on an oled console for me\\n\\n4.0.1-hotfix4\\n\\nHotfix for key dumping on firmware 16.0.0, brought to you by @FlyingBananaTree! (again)\\n\\n4.0.1-hotfix3\\n\\nHotfix for key dumping on firmware 15.0.0, brought to you by @FlyingBananaTree!\\n\\n4.0.1-hotfix2\\n\\nThis is a hotfix to support fw 14.0.0, added by @dezem. Thanks!\\n\\n4.0.1-hotfix\\n\\nThis is a hotfix of TE 4.0.1 that contains the new PKG1 of 13.2.1. I'm still working on a proper release\\n\\n4.0.1\\n\\nFixes an error regarding broken error text output.\\n\\n4.0.0\\n\\nTegraScript v3!\\nEmbedded scripts!\\nThe firmware dump script has been replaced by an embedded script, which also shows the actual firmware version now!\\nA System wipe (factory reset) script is also embedded into TegraExplorer now\\nScripts put in sd:/TegraExplorer/scripts now show up in the main menu\\nCompiling with the SCRIPT_ONLY define will allow you to embed more scripts due to more space\\nProbably more that i forgot\\n\\nThis release wouldn't have been possible without the help of @bleck9999 and @maddiethecafebabe. Big thanks to them!\\n\\n3.0.6\\n\\nAdds support to dump keys on 12.1.0\\n\\nNote: this also implements lockpick_rcm's handling of future firmwares\u2122\ufe0f, so these support updates should be less frequent\\nUpdate bdk\\n\\nAdd payload compression\\n\\nShow a key dump error upon entering an mmc partition without dumping keys\\n\\nFix displaying small files in the hex view\\n\\n3.0.5\\n\\nSmall update to support key dumping on 12.0.2\\n\\n3.0.4\\n\\nThis is a small update to support 12.0.0\\nAlso gives out a nicer error message if pkg1 is unknown, rather than scary hex\\n\\n3.0.3\\n\\nAdded partition encrypting and decrypting. For the end user, this is only noticable in that prodinfo is now dumped decrypted. (and during restoring encrypted). WARNING: there is no option currently to restore an encrypted prodinfo part\\nShow SD mount error when user attempts to mount sd\\n\\n3.0.2\\n\\nUpdated bdk to hekate 5.5.2\\nFix up some broken code in the controller logic (switch lites should now not freak out anymore)\\nAdd a reboot normally option in the main menu\\nAdd safeguards for mariko to be unable to reboot to rcm\\nFix an issue where if too much data was read from the internal storage, invalid data would be returned\\n\\n3.0.1\\n\\nA charging icon has been added\\nScreenshots have been added\\nScript fixes (see the TegraScript Repo for more detail)\\nFile deletion now has a 500ms wait time\\nThis release of TegraExplorer runs a lot faster when you have minerva on your sd card. This means that having the bootloader folder of hekate 5.1.0+ on your sd cards speeds things up a lot!\\n\\n2.0.5\\n\\nFixed biskey dumping on 11.0.0\\n\\n2.0.4\\n\\n.cmnt.nca style dumping (for daybreak) using a prod.keys file\\n\\n2.0.3\\n\\nLots of changes have been made to the TegraScript language. See the changelog there for the changes.\\nBisfile extraction has been cleaned up\\nMenu code has been cleaned up\\nSmall bugs have been fixed\\nPayload size has been reduced slightly\\nNote:\\nThis release of TegraExplorer runs a lot faster when you have minerva on your sd card. This means that having the bootloader folder of hekate 5.1.0+ on your sd cards speeds things up a lot!\\nIn this version of TegraExplorer some features are disabled unless you're running with minerva. Currently this is limited to taking screenshots\\n\\n2.0.2\\n\\nAdded\\nSave signing using a prod.keys file\\nFixed\\nSome various gfx bug fixes\\nFix scripts asking for confirmation on flashing files back\\nHopefully fix formatting (f_fdisk returned 1!)\\nRemoved\\nThe save dumping option in the tools menu is now gone. You can still do this via this tegrascript\\n\\n2.0.1\\n\\nSpeed up sd formats\\nLittle speed up in file copying\\nReduced file size a little\\n\\n2.0.0\\n\\nAdded\\nThe screen is now horizontal, The GUI has been tweaked to fit the new dimensions\\nA scroll bar has been added\\nAdditional info is displayed on the right side of the screen\\nJoycon support has been added\\nThis also means the TegraScript Language has changed to reflect this\\nDue to having more buttons, a way to input text has been added. This means you can add folders, rename folders and rename files when you have both joycons connected\\nIf you do not have the joycons on your system, LeftUp is vol+, LeftDown is vol-, and A is power\\nYou can take a screenshot by pressing the screenshot button on the left joycon\\nCurrent controls:\\nUp/Down: Left stick up/down\\nSelect: A\\nBack: B\\nFast Up/Down: Right stick up/down\\nScreenshot: Capture button\\nFixed\\nLoading into folders is now a lot faster as the way file sizes are cached changed\\nNavigating around folders is now a lot faster as the way screen updates has changed\\n(some) spelling errors have been corrected\\nNote:\\nThis release of TegraExplorer runs a lot faster when you have minerva on your sd card. This means that having the bootloader folder of hekate 5.1.0+ on your sd cards speeds things up a lot!\\nIn this version of TegraExplorer some features are disabled unless you're running with minerva. Currently this is limited to taking screenshots\\n\\n\\n\\n1.5.2\\n\\nAdded\\nThe file size display has been altered\\ncoreboot.rom boot support\\nPKG1ID is shown on pkg1 dump failure\\nChanges to the TegraScript Language\\nFixed\\nPartition dumps and restores above 4gb had some trouble keeping track of it's %. This has been fixed. Yes this is kinda pointless as you can't even do this without modifying TE\\nMerge Lockpick_RCM changes\\nReduced file size by changing firmware dumps and save dumps\\nScreen scrolling (as in, scrolling the entire screen) is now about 10% faster\\n\\n1.5.1-hotfix\\n\\nSmall release to fix some bis dumping bugs and add the 10.0.0 pkg1 version\\n\\n1.5.1\\n\\nSome small bugs have been fixed and some misc stuff has changed in scripts. The changes to scripts have been listed in the TegraScript Repo\\n\\n1.5.0\\n\\nAdded\\nReworked TegraScript. You can find out more about this new scripting lang in the TegraScript repo to find out how to use it and to find some premade scripts\\nReworked the mmc view. Now you'll see the entirety of the gpt + boot01. (This makes interacting with gpt partitions easier)\\nFixed\\nHide errors inside scripts\\nGive accurate file count in the top right\\n\\n1.4.0\\n\\nAdded:\\n\\nAdded better warnings, with descriptions\\nRevamped gfx system\\nBis restoring, extracting, dumping\\nFixed:\\nLots of things. Stuff should be faster and more stable\\n\\n1.3.2\\n\\nFixes:\\n\\nFile based emummc's not mounting properly\\nFix errors after using copy_recursive()\\nAdded:\\n\\nBattery indicator\\n\\n1.3.1\\n\\nAdd 3 new scripting elements for future use in some of my guides\\n\\n1.3.0\\n\\nAdded\\nScripting\\nEmuMMC reading\\nFixed\\n\\npkg1id is now used as foldername for fw dumps to avoid conflicts\\nChanged some function behaviour internally\\nFolder attribs get copied correctly\\nThe first 16MiB get cleared now on a SD format\\nScripting:\\nScripts have an extension of .tegrascript . you can read more about them in the wiki\\n\\n1.2.1\\n\\nSD partitioning failing\\n\\n1.1.1\\n\\nFrom this release onward, partitions should be aligned by 1mb.\\n\\n1.1.0\\n\\nAdded User & Safe mounting!\\nFixed not being able to format with an invalid partition on the sd card\\n\\n1.0.2\\n\\nFixes issue #2 by preventing 32gb sd cards from being formatted for an emummc setup\\nFixes screen going fucky by scrolling in a list of folders\\nImproves on the Tools > Display Console Info menu\\nFixes some spelling\\n\\n1.0.1\\n\\nThis release fixes a mistake in TE 1.0.0 that made it format sd's to a cluster size of 8K, instead of the standard 32k. This would cause very slow performance of the sd card.\\n\\n1.0.0\\n\\nThe release marks the completion of the TegraExplorer rewrite.\\n\\nFeatures added:\\n\\nSD formatting\\nCopying between emmc and sd\\nHex viewing\\nNote:\\nThis release of TegraExplorer runs a lot faster when you have minerva on your sd card. This means that having the bootloader folder of hekate 5.1.0+ on your sd cards speeds things up a lot!\\n\\n\\n0.1.1\\n\\nadd 9.0 pkg1 which fixes tegraexplorer on 9.0", 
            "screens": 0, 
            "extracted": 187, 
            "version": "4.2.0", 
            "filesize": 104, 
            "details": "A payload-based file explorer for your switch!\\n\\nUsage\\nGet your favorite payload injector\\nInject TegraExplorer as a payload\\nNavigate around the menus using the vol+, vol- and power buttons\\n\\nFunctions\\nNavigate the SD card\\nNavigate the System partition of your sysnand/sysmmc\\nInteract with files\\nDeleting, copying or moving files\\nLaunching payloads files\\nViewing the hex data of a file\\nInteracting with folders\\nDeleting or copying folders\\nDumping your current firmware to sd\\nFormatting the sd card\\nSupport\\nFor general CFW support, go to the Nintendo Homebrew discord\\n\\nFor question specifically for TegraExplorer, go to my discord\\n\\nCredits\\nBased on Lockpick_RCM, and thus also based on Hekate\\n\\nLots of help from:\\n\\nshchmue\\nDenn", 
            "app_dls": 26539, 
            "md5": "3108a37333d5b8ae9bc65da756240dda"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/PyNX/PyNX.nro", 
            "updated": "09/08/2018", 
            "name": "pynx", 
            "license": "ISC License", 
            "title": "Pynx", 
            "url": "https://github.com/nx-python/Pynx", 
            "description": "Python on NX", 
            "author": "AileenLumina", 
            "changelog": "\\n0.5.2\\nadded threading support\\n\\n0.6.0\\nImgui and Pyimgui support Documentation : http://pyimgui.readthedocs.io/en/latest/index.html \\nUrllib works properly now\\nNew python file launcher", 
            "screens": 0, 
            "extracted": 28581, 
            "version": "v0.6.0-alpha", 
            "filesize": 7448, 
            "details": "nx-python is an ecosystem for developing and running Python homebrew applications on the Nintendo Switch.PyNX serves as the entry point to running Python apps on your Switch. It is a homebrew app that contains a port of the CPython interpreter and allows you to run Python applications from the Homebrew Menu.\\nThe _nx module provides a low-level wrapper around libnx.\\n\\nThe nx package allows you to use Switch-specific functionalities, such as controller input and filesystem access, in your Python apps.\\nPython 3.5 is supported.\\n\\nThis release largely simplifies loading and distributing Python homebrew apps. When launching PyNX, you will now be greeted with a menu that allows you to select the Python program you want to launch. Python homebrew applications are now placed in the /switch/ directory on the SD card and can be a single .py file or a directory containing a main.py file. Python homebrews can also import each other, as long as the homebrew they're trying to import is installed.", 
            "app_dls": 13032, 
            "md5": "458cbc07e0a93ae85be3f72a59908655"
        }, 
        {
            "category": "tool", 
            "binary": "/nxTransmission/nxTransmission.nro", 
            "updated": "17/01/2020", 
            "name": "nxTransmission", 
            "license": "GPLv3", 
            "title": "nxTransmission", 
            "url": "https://github.com/t-flo/nxTransmission/releases", 
            "description": "Unofficial homebrew port of Transmission", 
            "author": "t-flo", 
            "changelog": "nx_0.2.3\\n\\nReplace non ASCII characters in filenames.\\nudp trackers working.", 
            "screens": 0, 
            "extracted": 2770, 
            "version": "nx_0.2.3", 
            "filesize": 1162, 
            "details": "A homebrew port of Transmission 2.94 for Nintendo Switch with a very basic console UI. Torrents can be added/managed by a web browser remotely, or with something like Transdroid.\\n\\nexFAT support\\nThis was tested only with the FAT32 file-system. Using exFAT could lead to DATA CORRUPTION, especially if nxTransmission crashes.\\n\\nFAT32 limit\\nFAT32 has a file size limit of 4GB, files bigger than this limit are split automatically to a folder matching the original file name, and the file concatenation attribute is applied to the folder when the torrent fully completes. The file-system is detected based on the firmware version, and splitting is on by default if exFAT is not supported. The split setting can be forced from settings.json by adding entry\\n\\n    \"nx-split-files\": true[or false]\\nNotes\\nTorrents are downloaded by default to the /Downloads folder on the sdcard.\\nYou can customize the settings by editing /switch/nxTransmission/settings.json, or in the browser with the web client. Be warned this can lead to speed and/or stability issues.", 
            "app_dls": 3319, 
            "md5": "5eb23afdbf2ea389eb3b993f2c9e5fe7"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/BackupNX/BackupNX.nro", 
            "updated": "31/10/2019", 
            "name": "BackupNX", 
            "license": "n/a", 
            "title": "BackupNX", 
            "url": "https://github.com/SegFault42/BackupNX/releases", 
            "description": "backup files in cloud", 
            "author": "SegFault42", 
            "changelog": "0.2\\n\\nFix crash when push A in empty directory\\nSuffix filename with ... if file name is too long\\nSilent curl output\\nCode refactor", 
            "screens": 0, 
            "extracted": 1176, 
            "version": "0.2", 
            "filesize": 533, 
            "details": "This tool allows you to backup anything from your switch to the cloud , currently supports Dropbox , by editing the included cred.sjon file with your API key.\\nVgedit by vgmoose available on this appstore can be used to edit the json from your switch.\\n", 
            "app_dls": 1339, 
            "md5": "1ab1a91c347cbaa440c359d8ddad35df"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Neumann/Neumann.nro", 
            "updated": "15/12/2024", 
            "name": "Neumann", 
            "license": "GPLv3", 
            "title": "Neumann", 
            "url": "https://github.com/turtle-insect/Neumann/releases", 
            "description": "SaveDate Backup & Restore Tool", 
            "author": "turtle-insect", 
            "changelog": "0.0.28\\n\\nlibnx 4.8.0\\n\\n0.0.27\\n\\nlibnx 4.7.0\\n\\n0.0.26\\n\\nlibnx 4.6.0\\n\\n0.0.25\\n\\nlibnx 4.5.0\\n\\n0.0.24\\n\\nlibnx 4.4.2\\n\\n0.0.23\\n\\nlibnx 4.3.0\\n\\n0.0.22\\n\\nlibnx 4.2.2\\n\\n0.0.21\\n\\nlibnx 4.2.1\\n\\n0.0.20\\n\\nlibnx 4.2.0\\n\\n0.0.18\\n\\nlibnx 4.1.3\\n\\n0.0.15\\n\\nlibnx 4.1.0\\n\\n0.14\\n\\nlibnx 4.0.1\\n\\n0.0.13\\n\\nchange key process\\n\\n0.0.12\\n\\nlibnx 4.0.0\\n\\n0.0.11\\n\\nlibnx 3.3.0\\n\\n0.0.10\\n\\nlibnx 3.2.0\\n\\n0.0.9\\n\\nlibnx 3.1.0", 
            "screens": 0, 
            "extracted": 1636, 
            "version": "0.0.28", 
            "filesize": 761, 
            "details": "Nintendo Switch SaveDate Backup & Restore Tool\\n\\nSpecial Thanks\\n\\nEdiZon\\nswitch-portlibs-examples", 
            "app_dls": 21336, 
            "md5": "6f1a790b3b35205e7f7c8bd5f8130a27"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Checkpoint/Checkpoint.nro", 
            "updated": "13/11/2021", 
            "name": "Checkpoint", 
            "license": "GPLv3", 
            "title": "Checkpoint", 
            "url": "https://github.com/FlagBrew/Checkpoint", 
            "description": "Save Manager", 
            "author": "FlagBrew", 
            "changelog": "v3.8.0\\n\\nFixed: Checkpoint is now compatible again with latest firmware. Compatibility with latest Atmosph\u00e8re has also been fixed.\\n- It took some time to this release to be fully working, but it is finally out.\\nAdded: title sorting by Alphabetical, Last Played and Played Time. (thanks @diwo)\\n- You can now sort your title list by pressing X. More details are available holding minus.\\nAdded: Sword & Shield PKSM Bridge support.\\n- This is a bonus feature for PKSM users. You can enable the PKSM Bridge functionality from the web configuration panel.\\nAdded: embedded Sharkive's cheat database has been updated.\\n- This counts ~2 years of cheat updates.\\nFixed: support for games containing character \u016b in their title.\\nFixed: documentation.\\nFixed: compilation with latest libraries (such as libnx 4.2.0).\\nStability improvements and tons of minor code improvements.\\n\\nv3.7.4\\n\\nAdded compatibility for Atmosphere 0.10.0+. This changes the cheats path from /atmosphere/titles to /atmosphere/contents, so that means this version won't be able to put cheats in place for older Atmosphere versions.\\nFixed: the Aborted by user issue occurring when trying to perform a backup in Applet mode.\\nThis means that if you're running Checkpoint in Applet mode, you won't be prompted to decide a name for your backup and the default name will be used instead.\\nThis also solves incompatibilities for CFWs that don't properly support title takeover.\\nFixed: the Account Selection applet won't cause Checkpoint to hang anymore if using Applet mode, if you're running Atmosphere 0.10.0+.\\n\\nv3.7.3\\n\\nFixed: built in FTP server is now able to open the Checkpoint folder, finally letting this feature to be useful for easy and fast save retrieval.\\nFixed: removed red watermark if Checkpoint was launched in applet mode.\\nPro Tip: you shouldn't launch Checkpoint or homebrew in general in applet mode anyways. Please don't.\\nFixed: latest cheats submissions are built in this release through Sharkive.\\nIf you have cheat codes that are not already available in this release, please submit them to Sharkive's databases here.\\nFixed: unused folders in the SD card are not created anymore\\n\\nv3.7.2\\n\\nFixed: build compiled with support for system version 9.0.0. Please update to Checkpoint 3.7.2+ in order to be able to run this software on system versions 9.0.0 or superior.\\n\\nv3.7.1\\n\\nAdded: Checkpoint can now run again under applet mode, but:\\nit will be very annoying.\\nfunctionalities may not work properly and memory corruption may happen. Occasionally, the application could hang when trying to access one of the system applets. Watch this video for an example.\\nPlease do not run Checkpoint in applet mode.\\nFixed: changed port of built in FTP server to 50000.\\n\\nv3.7\\n\\nAdded: Sharkive feature for the Switch as well. A brand new Cheat menu has been implemented inside Checkpoint to be able to manage cheats for Atmosphere.\\nThe entire cheat database is offline and bundled inside of Checkpoint.\\nYou're able to select and enable just the cheats you really want to have. This is an alternative approach to cheat toggles.\\nCheat updates will happen when:\\nCheckpoint updates.\\nYou build Checkpoint from source.\\nYou build the cheat database and place it into the sd card in the expected location, so that it'll be loaded instead of the bundled one.\\nAdded: Online configurations. You can now configure Checkpoint from your internet browser. Checkpoint will behave as an HTTP server while running.\\nConnect to SWITCH_IP_ADDRESS:8000 from any device connected to the same network as your Switch to be able to access configurations.\\nAdded: FTP server. You probably want to be able to get your saves out of the switch once they have been backed up. While I come up with handier solutions, enjoy this non blocking FTP server. You can access connecting to SWITCH_IP_ADDRESS:5000 with empty username and password.\\nAdded: redesigned UI. Enjoy it while it's fresh.\\nAdded: system keyboard support. The custom keyboard originally setup has been removed from Checkpoint to fully take advantage of the system keyboard applet.\\nAdded: switch pages with L/R.\\nAdded: logging. Logs will be written to /switch/Checkpoint/checkpoint.log.\\nFixed: favorite sorting now works properly again.\\nFixed: cut down size of the executable. It now stores an entire cheat database inside and still manages to be ~1MB lighter than the previous stable release.\\nFixed: Checkpoint doesn't run anymore if nx-hbmenu is launched over a system applet (like Album).\\nRefactoring, refactoring, refactoring...\\nCheat management\\nFrom this release, Checkpoint also handles cheat management. Source cheat files are provided by Sharkive which is another project that have been going on from a while now.\\n\\nOriginally, Sharkive was a 3DS homebrew capable of managing cheats. Since its functionalities have been now integrated into Checkpoint, the app itself has been deprecated and discontinued. If you try to run Sharkive, it'll just close itself now.\\n\\nTo learn more about cheat codes, how to submit them and how to get involved into the project, Sharkive's repo is a good place to start.\\n\\nUser ikeb0mb#2998 made a really useful video tutorial to show you how to use the Cheat Engine. Please have a look!\\n\\nv3.6\\n\\nAdded: a bridge functionality between Checkpoint for Switch and PKSM (for 3DS, v6.0.0 and above) has been implemented.\\nIt allows to send (and then receive back) a save file over the network, to allow manipulations without having to browse your save backups manually on your PC.\\nIt also needs to be manually enabled by editing your configuration file. Once it's enabled, you can access the bridge by pressing L+R on a valid game.\\nThis feature currently works only with LGPE.\\nFixed: buttons are now responsive as before while navigating the UI.\\nFixed: titles with black background are now displayed properly.\\nFixed: checkmark color doesn't confuse with title icons anymore.\\nFixed: text doesn't bleed textboxes like before anymore.\\n\\nv3.5\\n\\nAdded support for Hardware Acceleration. Checkpoint now relies on the GPU to render graphics and text, removing load from the CPU.\\nThe interface now relies on SDL2 to render images and text.\\nText rendering is optimized by using a customized version of SDL_FontCache which caches glyphs in memory rather than creating textures every frame. This also allows to use the system font already available in the console.\\nCheckpoint caches from PlSharedFontType_Standard and PlSharedFontType_NintendoExt fonts, so both regular characters and symbols are now supported to be rendered on screen.\\nAdded option to set a title as Favorite. You can now edit your configuration file to set a title id to be a favorite title, so this will always appear at the top of the title list.\\nFixed crashes caused by too many file descriptors opened.\\nKey behaviour changed. ( thanks @IBNobody )\\nYou can now select rows in the backup list, creating backups and restoring a backup just with the button A.\\nPressing Y will select the current title but deactivate/reset the backup list. It will also enable the backup touch button only. Creating a backup will then disable the backup touch button. This makes it more clear to the user what buttons / UI elements are relevant to multi-backup.\\nFixed occasional crashes while changing account.\\nCheckpoint now uses latest libnx 1.5.0, which supports timezone and fixes wrong default backup names if your console never connected to internet.\\nCheckpoint is now compiled using C++17.", 
            "screens": 0, 
            "extracted": 8574, 
            "version": "3.8.0", 
            "filesize": 3473, 
            "details": "Why use Checkpoint?\\n\\nCheckpoint is created following ideas of simplicity and efficiency. The UI has been designed to condense as many options as possible, while keeping it simple to work with.\\n\\nMoreover, Checkpoint is extremely lightweight - while being packaged with a nice graphic user interface - and is built using the most recent libraries available.\\n\\nCheckpoint for Switch natively supports NAND saves for the titles you have played. Title information are loaded automatically.\\n\\nWorking path\\n\\nCheckpoint relies on the following folders to store the files it generates. Note that all the working directories are automatically generated on first launch (or when Checkpoint finds a new title that doesn't have a working directory yet).\\n\\n - sdmc:/switch/Checkpoint: root path\\n - sdmc:/switch/Checkpoint/config.json: custom configuration file\\n - sdmc:/switch/Checkpoint/saves/<title id> <game title>: root path for all the save backups for a generic game\\n\\nUsage\\n\\nCheckpoint for Switch only runs on homebrew launcher. Make sure you're running up-to-date payloads.\\n\\nThe first launch will take considerably longer than usual (usually 1-2 minutes depending on how many titles you have installed), due to the working directories being created - Checkpoint will be significatively faster upon launch from then on.\\n\\nYou can scroll between the title list with the DPAD/LR and target a title with A when the selector is on it. Now, you can use the DPAD or the touchscreen to select a target backup to restore/overwrite.", 
            "app_dls": 196179, 
            "md5": "59bb1161b51d3a919d01ce1b2a3770a6"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/ScreenTester-NX/ScreenTester-NX.nro", 
            "updated": "16/07/2018", 
            "name": "ScreenTester", 
            "license": ".", 
            "title": "ScreenTester-NX", 
            "url": "https://github.com/Marice/ScreenTester-NX/releases", 
            "description": "Screen Testing App", 
            "author": "marice", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2128, 
            "version": "0.2", 
            "filesize": 493, 
            "details": "This program displays different colors to detect dead/stuck pixels on your Nintendo-Switch screen.It can cycle colors on your Switch screen very rapidly to try and repair stuck/dead pixels.", 
            "app_dls": 3135, 
            "md5": "5f31e70ee7d4221d424c7e20e9633ff5"
        }, 
        {
            "category": "_misc", 
            "binary": "/switch/JoyConMouse/JoyCon_Mouse_POC.nro", 
            "updated": "22/09/2019", 
            "name": "JoyConMouse", 
            "license": "Apache v2", 
            "title": "JoyConMouse", 
            "url": "https://github.com/KranKRival/JoyConMouse/releases", 
            "description": "POC of mouse cursor using SDL2", 
            "author": "KranKRival", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 8627, 
            "version": "0.0.0", 
            "filesize": 3531, 
            "details": "this is a proof of concept of a mouse created with sdl2 and controlled by the left analog stick of the joycon theres button added to determine the button press", 
            "app_dls": 1021, 
            "md5": "5466ed2db74fc4e7c627a761a6195fa3"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "04/10/2021", 
            "name": "sys-hidplus", 
            "license": "n/a", 
            "title": "sys-hidplus", 
            "url": "https://github.com/PaskaPinishkes/sys-hidplus", 
            "description": "allow inputs over the network", 
            "author": "PaskaPinishkes", 
            "changelog": "1.1\\n\\nAdded Support for 1.12+\\nAdded Support for up to 4 players (previously, the limit was 3)\\nReleased sys-hidplus Client (beta): https://github.com/PaskaPinishkes/SwitchSysHidplusClient/releases/\\nUse input_pc.py if you can't or don't want to use sys-hidplus Client for some reason (mac/linux, etc). While it has been updated to support up to 4 players too, it will no longer be updated after this release.", 
            "screens": 0, 
            "extracted": 65, 
            "version": "1.1", 
            "filesize": 49, 
            "details": "A Nintendo Switch sysmodule to use up to 3 inputs over the network and useful to use with services such as Parsec for remote play\\n\\nDisclaimer\\nBugs occur and I'm in no way responsible of any damage caused by this sysmodule or its misuse. If you get any issue, please report it on the Issues tab or report it on the gbatemp thread.\\n\\nMake sure to use Atmosphere because this sysmodule isn't tested with other CFWs.\\n\\nAfter that, make sure you have Python3 installed and open cmd on the location of the extracted pc folder from the build zip file and execute py -3 -m pip install inputs (you'll have to do this step only once). Once inputs is installed, you can then connect to your switch by using python3 input_pc.py {SWITCH IP}, replacing {SWITCH IP} with the IP address of your Switch (You can check it by going to Settings > Internet on your system).\\n\\nYou can modify the behaviour of the controller emulation on the python file by changing the conType values. If you set it to 0, you'll be able to disconnect the controller (useful if the Switch disconnects the controller for some reason). If you set it to 1, you'll be able to emulate a Pro Controller. If you set it to 2 or 3, you'll be able to use the experimental sideways joycon emulation, it has some issues but in some games such as Clubhouse Games, it'll be playable.\\n\\nStuff to do\\nAnarchy mode (3 players using 1 single emulated controller)\\nMake the compatibility for sideways joycons emulation better\\nAdd 4th controller emulation\\nAdd 5-8th controller emulation\\nAdd gyro compatibility\\nAdd USB compatibility\\nAdd rumble support\\nKnown issues\\nInput lag is increased on demanding games such as Super Mario Odyssey\\nUnsupported games\\nAll games that require a gyroscope or the SL/SR buttons (For example, 1-2-Switch, Pok\u00e9mon Let's Go or Super Mario Party)", 
            "app_dls": 1569, 
            "md5": "1371b021c272daf87a74adb863609a61"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/SaltyNX-Tool.nro", 
            "updated": "18/04/2021", 
            "name": "SaltyNX-Tool", 
            "license": "GPLv3", 
            "title": "SaltyNX-Tool", 
            "url": "https://github.com/masagrator/SaltyNX-Tool/releases", 
            "description": "To manage SaltyNX functions", 
            "author": "masagrator", 
            "changelog": "1.1\\n\\nChanged interface from console to Borealis framework.\\nAdded icon\\nWith Borealis it should be easier to understand notifications and other things.\\n\\n1.0.4\\n\\nDouble validate SaltyNX to solve false positives issue.\\n\\n1.0.3\\n\\nAdd option to disable log writing by SaltyNX >=0.2.0a\\n\\n1.0.2\\n\\nNow SaltyNX-Tool checks if it's in Applet Mode.\\n\\n1.0.1\\n\\nDeleted disabling cheats in Atmosphere, it's obsolete from SaltyNX 0.1.2a.", 
            "screens": 0, 
            "extracted": 7110, 
            "version": "1.1", 
            "filesize": 2763, 
            "details": "To manage functions of this SaltyNX fork min. 0.2.0a\\n\\nTo use only in Applet mode. ", 
            "app_dls": 12567, 
            "md5": "21a0af5719658db01e650d7acbeed3d8"
        }, 
        {
            "category": "tool", 
            "binary": "none", 
            "updated": "02/11/2024", 
            "name": "MissionControl", 
            "license": "GPLv2", 
            "title": "MissionControl", 
            "url": "https://github.com/ndeadly/MissionControl/releases", 
            "description": "Use controllers from other consoles", 
            "author": "ndeadly", 
            "changelog": "0.12.0\\n\\nAdded support for firmware 19.0.0\\nImproved accuracy of HD rumble decoding\\nFixed issue where controllers would vibrate erratically in certain titles\\nFixed issue where certain titles would display an error when attempting to query non-native controllers for amiibo data\\n\\n0.11.1\\n\\nAdded support for firmware 18.1.0.\\n\\n0.11.0\\n\\nAdded full support for firmware 18.0.0.\\nAdded support for SCUF Vantage 2 controller.\\nAdded binary patches to enable Joycon-Droid to operate without root access on firmware 12.0.0+.\\nFixed an issue where analog trigger values were swapped for 8BitDo SN30 Pro Xbox Cloud Gaming Edition controller.\\n\\n0.10.0\\n\\nAdded full support for firmware 17.0.0.\\nAdded support for Atari Modern Wireless Controller.\\nMapped 8BitDo Zero D-pad as left analog stick to improve game compatibility.\\nRemoved unnecessary gyro scaling factor for Sony controllers. Controller rotations should now be more sensitive/accurate.\\nFixed an issue where capture button state wasn't being reset after Dualshock 4 touchpad button released.\\n\\n0.9.4\\n\\nFixed a bug in the exefs patches for 16.1.0 that caused the system to get stuck in an infinite loop and freeze when pairing new controllers not already in the bluetooth pairing database\\nCheck vendor/product ID in addition to name when identifying official Switch controllers\\n\\n0.9.3\\n\\nAdded support for Steelseries Stratus XL controller\\nAdded support for 8BitDo Ultimate 2.4G Wireless Controller\\nAdded support for Betop 2585N2 controller\\nAdded .ini config option for setting the analog trigger activation threshold\\nAdded new \"hybrid\" mode to .ini settings for Dualshock 3 player indicator LEDs to display the Switch LED pattern, but reversed to align with the numbers printed on the controller\\nChanged behaviour of Dualshock 4/Dualsense touchpad so that the outer edges are mapped to +/- in order to prevent accidental screenshots being taken when pressing those buttons\\nDualsense mute button is now additionally mapped as capture button\\nUpdated list of official controller names to include a new name introduced in HOS 15.0.0. This fixes an issue where some newer PowerA licensed Switch controllers don't register inputs with Mission Control running.\\nFixed a bug that could cause the console to spam commands when trying to set the player indicator LEDs to flash\\n\\n0.9.2\\n\\nModified the usb interface filter used in Dualshock 3 pairing so as not to clash with the default filter used by the hid module\\nFixed an issue where the system would crash when attempting to pair a Dualshock 3 controller when the Bluetooth pairing database contains the maximum number of paired hid devices.\\n\\n0.9.1\\n\\nAdded support for Sony Dualshock 3 controller.\\nAdded support for Mocute 053 controller.\\nAdded .ini config option to select preferred Dualshock 3 player LED pattern.\\nAdded .ini config option to control the polling rate used by Dualshock 4 controllers.\\nReplaced .ini config option for enabling/disabling the LED lightbar on Sony controllers with a brightness control setting.\\nRenamed some of the other .ini config options.\\nWiimote dpad is now mapped to the left analog stick when in horizontal orientation to improve compatibility with games that don't allow dpad inputs for movement.\\n\\n0.9.0\\n\\nUpdated libraries for 16.0.0 support.\\nAdded bluetooth exefs patches for 16.0.0.\\nAdded support for Sony Dualsense Edge controller.\\nAdded support for Razer Raiju Ultimate controller.\\nAdded support for Mad Catz L.Y.N.X 3 controller.\\nAdded support for AtGames Legends Pinball Arcade Control Panel extension. (Thanks @SK360)\\nAdded exefs patches for btm module to skip calls to CloseHidConnection when a controller doesn't respond properly to the SetTsi vendor command. This eliminates the need to manually flag certain controllers with the settsi_disable.flag file to stop them from being disconnected.\\nDisabled incorrect handling of incoming NFC requests that caused games like Splatoon and Smash Bros to freeze or experience audio glitches when the game attempts to access amiibo data.\\nFixed regression in input handing for Wii Classic Controller/Classic Controller Pro extensions causing certain buttons not to be mapped.\\nFixed cross-platform building from source. (Thanks @cadewey) \\n\\n0.8.0\\n\\nThis is the sixteenth official release of Mission Control.\\n\\nThis is purely a compatibility release to support the newly released 15.0.0 firmware, since I pushed all my recent changes out with the 0.7.1 release last week.\\n\\nPlease note that this is a pre-release intended to allow people to continue using the module on 15.0.0 while I finalise support for it. It should be stable (though please report any issues if you encounter them), but is missing the patches to the bluetooth module for 15.0.0 that enable new Wii and Xbox Elite 2 controllers to be paired. It is otherwise fully functional.\\n\\n0.7.1\\n\\nThis is the fifteenth official release of Mission Control.\\n\\nThis is mostly a bugfix release to push out all of the fixes and improvements that I've been sitting on over the past 6 months. Several improvements and some new configuration options were added for Sony controllers, and experimental Wii Balance Board support mapping center of mass values to left analog stick was added. See below for the full changelog.\\n\\nNew users landing on this release page should first check out the readme on the main project page for the official project documentation. There you can find installation and usage instructions along with an FAQ section that will answer most of your questions.\\n\\nNew configuration options\\nThe following additional/modified settings are now available under this [misc] section of the config .ini file.\\n\\nenable_dualshock4_lightbar Enable/disable the coloured LED lightbar on Sony Dualshock4 controllers.\\nenable_dualsense_lightbar Enable/disable the coloured LED lightbar on Sony Dualsense controllers.\\nenable_dualsense_player_leds Enable/disable the white player indicator LEDs below the Dualsense touchpad.\\ndualsense_vibration_intensity Set Dualsense vibration intensity, 12.5% per increment. Valid range [1-8] where 1=12.5%, 8=100%.\\nPlease note that the disable_sony_leds setting no longer exists, and has been replaced by enable_dualshock4_lightbar and enable_dualsense_lightbar (with inverted logic). If you have been using this setting to date, you will need to update your missioncontrol.ini file accordingly.\\n\\nSee here for full instructions on configuring the sysmodule via the .ini file\\n\\nChangelog:\\nAdded experimental support for Wii Balance Board.\\nAdded support for 8bitdo SN30 Pro Xbox Cloud Gaming controller running firmware 2.XX.\\nAdded mc IPC service for future sysmodule interaction.\\nAdded config option to disable Dualsense player LEDs.\\nAdded config option to set Dualsense vibration intensity.\\nSplit config option for disabling LED lightbar on sony controllers into separate settings for Dualshock4 and Dualsense.\\nInverted logic for controller config options to match other boolean settings.\\nFixed Dualsense player LEDs for controllers updated to newer firmware versions.\\nDisabled fade-in effect for Dualsense player LEDs.\\nLowered default vibration intensity for Dualsense controllers to 50%. This should address user complaints of the vibration being too strong and getting picked up by the motion sensors in certain games.\\nFixed a regression in Wii extension controller detection that caused WiiU Pro controllers to be incorrectly identified.\\nWii MotionPlus extension is no longer initialised if motion controls have been disabled in module settings.\\nWiimote buttons 1/2 now act as L3/R3 when a Classic Controller/ Classic Controller Pro extension is connected.\\nTweaked battery level mapping for Sony controllers. Should hopefully reduce instances of controllers with low battery being immediately disconnected without warning.\\nAdded mutex locks around some sensitive buffer accesses. May improve reliability when pairing controllers.\\nUpdated npdm json to eliminate warnings when building from source.\\n\\n0.7.0\\n\\nThis is the fourteenth official release of Mission Control.\\n\\nThis adds full support for HOS 14.1.0, motion controls for Dualshock4, Dualsense and Wii MotionPlus* controllers, and support for the g910 Wireless Bluetooth controller. See below for the full changelog.\\n\\n*Note: regular Wiimote controllers without the MotionPlus extension may work in some games, but only come equiped with an accelerometer and lack the gyroscope sensor required for full \"sixaxis\" motion controls.\\n\\n- Added bluetooth ips patches for 14.0.0.\\n- Added support for g910 wireless bluetooth controller.\\n- Support for motion controls was added for Dualshock4, Dualsense, and Wii MotionPlus controllers.\\n- Wii controller handling was refactored for accuracy and completeness.\\n- Added mechanisms for executing code in a worker thread and receiving asynchronous responses from controllers.\\n- Minor bugfixes and improvements\\n\\n0.6.4\\n\\nThis is the thirteenth official release of Mission Control.\\n\\nAdded bluetooth ips patches for 13.2.1.\\nFixed incorrect mapping of A/B buttons on Hyperkin Scout controller.\\nFixed disconnection issues affecting Xiami Mi, Steelseries Free and PowerA Moga controllers.\\nFixed a regression that caused the enable_rumble setting in the module config ini file to have no effect.\\nFixed a compilation error when building with latest devkitA64 update\\n\\n0.6.3\\n\\nThis is the twelfth official release of Mission Control\\n\\nJust a quick release to support Atmosph\u00e8re 1.2.5 and the new 13.2.0 firmware. Support for the Hyperkin Scout SNES controller was also added.\\n\\nNew users landing on this release page should first check out the readme on the main project page for the official project documentation. There you can find installation and usage instructions along with an FAQ section that will answer most of your questions.\\n\\nAtmosph\u00e8re >= 1.2.5 is required to run this release.\\n\\n0.6.2\\n\\nThis is the eleventh official release of Mission Control\\n\\nThis is mostly a bugfix release to address the rumble issues that have surfaced since recent Atmosph\u00e8re releases. Support for the new N64 and Sega Genesis/Megadrive Nintendo Switch Online controllers has also been added. See below for the full changelog.\\n\\nAdded support for new N64 and Sega Genesis/Megadrive Nintendo Switch Online controllers\\nFixed an issue where controllers would vibrate non-stop under certain conditions after connecting to the console\\nFixed an issue where rumble output was missing from certain games\\nFixed an issue where Crash Team Racing Nitro-Fueled and Crash Bandicoot N. Sane Trilogy games would output a constant stream of random rumble data\\nDisabled sending SetTsi command to Ouya controller (fixes disconnect issue)\\nChanged the order of initialisation commands for Sony controllers to reduce perceived delay when connecting to the console\\nVarious improvements to the accuracy of controller subcommand handling were added\\n\\nAtmosph\u00e8re >= 1.2.0 is required to run this release.\\n\\n0.6.1\\n\\nThis is the tenth official release of Mission Control.\\n\\nJust a small update to add support for the latest HOS (13.1.0) and Atmosph\u00e8re (1.2.1) versions, and a couple of minor fixes. See below for the full changelog.\\n\\nValid analog stick deadzone parameters are now stored in virtual SPI flash file for each controller. This resolves an issue reported by several users where some controllers were experiencing analog stick drift even after calibration due to incorrect deadzone parameters being applied. Please delete the controller entries under sdmc:/config/MissionControl/controllers/ so that these files can be recreated with the correct parameters. Note that you will need to redo any user calibrations after deleting these entries.\\n\\nSupport for manually disabling a vendor command (SetTsi) for incompatible controllers has been added. Allowing the console to send the command to such controllers causes them to be disconnected shortly after connecting. In most cases, sending of this command can be disabled in code after the incompatibility has been reported. Some incompatible third-party controllers, however, are indistinguishable from the originals that do support the command and must be flagged manually. To do so, a blank file settsi_disable.flag can be created under the directory for a specific controller under sdmc:/config/MissionControl/controllers/<controller address>. Note that this command is used for managing bandwidth between bluetooth devices and also the Wifi chip. It is therefore desirable to have the console send it where possible and should only be disabled where absolutely necessary.\\n\\nNew users landing on this release page should first check out the readme on the main project page for the official project documentation. There you can find installation and usage instructions along with an FAQ section that will answer most of your questions.\\n\\nAtmosph\u00e8re >= 1.2.0 is required to run this release.\\n\\n0.6.0\\n\\nThis is the ninth official release of Mission Control\\n\\nThis release brings full support for firmware 13.0.0, along with a few minor additions and bugfixes. See the changelog below for details.\\n\\nNew users landing on this release page should first check out the readme on the main project page for the official project documentation. There you can find installation and usage instructions along with an FAQ section that will answer most of your questions.\\n\\nNote: 13.0.0 firmware made changes to the system to facilitate bluetooth audio support. While I have updated Mission Control to support the changes that concern hid devices, it's possible that there are issues that could arise from untested scenarios involving audio devices. If you notice any strange behaviour with audio devices that only occurs with mission control installed, please open an issue on the issue tracker.\\n\\nAtmosph\u00e8re >= 1.1.0 is required to run this release.\\n\\n0.5.0\\n\\nhttps://github.com/ndeadly/MissionControl/releases/tag/v0.5.0\\n\\n0.5.0-alpha.4\\n\\nOnce again, this is the same as the previous pre-release, recompiled to work with the latest atmosphere and HOS (0.19.4 and 12.0.3)\\n\\nThis release incorporates updates made to libstratosphere since the previous release that relax version checks, meaning that these updates to Mission Control for each minor Atmosphere release should no longer be required.\\n\\n0.5.0-alpha.3\\n\\nThis is the same as the previous pre-release, recompiled to work with atmosphere 0.19.3 on 12.0.2\\n\\n0.5.0-alpha.2\\n\\nThis is the same as the original pre-release, updated to work with atmosphere 0.19.2\\n\\n0.5.0-alpha\\n\\nNOTE: the new 12.0.0 update made a lot of changes to the bluetooth service under the hood that have broken various things in Mission Control. This is an alpha release intended to appease the masses with preliminary support for HOS 12.0.0/Atmosphere 0.19.x until I find the time to look at it properly. While it should work as usual on firmwares prior to 12.0.0, controller pairing is currently broken for many controllers on the latest firmware. Controllers already paired to the console prior to updating should connect and work as expected. There are likely to be other issues waiting to be discovered (please report them if you encounter any!)\\nThis release brings partial support for the new 12.0.0 firmware, some new controllers and handful of new features and improvements including a global module config .ini, spoofing name and address of the host Bluetooth adapter, and maybe most notably rumble support (finally!)\\n\\nRumble support is available for the major console controllers from Nintendo, Microsoft and Sony and is enabled by default. Support for other controllers can be added at request if you can find me information about the output report format for your controller. Anyone know of a newbie-friendly way to dump an HID report descriptor?\\nPlease note that while rumble works without issue for the supported controllers, it is considered a work in progress with room for improvement. Do not expect the vibrations to be perfect reproductions of the HD rumble found in Switch controllers. It can be disabled globally via the config ini file if you don't like it. This will not affect official Switch controllers.\\n\\nA template for the config .ini file will be installed to /atmosphere/config_templates/missioncontrol.ini. To modify the default module settings, copy the template to /atmosphere/config/missioncontrol.ini and uncomment/modify any settings you want to change. The file is only parsed on startup, so any changes you make will require a reboot to take effect. Currently there is only a small set of configuration settings, but this will be expanded upon in future releases.\\n\\n0.4.1\\n\\nThis is the sixth official release of MissionControl.\\n\\nThis is just a quick update to support the new 11.0.1 firmware update, along with a couple of included bugfixes. See below for the full changelog.\\n\\nNew users landing on this release page should first check out the readme on the main project page for the official project documentation. There you can find installation and usage instructions along with an FAQ section that will answer most of your questions.\\n\\nIMPORTANT: Atmosph\u00e8re >= 0.16.1 is required to run this release. Using an older Atmosph\u00e8re version will cause MissionControl to crash the system on boot.\\n\\nChangelog:\\nUpdated to support 11.0.1 firmware/Atmosphere 0.16.1\\nFixed an issue where some official Nintendo controllers with L and R variants (eg. NES Online Controller) had their inputs ignored due to not being identified correctly.\\nFixed a regression that caused paired controller information from the btm service to be truncated past the first entry. This caused controllers to be missing from the Search for Controllers screen, and in some cases could lead to repeated pairing notifications upon startup/wakeup and database full dialogs being shown.\\n\\n0.4.0\\n\\nThis is the fifth official release of MissionControl.\\n\\nThis release adds compatibility with the new 11.0.0 firmware update, support for new controllers, and some minor fixes and improvements. See below for the full changelog.\\n\\nNew users landing on this release page should first check out the readme on the main project page for the official project documentation. Most of your questions will be already answered there.\\n\\nOnce again, thanks to all the users that requested, helped identify and test new controllers.\\n\\nIMPORTANT: Atmosph\u00e8re >= 0.16.0 is required to run this release. Using an older Atmosph\u00e8re version will cause MissionControl to crash the system on boot.\\n\\nChangelog:\\nAdded support for 11.0.0 firmware\\nAdded support for the following controllers:\\nSony Dualsense Controller*\\nSteelseries Nimbus\\nRazer Serval\\nMad-Catz C.T.R.L.R\\nPowerA Moga Pro\\nipega 9017s\\nMocute 050\\nFixed incorrect button mapping for 8bitdo zero controller as reported by users\\nAdded correct hardware ID for recognition of Gamesir G3s controller in Android mode\\nAdded unique Dualshock4 lightbar colours for players 5-8 (P5=cyan, P6=orange, P7=yellow, P8=purple)\\nAdded toolbox.json file for compatibility with ovl-sysmodules and Hekate/Kosmos Toolbox (thanks Borrajo)\\n*Only basic Dualsense button inputs are supported for now. The controller hasn't been fully reverse engineered yet and I don't own one to test out other features properly.\\n\\n0.3.0\\n\\nThis is the fourth official release of MissionControl.\\n\\nThis release fixes a critical bug in the setting of thread priorities, reworks the way that controller inputs were being handled and adds support for a handful of new controllers, amongst other things. See below for the full changelog.\\n\\nNew users landing on this release page should first check out the readme on the main project page. Most of your questions will be already answered there.\\n\\nThanks again to all the users that requested and helped identify and test new controllers.\\nAlso thanks to peteruk for sending me an icon to use for btdb.nro\\n\\nIMPORTANT: Atmosph\u00e8re >=0.14.2 is required to run this release of MissionControl. Older Atmosphere versions will cause the console to hang or crash during boot.\\nUsers upgrading from version 0.1.0 of MissionControl are also advised to wipe their pairing database and re-pair controllers running 0.2.0 or greater. Failure to wipe the old entries may result in non-switch controllers being detected incorrectly.\\n\\nChangelog\\nAdded support for the following controllers\\nNVidia shield controller\\nTaTaCon (Taiko drum) Wii extension controller\\n8bitdo zero\\nGameSir G4s\\nipega 9076, 9078, 9087\\nPowerA Moga Hero\\nPowerA Moga Pro 2\\nFixed an issue where threads were being assigned lower than intended priorities. This caused the game Hades to freeze at the loading screen when wifi was disabled, and possibly other unreported issues due to conflicting threads.\\nChanged the way that controller input reports are handled. State is now stored for each controller and updated with each incoming report. This should fix several cases where controllers could register false button presses/stick movements.\\nUnrecognised controllers now show up as connected to the console after successful pairing (may require a button press before the console sees the controller). These will display with red coloured buttons in the Controllers menu to indicate they are not being mapped. This should help eliminate some of the confusion between paired/connected state experienced by users requesting controller support.\\nAdded the button combos MINUS + DPAD_DOWN and MINUS + DPAD_UP to act as HOME and CAPTURE buttons respectively, to act as a fallback for controllers where these buttons can't be mapped.\\nReduced the brightness of Dualshock4 controller lightbar by 50%.\\nbtdb.nro now has an option to clear the controller pairing database\\n\\n0.2.1\\n\\nAdded support for firmware 10.2.0\\nFixed a bug with the conversion of WiiU analog stick data that could cause extreme values in X and Y to wrap around to the opposite side in some controllers.\\nAdded support for the following controllers\\nSteelseries Free\\nGameSir G3s\\nHori Onyx", 
            "screens": 0, 
            "extracted": 209, 
            "version": "0.12.0", 
            "filesize": 160, 
            "details": "Notice: It has been confirmed that the new Xbox Insiders controller firmware update will convert your controller to use Bluetooth LE, which is not currently supported. Please do not update if you wish to continue using your controller with Mission Control\\n\\nUse controllers from other consoles natively on your Nintendo Switch via Bluetooth. No dongles or other external hardware neccessary.\\n\\nFeatures\\nSupports all firmware versions\\nPair Bluetooth controllers natively via Change Grip/Order screen\\nNative button remapping (firmware 10.0.0+)\\nbtdrv-mitm module adds extension IPC commands that can be used to interact with the bluetooth process without interfering with the state of the system.\\nSupported Controllers\\nCurrently, the following controllers are supported. If you have a third-party variant of one of the below, or a Bluetooth controller that isn't listed, consider submitting an issue with the controller details, including vid/pid, to request support.\\n\\nNintendo Wii Remote + extensions (Nunchuck, Classic Controller, Classic Controller Pro, SNES Mini, TaTaCon (Taiko drum), MotionPlus)\\nNintendo Wii Balance Board (experimental)\\nNintendo WiiU Pro Controller\\nSony Dualshock3 (Playstation 3) Controller\\nSony DualShock4 (Playstation 4) Controller\\nSony Dualsense (Playstation 5) Controller\\nSony Dualsense Edge Controller\\nMicrosoft Xbox One S/X Controller (not to be confused with Series S/X controllers - these use Bluetooth LE, which isn't currently supported)*\\nMicrosoft Xbox Elite Wireless Controller Series 2\\nNVidia Shield Controller (2017 Model)\\nOuya Controller\\nGamestick Controller\\nGembox Controller\\niCade Controller\\nIpega Controllers (7197, 9017s, 9023, 9055, 9062S, 9076, 9078, 9087, 9096 confirmed working. Others may also work)\\ng910 Wireless Bluetooth Controller\\nXiaomi Mi Controller\\nSteelseries Free\\nSteelseries Nimbus\\nSteelseries Stratus Duo\\nGameSir G3s\\nGameSir G4s\\nGameSir T1s\\nGameSir T2a\\nHori Onyx\\n8bitDo SN30 Pro Xbox Cloud Gaming Edition\\n8BitDo ZERO (Most other 8BitDo controllers have a Switch mode available. May require firmware update)\\nPowerA Moga Hero\\nPowerA Moga Pro\\nPowerA Moga Pro 2\\nMad-Catz C.T.R.L.R\\nMad-Catz L.Y.N.X 3\\nRazer Raiju Tournament\\nRazer Raiju Ultimate\\nRazer Serval\\nMocute 050\\nMocute 053\\nGen Game S3\\nAtGames Legends Pinball Controller + Arcade Control Panel\\nHyperkin Scout\\n\\nRequirements\\nHackable Nintendo Switch running at least version 0.14.2 of Atmosph\u00e8re custom firmware. Other custom firmwares are not supported.\\nCompatible Bluetooth controller\\nInstallation\\nAfter installation a console reboot is required in order for MissionControl to become active.\\n\\nIt is recommended after rebooting to also disconnect any physically connected controllers from the console, delete the pairing database, and re-pair via bluetooth to make sure your existing Switch controllers have the correct hardware ID stored and can be recognised properly. To delete the database, navigate to System Settings->Controllers and Sensors->Disconnect Controllers\\n\\nUsage\\nInstall MissionControl to your SD card, reboot the console and then pair controllers as you normally would via the Controllers->Change Grip/Order screen. Once paired, controllers will reconnect automatically when woken up.\\n\\nMost native features should just work (with the exception of things like firmware update). If you find something that's broken please create an issue.\\n\\nPairing controllers\\nThe supported controllers each have their own methods to enter pairing/sync mode. Below are instructions on entering this mode for each supported type.\\n\\nWii(U) Controllers Press the red sync button on the back of the controller. The controller LEDs will blink rapidly.\\n\\nDualshock4 Controllers Press and hold the PS + share buttons simultaneously until the lightbar starts blinking. When done correctly the blink pattern will resemble a heartbeat, otherwise it will blink periodically.\\n\\nXbox One Controllers Press and hold the guide(X) button until the LED starts blinking. Then press and hold the small sync button on the back near the charging port until the LED starts blinking more rapidly. You should also ensure your controller firmware is up to date, as old firmwares were known to have flakey bluetooth.\\n\\nOther Controllers Please refer to your controller's user manual for information on how to put it in sync mode.\\n\\nHow it works\\nMissionControl works by Man-In-The-Middling the bluetooth system module and intercepting its initialisation IPC commands and system events, and translating incoming/outgoing data to convince the Switch that it's communicating with an official Pro Controller.\\n\\nTo achieve this, the btdrv-mitm module obtains the handles to bluetooth system events and shared memory when the system attempts to initialise them over IPC via the btm and hid modules. It then creates its own secondary versions of these and passes their handles on instead of the original. This allows modifications to be made to any data buffers before notifying (or not) the system. Additionally, the WriteHidData IPC command is intercepted to translate or drop outgoing requests to the controller. In the case of the latter, fake responses can be written directly to the buffer in shared memory.\\n\\nIntercepting initialisation IPC commands also allows homebrew to properly make use of the bluetooth service. Normally, calling any of the IPC commands that would initialise or finalise system events would either crash the console, or invalidate the event handles held by system processes. With btdrv-mitm we are able to hand out alternative event handles when homebrew attempts to initialise an interface, and redirect the real system events to those instead of the events held by system processes.\\n\\nIPS patches to the bluetooth module are provided to (re)enable the passing of abitrary pincodes when Bluetooth legacy pairing is used (Nintendo hardcodes a value of '0000', ignoring IPC arguments). This enables Wii(U) devices to be paired with the console.\\n\\nThe btm service is now also MITM'd, allowing for faking controller names on the fly while retaining the original names in the pairing database.", 
            "app_dls": 240649, 
            "md5": "bab2f06a1235317b692014fde60c6bf2"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/nut.nro", 
            "updated": "03/08/2023", 
            "name": "yallarenuts", 
            "license": "none", 
            "title": "Y'allAreNUTs", 
            "url": "https://github.com/3096/nut/releases/", 
            "description": "A save tool", 
            "author": "3096", 
            "changelog": "0.1.2\\n\\nAs long as one person out there still use this, I should probably keep the support. Shout out to you @meisaboo haha.\\n\\nChange log:\\n\\nBuilt with latest libnx release; should solve HID incompatibility (or any problem it had before as well)\\nIcon actually says the name now\\nGeneral software stability improvements to enhance the user's experience\\n", 
            "screens": 0, 
            "extracted": 953, 
            "version": "0.1.2", 
            "filesize": 353, 
            "details": "Use UP & DOWN to select a save. LEFT & RIGHT to skip 5 saves.\\nPress A to dump save files into 'save/' or press Y for 'save/{titleID}/{userID}/' (will overwrite whatever's already in there.)\\nPress ZR to dump all saves\\nPress X to inject all files that are present in inject/ (For now, don't put too many file at one time. Only put 1 folder for botw save for example. Use at your own risk and always have backups)\\nPress PLUS to quit when not copying files.\\n\\nSince console output doesn't support UTF-8, you can press R to show title ID instead. When you see garbled text (Japanese names, for example) you can manually look up a title here.\\nAvoid using this while the Switch is docked, as in my testing docked mode seems unstable and sometimes crashes.\\n\\nI only made a release of this homebrew because I saw people trying to get builds of my previous versions and it got quite messy... This is by no means a formal program for the long term. It's just a filler for people who are too impatient to wait for Checkpoint's stable version on 5.0.", 
            "app_dls": 6751, 
            "md5": "fb61ab45c94a28ffbba0fb2ad9e90ab7"
        }, 
        {
            "category": "game", 
            "binary": "/switch/scd2011/scd2011.nro", 
            "updated": "29/11/2021", 
            "name": "Sonic-CD", 
            "license": "n/a", 
            "title": "Sonic-CD-11-Decompilation", 
            "url": "https://github.com/heyjoeway/Sonic-CD-11-Decompilation", 
            "description": "A Full Decompilation of Sonic CD 2011", 
            "author": "heyjoeway", 
            "changelog": "1.3.0\\n\\nWorkin that sucker to death\\n\\n1.1.2\\n\\nFix compilation\\n\\n1.1.0\\n\\nAnalog support fixed.\\n\\n", 
            "screens": 0, 
            "extracted": 8151, 
            "version": "1.3.0", 
            "filesize": 3272, 
            "details": "A full decompilation of Sonic CD 2011, based on the PC remake with improvements & tweaks from the mobile remakes. Ported to the Switch.\\n\\nSUPPORT THE OFFICIAL RELEASE OF SONIC CD\\nWithout assets from the official release this decompilation will not run.\\n\\nYou can get the official release of sonic cd from:\\n\\nWindows (Via Steam)\\nIOS (Via the App Store)\\nAndroid (Via Google Play)\\nAndroid (Via Amazon)\\nEven if your platform isn't supported by the official releases, buy it for the assets (you don't need to run the official release, you just need the game assets.)\\n\\nInstallation Instructions\\nYou can find downloads in releases.\\n\\nMake sure your Switch can run homebrew.\\nExtract the contents of the zip to the root of your SD card.\\nCopy the assets to /switch/scd2011 on your Switch's SD card. You will need the following files/folders:\\nhelp (folder, optional as How to Play is broken)\\nvideos (folder)\\nData.rsdk\\nfonts.arc\\nimages.arc\\nsounds.arc\\nStrings.str\\nStart Sonic CD via hbmenu (or whatever method you prefer).\\nNOTE: It is recommended full RAM access. This means you shouldn't launch hbmenu from the album applet when running this. With the latest Atmosphere build and its default config, you can hold R while starting any game to open hbmenu with full RAM access. If you have any issues make sure the game has full RAM access before reporting them; launching as an applet will not be supported.", 
            "app_dls": 12379, 
            "md5": "abe18a31c6b18f585cf7bfa7ea4e9cfe"
        }, 
        {
            "category": "game", 
            "binary": "/switch/julius/julius.nro", 
            "updated": "14/10/2021", 
            "name": "julius", 
            "license": "Affero GPLv3", 
            "title": "Julius", 
            "url": "https://github.com/bvschaik/julius/releases", 
            "description": "Port of Caesar 3 for Switch, based on devnoname120's Vita port.", 
            "author": "rsn8887", 
            "changelog": "v1.7.0\\n\\nGeneral improvements\\nTouch devices: added the ability to pause the game using an on-screen button\\nThe game looks more crisp when using scaling on high DPI screens\\nFile dialog: when typing a name, the list automatically scrolls to the first matching file\\nFile dialog: input textbox now only suggests 'My Rome' when saving, not when loading a game\\nAdded support for new platforms: Haiku and Emscripten\\nPopulation graph on the populator advisor is now usable for populations larger than 51200\\nBridges are now shown on the minimap\\nJoystick support for Vita and Switch\\nShips now play the proper phrase when leaving the docks\\nConfiguration: new option to disable scrolling when the mouse is near the window's edge\\nConfiguration: hotkey config now gives a warning when you try to assign a hotkey that's already in use\\n\\nv1.6.0\\n\\nGeneral improvements\\nMinimap of the scenario can be displayed when selecting a map to play\\nBridge cost is shown before building the bridge\\nRoads lead into the access ramps to indicate that access ramps are part of the road network\\nUndo is disabled after certain houses upgrade to prevent visual corruption\\nGranary info window shows cart status when it's getting food from another granary\\nConstruction: plaza shows as green when over a road with people on it. Previously it was red but the player could still place it\\nConstruction: fountain shows as red when over a building or other non-clear tile. It still indicates whether that tile has reservoir access\\nAndroid release is available on Google Play\\nConfiguration options\\nNew option: display scale\\nNew option: cursor scale\\nNote: both options were already available as command-line arguments\\nRemoved option: \"Fix Emperor change and survival time\" - the option wasn't in line with the project's goals\\nBugfixes\\nFix entertainer corrupting building memory in certain cases\\nFix screen that stayed black after pressing Ctrl+Alt+Del on Windows\\nFix people on bridges not having a portrait on right-click\\nFix crash on Vita when no music is installed\\nFix being able to place disabled buildings in tutorial missions using their hotkey\\nFix \"Disable right click to drag map\" also disabling scrolling on touch devices\\nFix some Android devices showing the window with wrong colors\\nFix small bug with visual feedback on delete\\nFix cursor corrupting on certain Windows 10 versions\\nFix intro video playback causing skipped videos and unexpected audio on slow devices\\nFix top menu items overlapping with the city funds for more verbose languages\\nFix press effect not showing for image buttons\\nFix 'right-click to close window' not working when mouse cursor was over a button\\nFix visual bug when undoing deleted houses\\nFix incorrect scaling mode applied when using a custom display scale, which resulted in pixelated graphics\\nFix freeze on Vita and Switch when opening the keyboard input window\\nTechnical improvements\\nUpgraded SDL to 2.0.14\\nAndroid: upgraded build tools and SDK version\\nPerformance improvements for editor and top menu\\nPerformance improvements related to file handling on Vita and Switch\\n\\nv1.5.1\\n\\nAndroid: crash when starting Julius when the Caesar 3 directory had not yet been set has been fixed\\nWhen supplying a display scale on the command line, the correct scaling mode is now applied, resulting in less pixelated graphics\\n\\nv1.5.0\\n\\nGeneral improvements\\nJulius now runs on Android We found out 1.5.0 is crashing on startup on Android. 1.5.1 will fix this.\\nUI improvements\\nAdd right-click image to some enemies which were missing images\\nNumber of unemployed people has been added to the senate tooltip and Chief advisor\\nSetting hotkeys for construction of common buildings is now possible\\nSetting a hotkey for quickly selecting the building under cursor for construction\\nChanging trade status (import/export) for resources can now be done from the Empire map\\nSome more in-game messages have a button to the relevant advisor\\nConfiguration options\\nNew option: highlight legion on cursor hover\\nNew option: enable military sidebar\\nNew option: disable right click to drag the map\\nNew command-line option: use --windowed to force the game to start in windowed mode\\nLanguage improvements\\nUse localized filenames for mission saved games. For example, Citizen.sav will now be called B\u00fcrger.sav in the German version of the game\\nUsers running the Korean or Chinese version of the game can now save files using Korean/Chinese characters\\nAdd Italian, Polish and Swedish translations for the configuration screen\\nAdd support for the Simplified Chinese version of the game\\nTweaks to make texts in more verbose languages fit in their dialogs\\nUI/Gameplay fixes\\nFix aqueduct tile turning into gatehouse image on a certain aqueduct configuration\\nFix graphic glitch in road tile caused by plaza\\nFix visual bugs when visual feedback is active\\nFix Religion being shown as Health on chief advisor\\nFix warehouses/granaries getting linked during delete/undo\\nFix combat short and long music being swapped\\nFix population advisor showing the wrong end date for the history graph\\nFix not being able to delete files with non-ascii characters on Windows\\nFix education advisor always saying that people want more libraries\\nFix displayed price for clear land being double the actual amount\\nFix right-clicking the buttons on the sidebar going to the wrong help page\\nFix game speed being way too fast on the higher speed settings on >60Hz monitors\\nFix columns on damage overlay being too tall\\nFix minimap not immediately jumping to the right location when \"go to problem\" button is used\\nFix minimap not immediately updating when placing a building\\nTechnical fixes\\nVita: fix music-related crash/freeze (#474)\\nFix crash/memory corruption on difficulty dialog\\nSlight tweaks to touch support on Vita/Switch\\n\\nv1.4.1\\n\\nImprovements\\nPrice is now shown in localized currency for game languages other than English\\nAdded Russian translation for the configuration screen\\nBugfixes\\nFixed: reservoir range was not displaying properly for orientations other than north\\nFixed: filenames were not displaying properly when using the Chinese version of the game\\nFixed: building ghost flickered after scrolling\\nFixed: aqueduct ghost was showing green on curved roads and plazas\\nFixed: scroll speed calculations were incorrect for monitors not running at 60Hz\\nFixed: the select folder dialog crashed on certain Linux systems\\nFixed: mouse double-click was not working properly\\nFixed: Korean message about missing fonts was not displaying due to missing fonts\\nFixed: escape button was not working in the city when using touch\\n\\nv1.4.0\\n\\nGeneral improvements\\nNew hotkeys:\\nCtrl+O / Ctrl+S for loading and saving games\\nAlt+Enter for toggling full screen\\nNumeric keypad 0-9 for going to the advisors\\nChanged hotkey behavior: Escape now closes dialogs instead of exiting the game\\nConfigurable hotkeys: you can now assign your own keys for the hotkey actions. This means that existing hotkeys may no longer work if you use a non-US keyboard layout. Go to Options -> Configure hotkeys in the game to set them.\\nSupport for language packs. If you have multiple language versions of the game you can easily switch between them.\\nSupport for Korean and Swedish versions of the game\\nConfiguration option screen has been translated to French, German, Korean, Portuguese and Spanish\\nGameplay improvements\\nBuilding a fort no longer triggers a message that the city needs workers\\nRight-click info for fountain and mission post now shows workers\\nTooltip on the religion overlay now shows to which gods the house has access\\nNew config option: fix emperor change events and survival time win criteria - more details\\nUser interface enhancements\\nNew config option: show reservoir, fountain and well range when constructing\\nNew config option: show size when constructing draggable buildings\\nRight-clicking and dragging when in the city will now move the map\\nDouble-click can be used to load files\\nMake certain elements more color blind friendly\\nTweaks to the interface to fit languages with longer texts\\nBugfixes\\nFix graphic artifacts while building draggable reservoirs\\nFix amphitheater right click not playing the corresponding sound file\\nFix walls destroyed by enemies showing \"nowhere\" when right-clicking the rubble\\nFix map not scrolling properly when using certain custom display scales\\nTechnical improvements\\nScreen no longer turns black when resizing the window when a dialog is showing\\nFix bugs when using touch\\nFix missing audio for certain sound driver/OS combinations\\nDisable setting windowed mode on platforms that do not support it\\nBetter support for Wayland in the flatpak image\\nUpgrade SDL to 2.0.12\\nAdd runtime version checks for SDL, allowing the use of older SDL libraries\\n\\nv1.3.1\\n\\nThe file dialog for loading a city or choosing a map can now contain an unlimited number of files. The previous restriction was 200 files\\nMusic starts immediately when loading a city or starting a map\\nConfirmation dialog has been added to the replay map menu option\\nSmooth scrolling works a bit faster to match the original scroll speed\\nBugfixes\\nFixed: building a wall on top of buildings is no longer possible\\nFixed: building a reservoir on top of a reservoir no longer costs money\\nFixed: construction getting stuck when dragging and letting the mouse go over the sidebar\\nFixed: broken scrolling of the map on Vita and Switch\\n\\nv1.3.0\\n\\nhttps://github.com/bvschaik/julius/releases/tag/v1.3.0\\n\\nv1.2.0\\n\\nhttps://github.com/bvschaik/julius/releases/tag/v1.2.0\\n\\nv1.1.0\\n\\nGeneral improvements\\n\\nSupport for non-ascii characters in filenames\\nSupport for non-ascii keyboards for hotkeys and file input\\nTouch support\\n\\nNintendo Switch port\\n\\nShow directory dialog when no valid Caesar 3 installation has been found\\nSave chosen directory to preferences\\nSupport for Russian and Polish versions of the game. Get the required patches here: Russian, Polish.\\nGameplay enhancements\\nFeedback when clearing land: hovering over a building will now highlight the building\\nWindow positioning when coming out of fullscreen is handled more smoothly\\nRight-click info dialog now shows up at cursor instead of at the other side of the screen\\nLong filenames are truncated/ellipsized in the file dialog\\nKeyboard ENTER can be used to confirm yes/no dialogs\\nMouse cursor is restricted to the display the game is playing on in fullscreen mode\\nVideos now play at the volume settings for \"sound effects\", rather than at 100% volume\\nReduced audio lag when clicking buttons\\nPerformance enhancements\\nBetter performance when tooltips are drawn\\nFixed memory leak and crashes when playing videos\\nOptimizations to drawing routines\\n\\nBugfixes\\n\\nFixed: farm not drawing correctly on overlay in certain orientations\\nFixed: earthquake tiles turning into rocks on map rotate\\nFixed: soldiers not acting properly on enormous maps\\nFixed: crash in manual entry for pottery\\nFixed: strange things happening to fires caused by earthquakes\\nFixed: after deleting a bridge the player could not rebuild a bridge on the same location\\nFixed: random weird things caused by reuse of building memory\\nFixed: some scenarios not loading on Linux because of case-sensitivity\\nFixed: arrow keys not scrolling when hovering over buttons\\nFixed: abandoned houses creating vacant lots at the wrong locations\\nFixed: large insula not merging properly in some locations\\nFixed: super-fast mouse clicks were not handled\\nFixed: corrupt screenshots when taking them with hotkey F12\\n\\nv1.02\\n\\nCompile with latest source, should hopefully fix crashes with video playback\\nHold ZR/ZL for slow/fast mouse, useful for precise pointer control with left analog stick\\nImplement direct touch mode where pointer jumps to finger directly (press minus to toggle)\\nv1.01\\n\\nFirst release on Switch", 
            "screens": 0, 
            "extracted": 10102, 
            "version": "1.7.0", 
            "filesize": 3706, 
            "details": "NOTE: This app requires files to be copied over from a legally obtained version of the original game: https://store.steampowered.com/app/517790/Caesar_3/\\n\\nThis is my Switch port of Julius, a Caesar III re-implementation, based on devnoname120's Vita port.\\n\\nJulius is an open source re-implementation of Caesar III.\\n\\nThe aim of this project is to create an open-source version of Caesar 3, with the same logic as the original, but with some UI enhancements, that is able to be played on multiple platforms. The same logic means that the saved games are 100% compatible, and any gameplay bugs present in the original Caesar 3 game will also be present in Julius.\\n\\nJulius requires the original assets (graphics, sounds, etc) from Caesar 3 to run.\\n\\nInstallation Instructions\\nCopy all the files from a Caesar 3 install into the switch/julius folder on you SD card, so that you have the file c3.eng and more in your folder, in addition to julius.nro. Caesar 3 can be purchased from gog.com for example.", 
            "app_dls": 1677, 
            "md5": "7daf6aedc7d53fd29fe7d2405e657203"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/svitch/svitch.nro", 
            "updated": "18/10/2018", 
            "name": "svitch", 
            "license": "none", 
            "title": "svitch", 
            "url": "https://github.com/Slashcash/svitch/releases", 
            "description": "A savefile extractor", 
            "author": "Slashcash", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 1741, 
            "version": "0.1.2-alpha", 
            "filesize": 810, 
            "details": "Svitch is a Nintendo Switch savefile extractor, it just scans your system searching for savefiles and lists them at startup, you can then export them to your sd card into a convenient file format called .svi\\n\\nThe .svi file format\\n\\nAfter a succesful extraction you will find a .svi files into the export folder on your sd card named after the id of the game you extracted, this is nothing more than a glorified archive which contains your savefile and can be opened natively with every archive manager (such as WinZip, WinRar, 7Zip and so on).This archive will also contain a svitch_saveheader.svh file. It is not part of your savefile, it contains human-readable additional informations about the save itself and it will also be used by Svitch to import the save back in the system (as soon as the function will be ready).If you wish to import the .svi files back into your system with the use of a different tool you can easily decompress the archive, scrap away svitch_saveheader.svh and re-import it normally.", 
            "app_dls": 6664, 
            "md5": "a3e1f28ca150e5508745611edeb1915d"
        }, 
        {
            "category": "game", 
            "binary": "/switch/d2x-switch/d2x-switch.nro", 
            "updated": "28/10/2018", 
            "name": "d2x-switch", 
            "license": "none", 
            "title": "dx2-switch", 
            "url": "https://github.com/aagallag/DXX-Switch/releases", 
            "description": "source port of Descent.", 
            "author": "aagallag", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2061, 
            "version": "0.58.6", 
            "filesize": 743, 
            "details": "A Nintendo Switch port of Descent II. This is a fork of DXX-Retro, which is a fork of DXX-Rebirth, which is a fork of the original engine source code created by Parallax Software Corporation.\\n\\nCopy descent2.ham, descent2.hog, descent2.s22, and all *.pig files to switch/d2x-switch directory. These files are included with a purchase of the game. Tested with Descent II from Steam.\\n\\n\\nKnown issues and missing features\\nMultiple save files don't work (currently hardcoded to player.plr)\\nDoesn't support the joysticks\\nNo music\\nOnly tested with the Descent files from Steam; GOG and CD-ROM releases have not been tested\\nDoesn't utilize 1080p resolution when docked\\nNeed an icon\\nResize the text for larger resolutions (Bug only on D1X Switch)\\nEnable the original HUD\\nNetwork/Multiplayer is not enabled\\nLevel Selection menu doesn't work (no way to input a different level)\\n\\nDXX Retro is released under the D1X-Rebirth License ", 
            "app_dls": 1180, 
            "md5": "bc106d3340ff09e98fe7afae6a94736c"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/mame2003.nro", 
            "updated": "16/07/2018", 
            "name": "mame2003", 
            "license": "none listed", 
            "title": "MAME", 
            "url": "https://gbatemp.net/threads/retroarch-switch.492920/", 
            "description": "MAME 2003 Retroarch Core", 
            "author": "Retroarch", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 35788, 
            "version": "beta", 
            "filesize": 8300, 
            "details": "A very beta version of this core , games play from the SD card.\\n\\nnot working :\\n\\nScreen settings\\nAnalog input.", 
            "app_dls": 11905, 
            "md5": "64ef05708f671f4b874c4bcc94dbca53"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/PayloadLauncher/payload_launcher.nro", 
            "updated": "03/06/2019", 
            "name": "Payload-Launcher-Apple", 
            "license": "GPLv2", 
            "title": "Payload-Launcher", 
            "url": "https://github.com/LordApple/Payload-Launcher/releases", 
            "description": "Allows users to reboot into payloads from SD", 
            "author": "LordApple", 
            "changelog": "3.0\\n\\nYou can now press X when hovering over a payload to set it as your favorite payload. And from then on you can press the R button to instantly reboot to your favorite payload", 
            "screens": 0, 
            "extracted": 8196, 
            "version": "3.0", 
            "filesize": 3250, 
            "details": "To make payloads show up in the app, just add your payloads to sdmc:/payloads/ and the app should find them all. Thanks to SciresM For being a lawyer, and creating the reboot to payload code. and XorTroll For taking on too many projects, and creating Plutonium.", 
            "app_dls": 3369, 
            "md5": "bad069da331a2d4a3276badb9873af52"
        }, 
        {
            "category": "game", 
            "binary": "/switch/openttd/openttd.nro", 
            "updated": "12/05/2021", 
            "name": "OpenTTD", 
            "license": "GPLv2", 
            "title": "OpenTTD", 
            "url": "https://github.com/rsn8887/OpenTTD", 
            "description": "Transport Tycoon Deluxe simulator", 
            "author": "rsn8887", 
            "changelog": "1.07\\n\\nre-compile with 12.0.0 support\\n\\n1.06\\n\\nre-compile with 9.0.0 support\\n\\n1.05\\n\\nfix right click drag scrolling\\n\\n1.04\\n\\nre-compile with libnx v2.2.0 to fix potential crashes with firmware 8.0.x\\n\\n1.03\\nI made some control enhancements \\n\\n1.02\\ncompile with lzma and lzo2 compression libraries to allow loading old compressed savegames/scenarios\\nhold ZR / ZL for slow / fast mouse to make it easier to position the pointer with the left stick\\ncorrectly display free disk space in load/save dialogs\\npress minus to switch button mappings between two presets: ZL/ZR = slow/fast mouse, Y/X = zoom, or ZL/ZR = zoom, Y/X = slow/fast mouse\\n\\n1.01\\nmusic is now working\\nimprove smoothness of mouse pointer motion\\nreduce analog joystick deadzone for better mouse pointer control\\nupdate graphics and sound files to latest freeware versions from www.openttd.org\\nenable cursor key map scrolling on USB keyboard\\nenabled mouse wheel zoom\\n\\nv1.0\\n\\nInitial Release", 
            "screens": 0, 
            "extracted": 131552, 
            "version": "1.07", 
            "filesize": 73727, 
            "details": "# About\\nOpenTTD is a transport simulation game based upon the popular game Transport Tycoon Deluxe, written by Chris Sawyer. It attempts to mimic the original game as closely as possible while extending it with new features.\\n\\nOpenTTD is licensed under the GNU General Public License version 2.0, but includes some 3rd party software under different licenses. See the section \"Licensing\" below for details.\\n\\n# Contacting\\nThe easiest way to contact the OpenTTD team is by submitting bug reports or posting comments in our forums. You can also chat with us on IRC (#openttd on irc.oftc.net).\\n\\nThe OpenTTD homepage is https://www.openttd.org.\\n\\nYou can also find the OpenTTD forums at https://www.tt-forums.net.\\n\\nThis is my Switch port of OpenTTD, a re-implementation of Transport Tycoon Deluxe.\\n\\nPort by @rsn8887, based on the Vita port by @angguss. I made some control enhancements and I also enabled sound on the Vita port, too (pull request to @angguss made).\\n\\n# Thanks\\n\\nThanks to the many developers who worked on this game.\\n\\nThanks to @angguss for his excellent Vita port, on which this Switch port is based.\\n\\nThanks to my supporters on Patreon: Andyways, CountDuckula, Greg Gibson, Jesse Harlin, \u00d6zg\u00fcr Karter, Matthew Machnee, and RadicalR.\\n\\n# Installation\\n\\nA public domain graphics set (OpenGFX) is included. If you want the choice to also use original dos game graphics, copy over the files\\n```\\nSAMPLE.CAT\\nTRHCOM.GRF\\nTREND.GRF\\nTRTITLE.GRF\\nTRG1.GRF\\nTRGC.GRF\\nTRGH.GRF\\nTRGI.GRF\\nTRGT.GRF\\n```\\nto `/switch/openttd/baseset/`\\n\\nIf the above files are present, a new option will appear when you go to game settings from the titlescreen. There you can select between the two graphics sets `original dos` and `openGFX`.\\n\\n# Controls\\n\\n- Left analog stick = mouse pointer control\\n- D-Pad or right analog stick = scrolling the map.\\n- A/right trigger = left mouse click\\n- B/left trigger = right mouse click\\n- Y = zoom-in\\n- X = zoom-out\\n- Double click A/right trigger over a text field = bring up on-screen keyboard\\n- The touch screen is used for indirect mouse input, like on a laptop touchpad. Move a single finger to move the mouse pointer. Use short tap for left click. Hold a single finger while tapping a second finger for right click. Drag with two fingers to drag and drop.\\n\\n# Current Limitations\\n\\n- No music (requires midi)\\n- No network support\\n", 
            "app_dls": 5856, 
            "md5": "bffb1c90e1132ee8f6f83998f9ac9ed7"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Brick-Game-9999-in-1/Brick-Game-9999-in-1.nro", 
            "updated": "04/10/2021", 
            "name": "Brick-Game-9999-in-1", 
            "license": "n/a", 
            "title": "Brick Game 9999-in-1", 
            "url": "https://github.com/Chrscool8/Brick-Game-9999-in-1-for-Switch/releases", 
            "description": "Classic Brick Game", 
            "author": "Chrscool8", 
            "changelog": "0.012\\n\\nWhat's new?\\n\\n- Show next tetris piece\\n- Menu animation preview for tetris\\n\\n0.011\\n\\nTetris!\\n-- Has all the basics, collisions based on the official SRS\\n-- If you're a tetris pro, please let me know how to tweak it to be more accurate or fun!\\n\\n0.010\\n\\nHere's what's new:\\n\\n- An interactive menu\\n-- Automatically handles any amount of games\\n-- Has page dots at the bottom\\n-- Retrieves high scores for any game on the list\\n-- Retrieves animated demos from games\\n-- Retrieves control list from games\\n-- Can be returned to from game\\n\\n- Rowfiller (working-title) has a fail state\\n- Fast forward enabled for racecar\\n- New font for titles\\n- Music toggle button (saved between sessions)\\n- Sound effect toggle button (saved between sessions)\\n- Little changes and fixes\\n\\nhttps://www.youtube.com/watch?v=AdAmn59jKMo\\n\\n0.009\\n\\nHold ZL/ZR to go faster!\\n\\n0.007\\n\\nRacecar now has a fail state and is basically fully playable\\nLots of under the hood cleanup\\n\\n0.005\\n\\nAlphabet grid sprites\\nDynamic grid sizes for game remixes\\n\\n0.003\\n\\nStill super early! This is only a few days into development so far!\\n\\nWhat's new:\\n\\nTransition shade between games\\nI'm putting together a BrickGame API like structure so that you, yes, you, can easily make your own brick game to add to this app! Nothing's documented yet and it's sort of barebones, but by looking at \"subgame_menu\" and \"subgame_snake\" you could probably pretty easily understand how you toss together your own single cpp file game. I'll accept pull requests of your additions! Adding new features to it all the time.", 
            "screens": 0, 
            "extracted": 11134, 
            "version": "0.012", 
            "filesize": 5422, 
            "details": "What is it?\\n- Inspired by a request, this native homebrew game aims to revive and remix the classic handheld game often known as \"Brick Game 9999-in-1\" or something similar. It's still quite early into development but it's going well!\\n\\nWhat Games Are Included/In Progress?\\n- The Menu\\n- Tetris\\n- Snake\\n- Racecar\\n- Pong\\n- Rowfiller\\n- Rowsmash\\n- HiOrLo\\n\\nWhat Games Are Planned?\\n- Breakout\\n- Vertical Shooter\\n- And More...!\\n\\nWhat Modes and Features?\\n- Classic Size Game Screen [ 10 x 20 ]\\n- Remix Size Game Screen [ 20 x 20 ]\\n- Rotatable Screen for Standard or Vertical Viewing\\n- Music and Sound Effects\\n- Hold Trigger for Fast\\n- Scores and Highscores", 
            "app_dls": 3077, 
            "md5": "c65925dd47569d84a764a620f2d06e39"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Turnips/Turnips.nro", 
            "updated": "11/01/2023", 
            "name": "Turnips", 
            "license": "n/a", 
            "title": "Turnips", 
            "url": "https://github.com/averne/Turnips/releases", 
            "description": "turnip prices previewer", 
            "author": "averne", 
            "changelog": "1.7.1\\n\\nLatin translation\\n\\n1.7.0\\n\\nTraditional Chinese, Japanese and Ryukyuan translations\\n\\n1.6.19\\n\\nUpdate for 2.0.6\\n\\n1.6.18\\n\\nUpdate for v2.0.5\\n\\n1.6.17\\n\\nUpdate for v2.0.4\\n\\n1.6.16\\n\\nUpdate for v2.0.3\\n\\n1.6.15\\n\\nUpdate for v2.0.2\\n\\n1.6.14\\n\\nUpdate for v2.0.1\\n\\n1.6.13\\n\\nUpdate for v2.0.0\\n\\n1.6.12\\n\\naddresses issue 44 on github.\\n\\n1.6.10\\n\\nUpdate for v1.10.0\\n\\n1.6.9\\n\\nUpdate for v1.9\\n\\n1.6.8\\n\\nUpdate for v1.8.0\\n\\n1.6.7\\n\\nUpdate for v1.7.0\\nAdd Korean translations\\nUpdate for new libnx and imgui\\n\\n1.6.6\\n\\nInclude missing Chinese characters in font atlas\\n\\n1.6.5\\n\\nUpdate Chinese NPC names\\n\\n1.6.4\\n\\nUpdate for v1.5.1\\n\\n1.6.3\\n\\nUpdate for v1.5.0\\n\\n1.6.2\\n\\nUpdate for v1.4.2 (fixes #28)\\n\\n1.6.1\\n\\nv1.4.1 support\\n\\n1.6.0\\n\\nv1.4.0 support\\n\\n1.5.2\\n\\nUpdate for v1.3.1, bump version\\n\\n1.5.1\\n\\nAdds support for Celeste, Wisp and Gullivarr in the visitors tab.\\n\\n1.5.0\\n\\nDisplay upcoming visitors for the week, along with the weather seed\\nReorganized gui into tabs\\nSwitched to a deko3d graphics backend: leaner binary, faster loading times\\n\\n1.4.1\\n\\nUpdate for v1.2.1\\n\\n1.4\\nBump version\\n\\n1.3\\n\\nImplement background drawing\\n\\n1.2\\n\\nUpdate for new 1.2.0 ACNH save type", 
            "screens": 1, 
            "extracted": 1454, 
            "version": "1.7.1", 
            "filesize": 843, 
            "details": "Homebrew turnip prices previewer for Animal Crossing: New Horizons\\n\\nCredits\\n\\nThe NHSE project for save decrypting/parsing.\\nCianuro for the icon.", 
            "app_dls": 34597, 
            "md5": "106fdc08f7b4088e44e6dc03f64c54bf"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Super_Methane_Brothers/smb.nro", 
            "updated": "29/12/2018", 
            "name": "MethaneBros", 
            "license": "GPLv2", 
            "title": "Super Methane Brothers", 
            "url": "https://github.com/carstene1ns/super-methane-brothers", 
            "description": "Super Methane Bros remake", 
            "author": "carstene1ns", 
            "changelog": "No code change, sync with version number on Github", 
            "screens": 0, 
            "extracted": 1873, 
            "version": "release_1", 
            "filesize": 317, 
            "details": "Help the Super Methane Brothers Puff & Blow! Trap baddies in a gas cloud. Suck into your gas gun. Throw against a wall to destroy them.\\n\\nExtra Info : https://gbatemp.net/threads/release-super-methane-brothers.500731/#post-7910398", 
            "app_dls": 2609, 
            "md5": "534dcc3c8cc1c62541260bc3623fcbdb"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/EdiZon/EdiZon.nro", 
            "updated": "29/04/2023", 
            "name": "Edizon", 
            "license": "GPLv2", 
            "title": "EdiZon-SE", 
            "url": "https://github.com/tomvita/EdiZon-SE/releases", 
            "description": "A homebrew save management, editing tool and memory trainer for Horizon", 
            "author": "tomvita / WerWolv", 
            "changelog": "3.8.37\\n\\nVery minor change, fixed LED stop working for HOS16\\nNow player two controller can also control EdiZon\\n\\n3.8.36\\n\\nKey hints is place on the cheat code label, instead of only showing up in Edizon SE now it will show on all cheat managers.\\n\\n3.8.35\\n\\nFixed a pointer chain navigation bug.\\nShow segment and module information in memory explorer.\\nAdd bookmark from cheat now works on pointer that isn't currently valid.\\nAdd bookmark from cheat now supports negative offset.\\nFixed a bug in button display string.\\n\\n3.8.34\\n\\nComparison between number that involve negative number was wrong for anything that isn't 64bit. Now it is fixed for 32bit number. (16 bit and 8 bit number not fixed).\\n\\nFor f32 R now also swap Value1 and Value2 in addition to negating them\\n\\n3.8.29\\n\\nAdded \"DiffBA\" search mode. Use Dpad down on search tab to cycle to this search mode.\\nThis search is used to find unknown value of type u32 or f32 that you can make to change the same amount. Find u32 and f32 candidates that inc or dec with the same amount of change. ( 4 in 1 )\\nStart search with \"SAME\", change the amount, search with \"NotA\", change the amount, search with \"DiffBA\", repeat ( change the amount, search with \"DiffBA\" ) until you have a short list of candidates.\\n\\nFixed a bug with unknown search.\\n\\n3.8.25g\\n\\nThis release is only tested on atmosphere 1.2.4.\\n\\nTo enable gdbstub add the this line to /atmosphere/config/system_settings.ini under [atmosphere]\\nenable_standalone_gdbstub = u8!0x1\\nRestart Switch after the change.\\nThis release will also load dmnt ( CheatVM ) as a sysmodule when GDB is enabled.\\nOnly either dmnt or GDB can be attached to the game at any one time.\\nUse ZL+B to detach dmnt ( and the \"no auto attach\" setting enabled if you are using profile to launch edizon se )\\nDetach GDB from game (method will depend on GDB client) and reattach dmnt with ZL+B to have access to CheatVM again.\\n\\nAdded ASCII display to memory explorer. Added bit mask for single value search.\\n\\nUse dmp0 and allow button swap for jump back. Jump back data will be using dmp0 so it won't overwrite dump file meant for pointer search. If you don't understand what this means don't worry, it has no impact to you.\\n\\nWhen all cheats are deleted edizon se will exit instead of crash.\\n\\n3.8.24\\n\\nWith atmosphere 20 you can press ZL+B to ask dmnt to detach from the game. There very few games that does not work well with dmnt attached but if you happen to be playing those games you can ask dmnt to detach when you are done using it to hack the game. ( Remember to turn off auto attach or the next time edizon se launch dmnt will be attached ).\\n\\nWith atmosphere 20 it is now possible to support dynamic loading of master code. Now when you place a cheat file containing master code in edizon\\cheats it will be loaded correctly when you launch edizon se.\\n\\n3.8.20\\n\\nValue pair search can be activated by pressing + twice on search memory value tab. [ A,B ] indicates that you are in value pair mode.\\nQuite often some values are next to each other, for example HP and HP MAX or MP and MP MAX are very frequently next to each other.\\nIn this mode the two value you enter at this screen will be match with memory locations that has these two value next to each other.\\nLet's say you see your HP as 12/21 you may want to try searching for 12, 21 or 21, 12.\\n\\n3.8.17\\n\\nSysmodule manager will offer to help create system_settings.ini if there isn't one.\\n\\n3.8.16\\n\\nMany users have too many sysmodules running causing system stability problem for them.\\nThis version included sysmodule manager ported from hekate toolbox and extended to list all sysmodules including those without\\ntoolbox.json file, such sysmodule will be named according to the title id and mark as required reboot. You can edit the toolbox.json\\nfile created by EdiZon SE to get a better name and test the sysmodule to see if it really requires reboot.\\n\\nAdded two optional module in the zip. Now Noexs sysmodule and profile forwarder is included (they are disabled by default, use sysmodule manager to enable them).\\n\\nProfile forwarder let you launch edizon se using profile which saves a few seconds from needing to launch hbmenu.\\n\\nNoexs sysmodule let you do dump for PC pointer searching over wifi.\\n\\n3.8.15\\n\\nOpcode bounds check bug fix, mark search bug fix, clear search bug fix.\\n\\n3.8.14\\n\\nFix temporary expert mode enable cause crash when there was no cheats\\n\\n3.8.11\\n\\nChange LED behavior during memory search.\\n\\nSome games are using Alias instead of Heap. Now Alias is indicated in the main display for these games for awareness.\\n\\nAlias is functionally the same as heap for memory search performed by EdiZon SE. However it is a different entity as far as SVC (Nintendo Switch's system calls) is concerned. Currently alias as a memory region is not supported in cheat code type 0, 1 and 5.\\n\\nAdding a memory relative to alias_extend.base as a code (ZL+A on a bookmark without pointer chain) won't work unless you use the attached forked dmnt (for 18.1 only).\\nThis fork added option for Alias to code type 0, 1 and 5.\\nM: Memory region to write to (0 = Main NSO, 1 = Heap, 2 = Alias).\\nChange request to have this in official dmnt is rejected. So use such code for own amusement only.\\n\\nI notice many new games are using alias recently but I have not found memory I want to hack that is static relative to alias_extend.base. At the moment it is just nice to be able to quickly bind memory hack to a key press for testing purpose. Static (relative to main, heap, alias) memory is rare, theoretically I see no reason why static relative to heap should be more common than static relative to alias. I think the need is real just not immediate.\\n\\n3.8.10\\n\\nNow no need to relaunch for new code to take effect. Code updates works immediately.\\n\\nIf you are developing code on a PC you can put your new [buildid].txt in \\switch\\edizon\\cheats for it to be loaded and ready for the game that is currently running.\\n\\nChange in P status display in memory explorer.\\nEach bit in P shows the potential to reach main in x back jump with offset no more than max P range.\\nbit0 9, bit1 8, bit2 7, bit3 6, bit4 5, bit5 4, bit6 3, bit7 2.\\n\\n3.8.09\\n\\nFor easy mode if cheat exist it will not be automatically overwritten when a different one is available in the database. To overwrite existing cheat press + key on the main screen.\\n\\nFixed a bug where cheat code file would be renamed to .old even when there isn't a cheat code available from cheat database when replacing cheat with file from database is enabled\\n\\nChanged the bit ordering of P (See release note of 3.8.08). It is now reversed for better run time efficiency in pointer search.\\n\\n\\n\\n3.8.04\\n\\nNow you can Rstick click on a memory in memory explorer to help setup multi target search for this memory target.\\n\\n3.7.24\\n\\nEasy mode for people who only want to use code created by others.\\nNo more confusing options and complex key combinations. For people who only want to use cheat codes you now have a\\nfull turn key solution from cheat code download to usage. Just enable the codes and enjoy.\\nPS: Do not enable expert option and it will be easy as pie.\\n\\n3.7.21\\n\\nBookmark added with \"+\" create an entry in BMDump.dat. This file will be use for bookmark import for newer version of pointersearcher SE.\\nThis change reduce potential clutter created by imported bookmarks. Having EdiZon SE running no longer block bookmark import.\\n\\nNeed to update pointersearcher SE to 0.5.9\\nNeed to update noexs sysmodule to 152\\n\\n3.7.18\\n\\nAdded short cut to set search mode. Now you can change mode and continue your search faster.\\nAdded option to use range on unknown search. Default. Set option for old behavior.\\nAdded option to freeze game while applet is activated. Not default. Set option to enable.\\nLimit to one search per session. More than one can cause problem, now it is disabled.\\nFix a bug that crash switch when \"Y\" is pressed when icon is blank.\\n\\n3.7.17\\n\\nFor Super Mario\u2122 3D All-Stars when one of the game is running the title id seen by cheat gui is not the same as the one use with game save. This cause the game save to not show up when last played game save is suppose to show up in earlier release.\\n\\nGame with unsupported save type ( for example Animal Crossing\u2122: New Horizons ) will be reported as not found with a different error message. Relaunching will display all game saves instead of staying at the not found screen.\\n\\nProvided option to opt for all game save to be displayed all the time. To enable create /switch/EdiZon/showallsaves.txt.\\n\\nPS: Showing only the save of last game cheat gui saw is intended feature. For user with many game saves showing all game saves makes locating the one being worked on a chore. I understand some user would prefer to see all game save and now you have that option.\\n\\n3.7.16\\n\\nI missed one file directory redirect in the code for unknown value search. This cause unknown value search to stuck if the data directory is not the default one.\\n\\n3.7.15\\n\\nfixed dark theme has no contrast in option screen selection\\n\\n3.7.14\\n\\nAdded clear all bookmark option.\\nImproved search mode help text.\\nImproved button hints.\\nChanged key to add bookmark to code.\\nDisplay search config on main screen.\\nAllow change of type for candidate display.\\n\\n3.7.13\\n\\nUpdate about screen to show latest release info.\\nAdded a button on config screen to go to about screen.\\nChanged config file name to seconfig so there won't be problem with older version\\n\\nsnapshot\\n\\nThis build could be unstable, you may install and use it at your own risk.\\nso 3.0.1 is still included in this release along side the snapshot update.\\n\\n3.0.1\\n\\nEdiZon has a new and beautiful icon by kardch!\\nFixed stack overflow when too many addresses were found\\nRenamed Edit RAM to Cheats\\n\\n3.0.0\\n\\nCheat engine like RAM editor!\\nFreezing of variables in RAM using dmnt:cht. Only works with Atmosph\u00e8re, not with other CFWs!\\nCheat management tool for Atmosph\u00e8re's dmnt:cht. Only works with Atmosph\u00e8re, not with other CFWs!\\nReimplemented the auto updater. This is a breaking change! You need to update to this release manually.\\n    Now updates configs, scripts AND cheats!\\nFixed and greatly improved the uploading of save files. You now get a code you can enter on http://edizon.werwolv.net . Thanks A LOT to @Ac_K for all his help!\\nLots of UI and touch bug fixes\\nFixed building being impossible except your were me\\nAdded progress bars to many long lasting operations\\n\\n2.2.0\\n\\nAdded proper touch scrolling to the main menu and part of the editor\\nAdded tool tips to widgets. Every widget can now have extra information attached to it\\nNavigation in the editor now only uses the joy sticks while modifying values uses the dpad.\\nAdd a way to display a message when loading a config\\nFixed button widgets not setting strArgs and intArgs properly thus being useless\\nFixed crash when trying to upload a batch backup\\nAdded a \"loading editor\" message to prevent EdiZon from looking frozen\\n\\n2.1.0\\n\\nAdded save file upload to https://transfer.sh! Special thanks to @StevenMattera for his server side script :)\\nAdded button widget that executes a function in the script file\\nAdded message boxes when updating EdiZon/configs and uploading a save file to avoid the switch looking locked up.\\nAdded more debug logs to help script creators\\n\\n\\n2.0.1\\n\\nFixed backups not being listed correctly when trying to restore them\\nFixed reversed Editable titles / All titles text in main menu\\nFixed menu scrolling with 10 titles\\n\\n1.7.0\\n\\nRemoved the old account selection and replaced it with the switch's user selection applet!\\nFixed icon rendering on the hbmenu\\nMade some animations prettier and cleaned up the UI a bit\\nFixed cancellation of batch backups still showing the keyboard\\nFixed some applet related memory leaks / corruptions that may have crashed other homebrew when launched afterwards\\nConfig developers: Added a comment widget that can display any text inside the editor\\nSwitched from using L and R to ZL and ZR for batch backups and editable-only titles in the menu\\n\\n1.6.0\\n\\nNaming of backups using the Switch's software keyboard!\\nEditing values by entering the value with the keyboard!\\nNew beautiful icon by @bernv3\\nLess biased SX OS warning message and fix for the false positive on ReiNX2.0\\nNew libnx 2.0.0 rendering code\\nFixed weird menu scrolling bug when less than 10 titles were displayed\\nFixed the laggy menu\\nEasier to understand error messages\\n\\n1.5.1\\n\\nMostly a bug fix release.\\n\\n##Full changelog\\n\\nCompiled with libnx 1.5.0 which fixes timestamps being 31121969_235959 when the switch hasn't been connected to the internet before and the timestamps being in UTC\\nFixed visual glitch when pressing the L button while selecting an account\\nFixed some more of the menu lag\\nPrevented useInstead from creating an infinite loop and freezing EdiZon\\nAdded a warning message for SX OS users since it still causes issues\\nCleaned up the code base and removed some more unnecessary debug prints\\nAdded all the lastest configs and scripts\\n1.5.0\\n\\n\\You can now backup all saves of a single game or the saves of all games and users at once from the title select screen. Thanks to @trueicecold for this feature\\nAdded editable-only mode which hides all games except the ones you can edit using the builtin save editor. Again thanks to @trueicecold for this.\\nAdded scrolling multipliers to the value widgets. Like that you can scroll in steps of 1, 10, 100, 1000 and 10000.\\nAdded a step size setting to the configs that acts as a multiplier for the multipliers.\\nFrom now on ALL configs get shown immediately without the need to approve them first. However, they get overlayed with a big 'BETA' label so you can see that they might not work yet.\\nAdded support for shared fonts. This makes the whole UI a lot prettier and makes the .nro a bit smaller. Thanks to @AnalogMan151\\nUpdated Lua to the latest version 5.3.5\\nCleaned up the entire UI\\nFixed a lot of lag everywhere\\nFixed issues with huge save files causing Lua to fail\\nFixed issue with the latest libnx\\nRefactored and cleaned up a lot of code and got rid of many many memory leaks\\nFixed equations. They should work A LOT better nown\\n1.4.0\\n\\nLua now supports 64 bit numbers\\nFull unsigned and signed 32 bit numbers can now be used as min/max value\\nFixed crash when no save files or games are on the system\\nConfigs can now have different offsets based on what game version is installed\\nFixed value widget increment/decrement acceleration\\nAdded equations which get applied before displaying it or before saving it to the file\\nAdded config file redirection (Useful for games with different titleIDs for different regions)", 
            "screens": 0, 
            "extracted": 18984, 
            "version": "3.8.37", 
            "filesize": 5316, 
            "details": "This fork is based on the foundation of EdiZon 3.1 nightly. The changes made are on the game memory hack aspect.\\n\\nHere are the added features:\\n\\nRange search.\\nCompare with previous value search.\\nBookmark memory location found.\\nSpeed enhancement to make small integer value in first search practicle.\\nBookmark adjust to changing main and heap start address on subsequent launch of the game. Bookmark with pointer chain attached updates memory address dynamically when the chain is able to resolve into a valid memory address.\\nExtract memory address from dmnt cheat code and add it to bookmark for exploration of the memory location.\\nRebase feature to extract potential pointer chain form dmnt cheat code made for previous version of the game.\\nIn app pointer chain search for address on bookmark.\\nExport dump to PC app (forked from pointersearcher 0.4) for more powerful pointer chain search.\\nImport PC app search result for validation and testing.\\nCreate dmnt cheat code from pointer chain found.\\nAbility to detach dmnt from game process.\\nAdding/Removing conditional button to cheat code.\\nPS: Please refer to https://github.com/tomvita/EdiZon-SE/wiki for instructions on how to use the app.\\n\\nTo establish common base for support please start from a clean boot with the latest atmosphere and only Sigpatches needed to run the game and latest releases from https://github.com/tomvita. Please state the url you downloaded from. No extra software unless it is related to the topic underdiscussoin.\\n\\nOriginal functinality of Edizon on game save is available when launched without a game running.\\n\\nMore Info here : https://github.com/tomvita/EdiZon-SE\\n\\n\\n", 
            "app_dls": 385455, 
            "md5": "77515ce733f3b39cd8fd1a19dfed0473"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Homebrew-Details/homebrew_details.nro", 
            "updated": "04/10/2021", 
            "name": "Homebrew-Details", 
            "license": "GPLv3", 
            "title": "Homebrew Details", 
            "url": "https://github.com/Chrscool8/Homebrew-Details/releases", 
            "description": "A Homebrew App Manager", 
            "author": "Chrscool8", 
            "changelog": "1.05\\n\\nNew setting to toggle going to or returning straight from to HB-D from menus or apps!\\n\\n1.04\\n\\nFeature:\\n- Show app icon in app panel\\n\\nTweaks:\\n- Don't check for updates on first run\\n- Avoid potential slooooow black screen opening\\n\\n1.03\\n\\nFeature:\\n- Info module on main screen\\n\\nTweaks:\\n- Battery info notice when info not available\\n\\nCrash Fixes:\\n- Check text encoding before writing to json\\n- Stricter validation of nacp info to avoid crashing or reading garbage\\n\\n1.01\\n\\nFeatures:\\n\\n- New \"What's New\" panel on main screen that shows recent changelogs (like this!)\\n- New Forwarder .nsp installable to your home menu\\n\\nFixes:\\n\\n- Tiny potential problem affecting early 1.0 updates fixed\\n- Fix situation where blacklists may not apply\\n\\nNew Forwarder Overview:\\n\\n- Display versions of HB-D on your card\\n- Choose and run your choice manually\\n- Automatically run your choice without additional input\\n\\n1.0\\n\\nLong time, no see! For the last four months or so I've been rewriting the application almost completely from the ground up. Here's what's new.\\n\\nFeatures:\\n\\n- Scan files more than twice as fast\\n- Cache app lists to json and instantly reload them on next run without having to rescan\\n- Cache app icons for instantly reloading menus\\n- Sort list by categories (name, path, author, size, category)\\n- Sort list ascending or descending\\n- Group sorted lists by category (none, author, category, from appstore)\\n- Groundwork for language localization\\n- Groundwork for multiple view styles (icon grid and icon list coming soon)\\n- Welcome Page and Introduction for first run\\n- Settings is now a categorized json\\n- Pin Favorite apps to the top of the list\\n- Move Settings and Updater into their own panels accessible by list or main screen\\n- Delete folder if deleting app and it's the only thing in the folder\\n- Basically every other aspect rewritten for speed and stability\\n\\nFrameworks:\\n\\n- Updated nlohmann json\\n- Updated libnx\\n- Updated borealis ui\\n- Updated curl\\n\\nv0.95 - 2020/10/12\\n\\n- Added a new setting of what to exit to (between hb-menu and hb-d).\\n\\nv0.94 - 2020/10/08\\n\\n- Added a new multi-forwarder nsp that you can install to your home menu so you can organize the actual hb-d.nro where you'd like as follows:\\nUsing your favorite nsp installer, install the forwarder that is attached to this post or found in this location after running the app once:\\n\\nsdmc:/config/homebrew_details/forwarder/HomebrewDetails_MultiForwarder.nsp\\n\\nIt will check for and launch this application from any of the following locations:\\n\\nsdmc:/switch/homebrew_details.nro\\nsdmc:/switch/homebrew_details/homebrew_details.nro\\nsdmc:/switch/homebrew-details/homebrew_details.nro\\n\\nv0.93 - 2020/09/28\\n\\n- Added a new panel in the settings menu where you can add blacklisted folders (they'll be skipped during search)\\n- Added the ability to pin your favorite apps to the top of the list for easy access\\n\\nv0.91 - 2020/08/13\\n\\n- Added a new notes panel to each app\\n\\nV0.90 - 2020/08/07\\n\\n- Better AppStore app scanning (Should find them all now!)\\n- Protection against moving AppStore apps (Until I make a fancier solution soon)\\n\\nv0.89 - 2020/08/05\\n- Copy App Files\\n- Move App Files\\n- Little Fixes\\n\\nv0.87 - 2020/08/02\\n- Added control stick support to borealis\\n\\nv0.86 - 2020/08/02\\n- Threaded Scanning\\n- Scan Progress Bar\\n\\nv0.85 - 2020/07/30\\n- New native and more efficient folder scanning\\n- More info about available updates\\n- Version, name, description, release date\u200b\\n- New staged Update Wizard\\n- Threaded downloads for updates\\n- Updater progress bar\u200b\\n- Status info in the main page header\\n- Date, time, battery level, charging status\u200b\\n- App Launching 99% reliable (especially when launching HD from a forwarder app for max RAM)\\n- Image assets exported to a folder (/config/homebrew_details/assets/) for theming/customization(?)\\n- Edit/Replace any assets in this folder and see the changes in the program\\n- Delete them and they'll be regenerated to default on next launch\u200b\\n- Lax App Store app scanning setting (if it's missed some apps in the past, this will get more of them)\\n- Better newline support in App Store descriptions (and everywhere)\\n- Some additional setting descriptions\\n- Customizable controls for launching/details so you can choose whichever you'll use more often\\n- Made the whole program much more streamlined and modular\\n- borealis update to be more stable all around\\n- Tons of little fixes\\n- Pin/Favorite Apps to the top of the list (Available now in debug mode)\\n\\nv0.74 - 2020/07/20\\n- Experimental App Launching support! It doesn't work for all apps yet and is still a huge work in progress, but if you wanna try it, you can enable debug mode in the settings. After a restart, you'll have a new option in the app's pop up menu.\\n\\nv0.73 - 2020/07/19\\n- Debug Mode toggle in settings to turn on a bunch of insider-info\\n- Autoscan toggle to make it so you don't have to push to start when launching\\n- The path of the .nro is now shown under the name in general lists\\n- Misc little fixes to protect against crashes\\n- Trello board created where you can see what I'm working on and vote on things you want to be higher priority\\n\\nv0.71 - 2020/07/17\\n- This version (and later) will properly update itself no matter where or what it's called, be it /switch/homebrew_details.nro or /switch/hedgehog/butts.nro\\n\\nv0.70 - 2020/07/17\\n- Now you can update directly from the app on your Switch!\\n\\nv0.65 - 2020/07/16\\n- Add more search options, including scanning the SD root and the full SD card\\n- Added a safe mode so that if the app crashes during a search (for example, when scanning a full SD card would take toooo long and you force close the app) it resets some settings to default so you never get locked out of the app\\n\\nv0.60 - 2020/07/15\\n- New Toolbox menu with atmosphere's Reboot to Payload!\\n\\nv0.50 - 2020/07/14\\n- Fix for app store app counting\\n- New debug panel that shows variable states and some deeper stats I'm soon going to use in the future\\n- Full settings framework for easily saving and loading preferences to file\\n- As such, there's a new settings panel with the first toggleable option, scanning just the /switch/ folder or the /switch/ folder and all subfolders\\n\\nv0.435 - 2020/07/13\\n- Fixed another edge case with the update checker from v0.42\\n\\nv0.43 - 2020/07/13\\n- Possible hotfix for v0.42\\n\\nv0.42 - 2020/07/13\\n- App counts now shown next to category type\\n- Update checker to notify you if there's a new version available (can't auto-update ...yet)\\n- New Manage tab in an entry's menu with Delete function (Note: deleting an app does not remove its entry until a rescan, but the file is gone and you can't delete it twice)\\n- You can now go back to the intro screen to rescan your app folder for changes\\n\\nv0.40 - 2020/07/12\\n- New intro screen to sit between launching and scanning (so you don't have to watch a blank screen while it loads) which also holds framework for a progress screen in the future\\n- Even cleaner fixes for different cases of 0 apps\\n- Version number noted in app\\n- Some small tweaks\\n- General system stability improvements to enhance the user's experience\\n\\nv0.31 - 2020/07/12\\n- Fix for 0 app store app crash in v0.30\\n\\nv0.30 - 2020/07/12\\n- Apps that you've downloaded from the HB App Store are detected and categorized. They also come with a lot more metadata, which is scanned and shown.\\n- Text entries that are too long are automatically clipped and able to be expanded.\\n- A Forwarder NSP that you can install to your home menu for quick access.\\n- Groundwork for launching apps directly from HD.\\n\\nv0.20 - 2020/07/11\\n- Rewrote and optimized huge chunks of the code\\n- Better sorting when dealing with capitalization\\n- Full source now available on Github\\n- Tweaks and placeholders to prepare for upcoming features", 
            "screens": 2, 
            "extracted": 26233, 
            "version": "1.05", 
            "filesize": 20075, 
            "details": "What is it? \\nThis is an app that allows you to view details about, launch, categorize, and manage all the .nro files on your Switch using borealis for a native-feeling UI. It also includes a toolbox of handy quick actions like rebooting to a payload. It is nearly a feature-complete replacement/alternative for the official hbmenu.\\n\\nWhat's the current feature-set?\\n- Launch Apps\\n- Scan your SD card for homebrew programs (.nros)\\n- View details about your apps\\n- Sort the files into AppStore-acquired and local app categories\\n- Rename, Copy, Move, Delete an app's files\\n- Reboot to a payload\\n- Check online for and download HD updates\\n- Themeable image assets\\n- Status info in the main page header (Date, time, battery level, charging status)\\n- Customizable Controls\\n- Use an installable forwarder nsp to access directly from the home menu\\n- Pin/Favorite Apps to the top of the list (Available now in debug mode)\\n\\nWhat will it be? \\nHopefully, an all-around manager for all your apps. Some people have already expressed that they'd like it to be a full hbmenu replacement. With app launching, it's just about there already. Coming soon is blacklisting folders in the scan, checking for and updating app store apps, and more.\\n\\nWhy does it exist? \\nTwo main reasons: I've contributed some code to the official hbmenu, but I wanted to try making something totally original for practice working with Switch dev tools. Also, I wanted a new and modern way to do the above current and future features, but there wasn't really a centralized app with a pretty GUI that accomplished all of that.", 
            "app_dls": 29878, 
            "md5": "abd88c9f9c6032e941c55811200d9022"
        }, 
        {
            "category": "concept", 
            "binary": "/switch/test_hexdump.nro", 
            "updated": "12/09/2018", 
            "name": "libtransistor-examples", 
            "license": "ISC License", 
            "title": "libtransistor-examples", 
            "url": "https://github.com/reswitched/libtransistor", 
            "description": "Test NROs for libtransistor", 
            "author": "ReSwitched", 
            "changelog": "2.1.1\\n\\nAdditions\\n\\nAdded trn_recursive_mutex_interrupt_lock\\nVarious SVC bindings\\n\\nChanges\\n\\ntrn_result_to_errno now uses trn_lookup_result\\nKDebug inherits from KWaitable\\n\\nBugfixes\\n\\nWaiter deadlocks/delays\\nLifetime bug in C++ Waiter bindings\\n\\n2.1.0\\n\\nTo many to list see : https://github.com/reswitched/libtransistor/releases", 
            "screens": 0, 
            "extracted": 14263, 
            "version": "2.1.1", 
            "filesize": 6304, 
            "details": "This pack contains a series of test programs from ReSwitched.\\nHit the source button to find the source code and usage instructions and more info.", 
            "app_dls": 3631, 
            "md5": "1046d20dab9fa37196f30ba94b6cecfc"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/switch-remote-play/switch-remote-play.nro", 
            "updated": "29/11/2021", 
            "name": "switch-remote-play", 
            "license": "GPLv3", 
            "title": "switch-remote-play", 
            "url": "https://github.com/Moehammered/switch-remote-play/releases", 
            "description": "Let the switch remotely play PC games", 
            "author": "Moehammered", 
            "changelog": "1.0.0\\n\\nhttps://github.com/Moehammered/switch-remote-play/releases/tag/v1.0.0\\n\\n0.9.0-pc-audio-patch\\n\\nPC Host Application Changes\\n\\n0.9.0\\n\\nhttps://github.com/Moehammered/switch-remote-play/releases/tag/0.9.0\\n\\n0.8.3\\n\\nConfiguration Options\\nBroadcast Address added as a configuration option. The PC application will display the broadcast address to be added to the switch application's config file. Adding it will allow automatic network discovery to work when pressing the 'L' button.\\nWithout this option being specified it will default to 192.168.0.255. If you do not specify your broadcast address in the config file then you will have to use Manual IP Mode.\\nManual IP Mode Enabled option is now stored in the config file. This will allow users to now be able to just press 'R' once the application opens to connect without having to go to the manual IP mode screen and press 'enabled'.\\nThis release is a stepping stone towards more diagnostic info. I had other plans for this release but I had a fair few issues reported, with the controller issue being very high priority.\\n\\n\\n\\n0.8.1-mac\\n\\nhttps://github.com/Moehammered/switch-remote-play/releases/tag/v0.8.1-Mac", 
            "screens": 0, 
            "extracted": 19932, 
            "version": "1.0.0", 
            "filesize": 9168, 
            "details": "Let the switch remotely play PC games (similar to steam link or remote play)\\n\\nFor instructions, please see the instructions folder in the repo.\\n\\nThis project is inspired by the github project In-Home-Switching and SkyNX. The goal is to make a convenient streamer/client application to be used to remote play PC games on the switch.\\n\\nIn-Home-Switching and SkyNX already offer the ability to do so, however there were some convenience features missing that I wanted to add. I also recently was studying multi-threading and when I saw the code, I thought 'this is the perfect chance to try writing it in C++'.\\n\\nNote\\nThe video stream is CPU dependent as at the moment it uses the ffmpeg option of hwaccel auto which usually results in ffmpeg picking CPU for the screen capture process. In my initial prototyping phase I found choosing the AMD GPU option for ffmpeg led to inconsistent stream results. I will look at making the hwaccel option configurable in the future but for now just keep in mind CPU is important.\\n\\nIf you're playing a game that is CPU intensive then there's a high chance the stream will have skips or hiccups. If your CPU is weak, then it'll be hard for it to produce and push the frames quick enough.\\n\\nFor my PC, when I play Nier Automata there are no hiccups and I can get near 60 fps depending on the stream settings (1280 x 720 desktop res, and 5mb/s bitrate). But when I tried playing RE3 2020 at 30 or 56fps I was getting hiccups and skips. So please keep this in mind.\\n\\nFeatures\\n No system crashing when going to sleep (stream will disconnect though and application is closeable)\\n Desktop application to host remote connection stream\\n Stream input from the switch to remote connection\\n Stream audio from remote connection to the switch\\n Automatically connect switch and PC stream applications\\n Automatically mute PC when audio is streaming to the Switch\\n Allow manual configuration of switch to PC connection\\n Configure stream settings from switch\\n Disconnect / Reconnect stream at will\\n Toggle Input Mode to Mouse\\n Toggle Input Mode to DS4(PS4) controller\\n Toggle Input Mode to Xbox controller\\nSwitch-Project\\nThis project consists of an application written for the switch that will decode stream data received from FFMPEG and send its input to an application to emulate a controller. The rendering is done with SDL2 and the project is written in C++.\\n\\nTested on:\\n\\nAtmosphere 0.14.1 - FW 10.1.0 (switch-remote-play 0.7.2)\\nAtmosphere 0.16.2 - FW 10.1.0 (switch-remote-play 0.7.2)\\nWindows-Project\\nThis project consists of an application written for Windows that will launch an FFMPEG stream to encode and send data. The application, after launching the FFMPEG stream, will then listen to receive input data and emulate a controller via the ViGEm Client SDK. The ViGEm Client SDK expects the ViGEm Bus Kernel Driver to be installed on the machine in order to work. For more info on the kernel driver code see the ViGEmBus github page. For the driver installation, see the ViGEmBus Releases page.\\n\\nThe Windows project is also written in C++ and uses Winsock to do socket communication with the switch application.\\n\\nTested on:\\n\\nWindows 10 64 bit\\nRyzen 5 2600 3.4GHz\\nAMD Radeon RX 5600 XT 6GB\\n16GB RAM\\nKnown Issues\\nStream Performance\\nThe stream performance is heavily dependent on network connectivity and your PC CPU performance. Configuration settings will need to be played with the find what works well with your network + PC environment.\\n\\nI recommend playing with the 'Encoder Preset' and 'Quality Control Factor' values while keeping bitrate at 8192 or less.\\n\\nGeneral tips\\nPreset value controls how the encoder should work: ultrafast means the encoder performs to get the image out as fast as possible ignoring quality, and veryslow means the encoder can take its time to preserve image quality.\\nCodec value can help performance however I have tested both the AMF and standard h264 and don't notice much of a difference.\\nQuality control factor is what controls how good the image should be. The lower the value the harder your PC must work to maintain quality. (this value and 'Preset' are what will dictate your CPU's workload)\\nFor more info see the ffmpeg documentation.\\nConfig examples\\nGreat image quality config:\\nPreset - veryslow\\nQuality control factor - less than 10 (0 = perfect image)\\nBitrate - around 5000 - 8000\\nVsync Mode - variable frame rate\\nLatency oriented config:\\nPreset - ultrafast\\nQuality control factor - 20+\\nBitrate - around 5000\\nVsync Mode - variable frame rate\\nI haven't tested all configuration combinations (and these are dependent on my PC specs), so if you find one that works great please feel free to send it to me with your PC specs and network environment configuration :)\\n\\nRare crash when opening some homebrew apps\\nThe crash issue in v0.7.2 has been found and patched. (it was due to the network discovery feature not being shutdown correctly) The app still crashes however it is harder to reproduce now and I haven't found a proper 100% way to reproduce the crash yet. The current crashing issue is rare and only crashes hbloader/hbmenu when opening an app after streaming for a certain while. I can't reproduce it but it's gone for now. If anyone figures out how to reproduce the crash, please let me know.", 
            "app_dls": 40745, 
            "md5": "5f68e7ae8f3850c1982ff49c4739a4f3"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/VBA_NEXT/vba-next.nro", 
            "updated": "20/07/2018", 
            "name": "VBA_NEXT", 
            "license": ".", 
            "title": "vba-next-switch", 
            "url": "https://github.com/RSDuck/vba-next-switch", 
            "description": "VBA Next Emulator", 
            "author": "RSDuck", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2538, 
            "version": "0.7", 
            "filesize": 993, 
            "details": "A VBA-M port for Nintendo Switch. It's based of the libretro port(the actual emulator) and 3DSGBA(the GUI, although heavily refactored).\\n\\nAfter porting 3DSGBA(which often crashed probably because of a huge amount of memory leaks), I tried porting mGBA which ran not so well. That's why I decided to experiment with a lighter less accurate emulator, which lead to this port.\\n\\nNeeds libnx and devkitPro to build. Just run make.\\n\\nFeatures\\nQuite high compability(haven't tried many games)\\nSave games and save states\\nFrameskip\\n\\nCurrent Version Updates\\n\\nComplete UI overhaul. Now it looks almost native!\\nSetting to offset the real time clock", 
            "app_dls": 30447, 
            "md5": "747cfa8e97d0592f77efa420d6babb23"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/kEx/kEx.nro", 
            "updated": "31/07/2018", 
            "name": "kEx", 
            "license": "GPL 3.0", 
            "title": "kEx", 
            "url": "https://github.com/klockee/kEx/releases", 
            "description": "A full-system filebrowser", 
            "author": "klockee", 
            "changelog": "v0.0.3\\nAdded file deletion.\\n\\nv0.04\\nAdded text wrapping and button repetition!", 
            "screens": 0, 
            "extracted": 786, 
            "version": "0.04", 
            "filesize": 290, 
            "details": "Use the A button to enter a partition/directory, B button to go back, and + to exit.\\n\\nPress X to copy a file, and Y to paste the file either to the SD card, or the same partition (does not currently work across system partitions). There is currently no indicator during a copy, only after, so give large files some time to copy.\\n\\nPress - to delete a file (press the A button to confirm deletion, any other button to cancel).\\n\\nNOTE: This can be dangerous, use at your own risk!", 
            "app_dls": 936, 
            "md5": "fa0aa9add3bfef3de2267d95b5f36bb4"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Fireplace-Nx.nro", 
            "updated": "29/12/2018", 
            "name": "FireplaceNX", 
            "license": "n/a", 
            "title": "Fireplace-NX", 
            "url": "https://github.com/Marice/Fireplace-NX/releases/", 
            "description": "A lovely pixelated retro fireplace simulator", 
            "author": "marice", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 1361, 
            "version": "0.1", 
            "filesize": 486, 
            "details": "This project should be helpful to anyone trying to learn SDL2 on Nintendo Switch in c++.\\n\\nPRESS PLUS TO RETURN TO HBMENU.\\n- Ported to Nintendo Switch from: https://www.hanshq.net/fire.html\\n\\nSource:\\nhttps://github.com/Marice/Fireplace-NX", 
            "app_dls": 2445, 
            "md5": "a9487385bfc76e7bf60f53fee584f07c"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/AXChip8/AXChip8.nro", 
            "updated": "05/03/2020", 
            "name": "AXChip8", 
            "license": "n/a", 
            "title": "AXChip8", 
            "url": "https://github.com/darkxex/AXChip8/releases", 
            "description": "Chip 8 emulator", 
            "author": "darkxex", 
            "changelog": "n/a", 
            "screens": 1, 
            "extracted": 9294, 
            "version": "1.0", 
            "filesize": 3843, 
            "details": "Simple Chip 8 emulator for Nintendo Switch", 
            "app_dls": 387, 
            "md5": "b4e9e6132d05e0f724b23e0446a24b39"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/AmiigoMod/Amiigo.nro", 
            "updated": "14/06/2023", 
            "name": "AmiigoMod", 
            "license": "n/a", 
            "title": "AmiigoMod", 
            "url": "https://github.com/StarDustCFW/Amiigo/releases", 
            "description": "GUI for Emuiibo", 
            "author": "StarDustCFW", 
            "changelog": "1.7.0\\n\\nresize png to preview in emuiibo overlay\\n\\n1.6.8\\n\\nNow Duplicated Names can be build in the same folder this is a bug that affect amiibos with the exact name fixed\\nAdded a Scroll bar for all menus\\nFigures are now at the top of the list and cards later\\nNow the default folder for cache and settings is /switch/Amiigo/ the old API and the cache images will be moved automatically\\nRemember you can use the minus key to switch between series and build an amiibo in a folder\\n\\n1.6.5\\n\\nPreView in Amiibo Maker\\nCategories to Amiibo Maker\\ncan build for category\\n\\n1.6.4\\n\\nbetter img loading and scaling\\ncreation can be done now by Series folder press - to swap. ej /Splatoon/Marie\\nFolder has now his own icon\\nGeneral bug fix", 
            "screens": 4, 
            "extracted": 12290, 
            "version": "1.7.0", 
            "filesize": 5574, 
            "details": "A GUI for Emuiibo. The Emuiibo sysmodule is required in order to use Amiigo.\\n\\nControls\\nUp / Down on D-pad to move up and down the list.\\n\\nA to select a Amiibo from the list.\\n\\nX toggles emulation state.\\n\\nY moves on to the next Amiibo.\\n\\nB backs out of the Amiibo series if one is selected in Amiibo Maker.\\n\\nLeft stick pressed down (like a button) delete an Amiibo\\n\\nLeft or Right on the D-pad will change which menu is currently selected (used for swapping between the Amiibo list and Amiigo Maker).\\n\\nYou can also use the touch screen to select an Amiibo by tapping on a item in the list, tapping the emulation status rectangle will toggle the emulation state, and tapping the currently selected Amiibo on the top rectangle will move on to the next Amiibo. Tapping on the right hand list options will change the menu or exit from the app.", 
            "app_dls": 30696, 
            "md5": "2e68c1df1bd9c89ae0c341a0ab4ab92b"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/libretro_genesisgx.nro", 
            "updated": "16/07/2018", 
            "name": "genesisgx", 
            "license": "none listed", 
            "title": "Genesis Plus GX", 
            "url": "https://gbatemp.net/threads/retroarch-switch.492920/", 
            "description": "A SEGA Retroarch Core", 
            "author": "Retroarch", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 7475, 
            "version": "very beta", 
            "filesize": 1404, 
            "details": "A very beta version of this core , games play from the SD card.\\n\\nScreen settings\\nGame Saves\\nButton Config\\nAnalog input.", 
            "app_dls": 13746, 
            "md5": "4fb6b737044ec8b3539caf58a543dcb1"
        }, 
        {
            "category": "game", 
            "binary": "/switch/ssam_tse/ssam_tse.nro", 
            "updated": "04/01/2020", 
            "name": "Serious-Engine-TSE", 
            "license": "GPLv2", 
            "title": "Serious-Engine The Second Encounter", 
            "url": "https://github.com/fgsfdsfgs/Serious-Engine/releases", 
            "description": "Switch port of icculus' fork of Serious Engine", 
            "author": "fgsfdsfgs", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 146617, 
            "version": "nx1", 
            "filesize": 118539, 
            "details": "Serious Sam Engine including The second encounter DEMO.\\n\\nWARNING: This port is very janky. Play at your own risk.\\n\\nKnown issues\\nThe game takes a long time to load.\\nPerformance is quite bad, especially on some levels, which seems to mostly be caused by dynamic lights.\\nThe stock demos desync. I'm not sure if this is because this is technically version 1.10 and those are from 1.07, or because of something I did.\\nBecause this is version 1.10 and most PC servers run 1.07, you can't connect to them. Not sure if I can just change the version number to 1.07, since that might cause desync if there are any significant differences.\\nLow framerate/broken timing in menus.\\nYou can't control the NETRICSA menus (except for quitting them with the PLUS button).\\nNotes\\nThis probably requires full RAM access, so don't run it from the Album.\\nIf the game hangs at the first NETRICSA screen, that means it's still loading, wait a few seconds.\\nI have enabled the \"Precache shadowmaps\" option by default, which results in less lag in game, but significantly increases load times. If you don't want that, you can disable it in \"Advanced options\" -> \"Rendering options\".\\nYou can turn dynamic lights off for a performance increase by setting shd_iAllowDynamic in Scripts/PersistentSymbols.ini to 0, but beware: dynamic lights are an integral part of some levels.\\nYou can bring up the console by pressing MINUS. Press A to enter commands.\\nPlay around with the Scripts/PersistentSymbols.ini file and Advanced rendering settings. I still haven't figured out the optimal configuration.\\nIf the game crashes, take a look at the log file in the game folder (ssam_tfe/ssam_tfe.log or ssam_tse/ssam_tse.log).", 
            "app_dls": 2080, 
            "md5": "ca5dd8f4d31b368d69c845ffb7b8b2a4"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/ReverseNX_Tool/ReverseNX-Tool.nro", 
            "updated": "02/11/2024", 
            "name": "ReverseNX_Tool", 
            "license": "GPLv3", 
            "title": "ReverseNX-Tool", 
            "url": "https://github.com/masagrator/ReverseNX-Tool/releases", 
            "description": "Tool for easier management of ReverseNX flags", 
            "author": "masagrator", 
            "changelog": "3.2.0\\n\\nAdd support for making 32-bit patches\\nRequires SaltyNX 1.0.0 for 32-bit patches to work properly\\n\\n3.1.3\\n\\nAdd support for patching nn::oe::GetDefaultDisplayResolution (it fixes compability issues with Red Dead Redemption)\\n\\n3.1.2\\n\\nAdd memory overflow safety for Applet mode (in case of too much games detected it will ignore showing icons).\\n\\n3.0.0\\n\\nChanged interface from console to Borealis framework\\n\\nThis should help people who had issues when they had too many games installed.\\n\\n2.0.0\\n\\nCompletely revamped ReverseNX-Tool which makes ReverseNX plugin obsolete.\\n\\nYou need to update SaltyNX to >=0.3.0a and delete ReverseNX.elf from SaltySD/plugins folder\\n\\nNow tool lists all installed games and make it possible to manage modes for each game (more in readme)\\nThanks to this new approach all 64-bit games that were crashing before now shouldn't with ReverseNX. More about changes in SaltyNX in respective repo.\\n\\nFunctions, that you could find in SaltyNX-Tool, are now deleted.\\n\\n1.3.8\\n\\n\\nAdd option to disable log writing by SaltyNX >=0.2.0a\\n\\n1.37\\n\\nNow ReverseNX-Tool checks if it's in Applet Mode.\\n\\n1.36\\n\\nDeleted disabling cheats in Atmosphere, it's obsolete with SaltyNX 0.1.2a.\\n\\n1.35\\n\\nSolves compability issues with SaltyNX-Tool and NX-FPS plugin used in System Monitor Overlay\\n\\n1.34\\n\\nAdded function that checks what CFW is used, so it won't show option for disabling cheats in SX OS and ReinX.\\n\\n1.33\\n\\nIt fixes issues from 1.32 and adds check for flag in titleid mode when game is running.\\nFor proper working it requires ReverseNX 0.34, otherwise you will see RSoD all the time.\\n\\n1.31\\n\\nAdded support for Atmosphere 0.10.1+\\nNo new features added.\\n\\n1.3\\n\\nAdded function for disabling loading cheats. This prevents from crashing OS at game boot. After loading game you can enable cheats and use them with Edizon or Checkpoint. It works only with Atmosphere.\\n\\nIt's still compatible with ReverseNX 0.33.", 
            "screens": 2, 
            "extracted": 7884, 
            "version": "3.2.0", 
            "filesize": 2766, 
            "details": "ReverseNX-Tool is a tool that takes advantage of SaltyNX patches function and manages creating ReverseNX patches.\\n\\nInstalled SaltyNX is obligatory.\\n\\n----\\n\\nThanks to:\\nAll Borealis contributors https://github.com/natinusala/borealis\\n\\nSun-Research-University\\n\\nhttps://github.com/Sun-Research-University", 
            "app_dls": 25052, 
            "md5": "198a0728883f63d70cffdbfeb411bc68"
        }, 
        {
            "category": "game", 
            "binary": "/switch/xash3d-gearbox.nro", 
            "updated": "16/09/2019", 
            "name": "xash3d-switch_Opposing_Force", 
            "license": "GPLv3", 
            "title": "xash3d-switch Opposing Force", 
            "url": "https://github.com/switchports/xash3d-switch/releases", 
            "description": "Xash3D FWGS Engine", 
            "author": "Datamats", 
            "changelog": "v1.0.1\\n\\nUpdate libnx so hid will work on 9.0.0+\\n\\nv1.0.0\\n\\nnwindow is used now instead of the deprecated gfx api\\nthe touchscreen should work now\\nmoved over to filesystem times for savefiles thanks to libnx\\nimplemented the console and various UI requiring text input using swkbd\\nadded options for overclocking, for the really care cases where you might benefit from it\\nmade cl_showfps default to 0 (you can always change it using the console)\\na dmc sdk branch has been ported and is available, additionally a decay port has been added that needs more testing\\n\\nv0.4.0\\n\\nAll the nro's have been renamed to ease the process of adding new games and making it easier to port new dlls, please delete all the half-life-*.nro's\\nThe game switching implementation should be a lot more flexible now and you should be able to keep the nro's where you want as long as you keep them together\\nMods should now work as expected as long as they do not contain custom entities / weapons or other specialized code put in a dll file\\nOpposing force should be fixed\\nVarious fixes and improvements to stability\\n\\nv0.3.0\\n\\nBlue Shift / Opposing Force builds has been ported and added to the build system\\nThe Custom Game menu should not crash anymore, but it will only work if all the nro's are in the /switch directory and are not renamed.\\n\\nv0.2.1\\n\\nThere should be no more crashes after quitting from the menu back to the hbmenu\\n\\nv0.2.0\\n\\nThe timestamp of saves are now saved into a own file as a temporarily workaround until libnx gains timestamps. (Now you will go back to the last autosave when you die instead of having to start over)\\nIncreased the buffer for file copies, this makes saving in some cases multiple times faster\\nFixed the screenshots for saves being broken due to the dynamic resolution system\\nMore work trying to fix crashes (hbmenu will still crash when you quit from the mainui, this is being worked on)\\nAdded a working icon", 
            "screens": 0, 
            "extracted": 15517, 
            "version": "1.0.1", 
            "filesize": 6010, 
            "details": "Xash3D Engine is a custom Gold Source engine rewritten from scratch. Xash3D is compatible with many of the Gold Source games and mods and should be able to run almost any existing singleplayer Half-Life mod without a hitch. The multiplayer part is not yet completed, multiplayer mods should work just fine, but bear in mind that some features may not work at all or work not exactly the way they do in Gold Source Engine.\\n\\nXash3D FWGS is a fork of Xash3D Engine, which aims on crossplatform and compatibility with original Xash3D and Gold Source.\\n\\n\\nThis packages already includes the extras.pak files from https://github.com/FWGS/xash-extras/releases in your valve directory ,\\n\\nGet a copy of half life that contains the 'valve' folder. and add to the valvev folder already within your appstore download.\\n\\nXash3D should now launch, it will take a couple seconds to load the assets needed for displaying the menu and you should be able to play!\\n\\nand problems please use the appstore feedback form, thanks..", 
            "app_dls": 2561, 
            "md5": "c3073e5b3d0c63da8717abd78f23e263"
        }, 
        {
            "category": "advanced", 
            "binary": "/switch/sys-con.nro", 
            "updated": "02/11/2024", 
            "name": "syscon1x2024", 
            "license": "GPLv3", 
            "title": "sys-con 1.x (2024)", 
            "url": "https://github.com/o0Zz/sys-con", 
            "description": "Support for XBOX/PS/PC controllers", 
            "author": "o0Zz", 
            "changelog": "1.4.3\\n\\nFix XBOXOne guide button don't works (Regression from v1.4.0)\\nAdd support for 8BitDo Ultimate 2C (XBOXOne controller)\\nFixed issue with HID controllers who doesn't have a Joystick/gamepad profile in first position.\\n\\n1.4.1\\n\\nChangelog\\nFixed XBOX360 Wireless support (Regression introduced in v1.4.0)\\n\\n1.4.0\\n\\nChangelog\\nAdded a way to map \"Slider\" and \"Dial\" (Useful for some controller that need slider on right stick)\\nFixed incorrect HID data interpretation when HID report descriptor contains negative values\\nChange analog mapping to be able to map everything on anything \u26a0\ufe0f Breaking change \u26a0\ufe0f\\nFixed Switch controller pro via USB don't works everytimes (Fixed v1.3.0)\\nAdd mapping for T.Flight Hotas X - PS3 Mode for ACE combat 7 Deluxe. Thanks to @kfkboys\\nBreaking change details\\nThe config.ini has been changed.\\n\\nleft_stick_x=X\\nleft_stick_y=Y\\nright_stick_x=Z\\nright_stick_y=Rz\\nHas been replaced by\\n\\nlstick_left=-X\\nlstick_right=+X\\nlstick_up=+Y\\nlstick_down=-Y\\nrstick_left=-Z\\nrstick_right=+Z\\nrstick_up=+Rz\\nrstick_down=-Rz\\nIf you have a custom configuration that use these entries, you will have to update them.\\nIf you shared your configuration and your controller is already in this repository, then everything has been updated for you.\\n\\n1.3.0\\n\\nChangelog\\nFixed crash when xbox controllers don't provide output endpoint.\\nFixed HID controller (with multiple interfaces) not properly working\\nAdded a way to bind one button to multiple controller buttons More details\\nAdded support for official switch controller USB (Switch pro controller, ...)\\nAdded multiple mappings\\nConfiguration\\nsys-con uses a config.ini for button mapping, it's recommended to use the latest config.ini directly from the repository, which is the latest version. We do not release a new version of sys-con every time a contributor provides a new button mapping, but we do include them in the main branch systematically. Feel free to share your mapping, if you make one, in this thread", 
            "screens": 0, 
            "extracted": 1069, 
            "version": "1.4.3", 
            "filesize": 455, 
            "details": "Connect any USB controller to your Nintendo Switch.\\n\\nSys-con v1.x is a Nintendo Switch module that adds support for all HID and XID joysticks and gamepads to the Nintendo Switch.\\n\\nSupport all USB controllers: PC controllers, Wheels, Dualshock 3, Dualshock 4, Dualsense (PS5), XBOX, XBOX360, XBOXONE, ...", 
            "app_dls": 2699, 
            "md5": "113008203240d2ebed2efea90a711e42"
        }, 
        {
            "category": "_misc", 
            "binary": "/switch/DokkaebiHack/DokkaebiHack.nro", 
            "updated": "13/07/2020", 
            "name": "DokkaebiHack", 
            "license": "GPLv2", 
            "title": "Dokkaebi Hack", 
            "url": "https://git.nicholemattera.com/NicholeMattera/Dokkaebi-Hack", 
            "description": "A POC animation", 
            "author": "NicholeMattera", 
            "changelog": "v2.0.0\\n\\nNot exactly sure why I'm updating this, however I did...\\n\\nAll new code. (Preview of whats to come for Kosmos Updater 4.0 code-wise)\\nRuns smoother.\\nBackground on the very bottom and very right are now filled in.", 
            "screens": 0, 
            "extracted": 7983, 
            "version": "2.0.0", 
            "filesize": 3217, 
            "details": "Animated Demo using SDL on the Switch.\\n\\nInitial Release. There is no vibration and you can press 'A' to quit.", 
            "app_dls": 2828, 
            "md5": "c0319c7e7e5db9fee6e6d80cc70885f1"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "17/03/2023", 
            "name": "DNS-MITM_Manager", 
            "license": "GPLv2", 
            "title": "DNS-MITM_Manager", 
            "url": "https://github.com/znxDomain/DNS-MITM_Manager/releases", 
            "description": "Tesla overlay to manage hosts files", 
            "author": "znxDomain", 
            "changelog": "0.2.0\\n\\nThis release fixes a bug with the reload not functioning right and adds support for HOS 16.0.0.\\n\\n0.1.0\\n\\nInitial Release", 
            "screens": 0, 
            "extracted": 892, 
            "version": "0.2.0", 
            "filesize": 319, 
            "details": "A Tesla Overlay to request atmosphere to reload the hosts file, and to toggle on/off hosts file entries. It will read all files in the /atmosphere/hosts/ directory.\\n\\nAll lines starting with # are treated as section Headers.\\n\\nIf the line starts with a digit, it is expected to be an IP address and toggleable.\\n\\nToggling is performed by prepending or removing a ;.\\n\\nAll other lines are simply ignored.\\n\\nHosts files are reloaded in DNS MITM each time the overlay is hidden.\\n\\n", 
            "app_dls": 3709, 
            "md5": "3294a3173e928f2f5a9dca3fe8e91cb8"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/botwsaveeditor/BOTW-Save-Editor-GUI.nro", 
            "updated": "26/02/2023", 
            "name": "botwsaveeditor", 
            "license": "GPLv3", 
            "title": "BOTW Save Editor GUI", 
            "url": "https://github.com/Jpe230/BOTW-Save-Editor-GUI/releases", 
            "description": "A BOTW savegame editor", 
            "author": "Jpe230", 
            "changelog": "Switched from the non GUI to the GUI version by the same DEV\\n\\nuntagged-d3311465bd147285773c\\nV0.3\\n\\n-Added controls descriptions\\n-Shortened Weapons names to fit\\n-Automated Master Mode detection\\n-Fixed compile erros", 
            "screens": 0, 
            "extracted": 3590, 
            "version": "untagged-d3311465bd147285773c", 
            "filesize": 1769, 
            "details": "I made this simple Homebrew app to edit your rupees, weapon durability and arrow quantity.\\n\\nIt is still a WIP, I've got much to improve.\\n\\nInstructions:\\n\\nOpen BOTW with your current user. Wait until the title screen, then exit it. (Close the game, too);\\nOpen the Save Editor and select save file slot. (Usually it is 5 or 0).\\nUse DPAD UP/Down to Increase/Decrease the integer. Use DPAD Left/Right to move the cursor.\\nUse L/R to move between items.\\nPress A to Commit Changes.\\nPress + to exit.", 
            "app_dls": 40370, 
            "md5": "ce63bf0f94c2c8f6f08992a9f6d189a2"
        }, 
        {
            "category": "game", 
            "binary": "/switch/abuse/abuse.nro", 
            "updated": "17/11/2020", 
            "name": "abuse", 
            "license": "n/a", 
            "title": "abuse", 
            "url": "https://github.com/capsterx-switch/abuse/releases", 
            "description": "abuse-sdl port for the switch", 
            "author": "capsterx-switch", 
            "changelog": "0.8r3\\n\\nThis should hopefully fix the odd aspect ratio 320x200 does. Along with remapping ZR/ZL", 
            "screens": 0, 
            "extracted": 84656, 
            "version": "0.8r3", 
            "filesize": 61811, 
            "details": "Welcome to Abuse, the port of the classic game Abuse to the Simple\\nDirectMedia Layer. Abuse was originally developed by Crack dot Com and\\nreleased in 1995 for MS-DOS. A Linux version was also made available at\\na later date. It had a few limitations the most restrictive of which was\\nthat it only ran on an 8-bit display, and only in a window.\\n\\nAbuse will run at any colour depth and supports fullscreen mode, as\\nwell as many other new features. It should also be more portable and\\nhopefully run on a variety of *nix variants, and possibly other systems\\nsupported by the SDL library.\\n", 
            "app_dls": 1658, 
            "md5": "2b0831d866a50ca6b39d9abec591e7d8"
        }, 
        {
            "category": "n/a", 
            "binary": "/switch/DVDlogo/DVDLogo.nro", 
            "updated": "15/05/2022", 
            "name": "DVDlogo", 
            "license": "n/a", 
            "title": "DVDLogo", 
            "url": "https://github.com/simontime/DVDLogo/releases", 
            "description": "A bouncing DVD logo screensaver for Switch.", 
            "author": "simontime", 
            "changelog": "1.2\\n\\nMove the logo around using the touch screen.\\n\\n1.1\\n\\nPress A to toggle speeds.\\n\\n1.0\\n\\nInitial Release", 
            "screens": 0, 
            "extracted": 164, 
            "version": "1.2", 
            "filesize": 60, 
            "details": "\\nA bouncing DVD logo screensaver for Switch.\\n\\n\\n\\nnothing else.\\n", 
            "app_dls": 11836, 
            "md5": "86ac22d3386f43da164a9d71e9b1d137"
        }, 
        {
            "category": "game", 
            "binary": "/switch/blobby/blobby.nro", 
            "updated": "08/10/2019", 
            "name": "blobby", 
            "license": "GPLv2", 
            "title": "Blobby-Volley-2-Switch", 
            "url": "https://github.com/SilentFlyBy/Blobby-Volley-2-Switch/releases", 
            "description": "A Blobby Volley 2 port for Nintendo Switch", 
            "author": "SilentFlyBy", 
            "changelog": "0.3.1\\n\\nadd replays folder\\n", 
            "screens": 0, 
            "extracted": 11572, 
            "version": "0.3.1", 
            "filesize": 5927, 
            "details": "This is a port of the popular Volleyball game you all know from the good old LAN-party days. This is still in heavy WIP, so expect some features to be broken.\\n\\nWhat works:\\nLocal play with 2 full controllers (\"full\" means no \"single-mode\" Joycons)\\nBots and custom bot scripts\\nRuleset scripts\\n", 
            "app_dls": 2475, 
            "md5": "af2f67000823d7cf32e2014d5b96baac"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Connect-4-Dual-Edition/Connect-4-Dual-Edition.nro", 
            "updated": "29/10/2018", 
            "name": "Connect-4-Dual-Edition", 
            "license": "GPLv3", 
            "title": "Connect-4-Dual-Edition", 
            "url": "https://github.com/LiquidFenrir/Connect-4-Dual-Edition/releases", 
            "description": "Connect 4 with a twist", 
            "author": "LiquidFenrir", 
            "changelog": "1.0.1\\n\\nthe following bugs/mistakes were noticed and fixed:\\n\\ntext rectangle too small\\ntext position in rectangle\\ntext missing some characters", 
            "screens": 0, 
            "extracted": 12429, 
            "version": "1.0.1", 
            "filesize": 6261, 
            "details": "This is a normal game of Connect 4, for 2 players on Nintendo Switch (hold the joy-cons sideways!) but with a twist!\\nStart a game with L3/R3 or press L/R (depending on who starts) to toggle between normal and pop-out mode, where you remove the bottom piece of a column and make all the ones above fall one rank!\\nThis should add another layer of strategy to the game, making it ten times more fun! No more ties, once the grid is full, carefully drop down columns and try to win!\\nUse the dpad/abxy buttons to select the column to drop your piece, and L3/R3 to validate your action, starting the other player's turn.", 
            "app_dls": 926, 
            "md5": "d044a5d78b70f4155d5338f6412c9501"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/vm-switch/vm-switch.nro", 
            "updated": "29/04/2020", 
            "name": "Vapor_spec", 
            "license": "n/a", 
            "title": "Vapor Spec", 
            "url": "https://github.com/minkcv/vm-switch/releases", 
            "description": "Vapor Spec for Nintendo Switch", 
            "author": "minkcv", 
            "changelog": "1.3\\nSupport for full screen sprites\\n\\n1.1.0\\n\\nNew build has better performance. No code changes, performance increase is likely due to updates to libraries.\\n\\nGame binaries are updated to perform better as well. Also added pong2 binary.\\n\\nv1.0.0\\n\\nThis release uses the OpenGL ES API to improve framerate. It also uses libnx input instead of SDL2. The menu now also uses OpenGL instead of the default console.\\n\\nv0.4.1\\n\\nThis update has no code changes, just the icon is new.\\n\\nv0.4.0\\n\\nThe display scaling is now locked to 3x and the game display is centered in the switch screen. Game ROM is now working so sprites display correctly. Breakout is also included now but it runs rather slowly.\\n\\n", 
            "screens": 0, 
            "extracted": 6671, 
            "version": "1.3", 
            "filesize": 2512, 
            "details": "Vapor Spec is a virtual game platform with capabilities similar to 90s game consoles. It can run on Windows, Linux, and the Switch, which allows you to develop a game once and run it on multiple platforms.\\n\\nThere are example programs and documentation available in the main repo here:\\nhttps://github.com/minkcv/vm", 
            "app_dls": 533, 
            "md5": "d0ab16c5fb0ea45f96d8e7aa77c28237"
        }, 
        {
            "category": "game", 
            "binary": "/switch/quakespasm/quakespasmnx.nro", 
            "updated": "25/04/2021", 
            "name": "QuakespasmNX", 
            "license": "n/a", 
            "title": "QuakespasmNX", 
            "url": "https://github.com/fgsfdsfgs/QuakespasmNX/releases", 
            "description": "Port of Quakespasm", 
            "author": "fgsfdsfgs", 
            "changelog": "0.92.3-nx-0.4.0\\n\\nsynced with upstream changes;\\nrebuilt with latest libnx .\\n\\n0.92.1-nx-0.3.0\\n\\nadded more gyro aiming options (based on @falquinho's PR);\\nsynced with upstream changes;\\nrebuilt with latest libnx;\\nstability improvements to enhance the user's experience\\n\\n0.92.1-nx-0.2.0\\n\\nadded gyro aiming (based on @falquinho's PR);\\nadded swkbd input in text fields and console (based on @Ch0wW's branch);\\nadded joystick settings menu;\\nadded a new mod select menu (accessed from the Options menu);\\nadded 1080p support;\\nfixed multiplayer;\\nstability improvements to enhance the user's experience.", 
            "screens": 0, 
            "extracted": 8825, 
            "version": "0.92.3-nx-0.4.0", 
            "filesize": 3365, 
            "details": "Switch port of Quakespasm. Uses SDL2 as the backend, supports OGG and MP3 music and most other features of Quakespasm.\\n\\nSome of the features of the port:\\n\\nhardware-accelerated OpenGL 2.x-based rendering in 1280x720;\\nsound, including support for OGG and MP3 music tracks;\\nsupports the Mission Packs and other mods compatible with Quakespasm (Quoth, Arcane Dimensions), with a simple mod selector menu;\\nanalog controls and shit;\\nmost other features of Quakespasm, such as:\\nadvanced renderer with cool stuff, such as colored lighting, fog, translucent water, high-res textures, model interpolation, etc;\\nscalable, optionally translucent HUD and menus;\\nmusic support, as mentioned earlier;\\nraised engine limits;\\nbuilt-in controller support, which means I had to do basically nothing to make it work on the Switch.\\n\\nTHIS DOWNLOAD COMES COMPLETE WITH THE SHAREWARE PAK, if you have your own copy please refer to the source link for instructions.", 
            "app_dls": 7183, 
            "md5": "58ae34e5fbcced7abafeb132915a95c7"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/switch-smb-client.nro", 
            "updated": "11/02/2023", 
            "name": "switch-smb-client", 
            "license": "GPLv2", 
            "title": "Switch SMB Client", 
            "url": "https://github.com/cy33hc/switch-smb-client", 
            "description": "Simple SMB client for the Switch. Allows you to transfer files between the Switch and your Windows Shares, Linux SMB Shares and NAS SMB shares", 
            "author": "cy33hc", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 29064, 
            "version": "1.0.1", 
            "filesize": 16222, 
            "details": "Simple SMB client for the Switch. Allows you to transfer files between the Switch and your Windows Shares, Linux SMB Shares and NAS SMB shares", 
            "app_dls": 7196, 
            "md5": "5d7beeb4f8730be4b429785e2c5bfe38"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/n1dus/n1dus.nro", 
            "updated": "19/10/2018", 
            "name": "dOPUS", 
            "license": "GPLv3", 
            "title": "n1dus", 
            "url": "https://github.com/zhaoloving/n1dus", 
            "description": "NSP/XCI manager for the Nintendo Switch", 
            "author": "Hidki", 
            "changelog": "0.7\\n\\ndOPUS becomes n1dus\\nNo more need for exFAT! Can now install and extract both NSP and XCI files over 4GB on a FAT32 SD Card :) (exFAT is notorious for being prone to file corruptions on the Switch). Read instructions there!\\nClock will now show the right time according to your switch timezone setting (thanks libnx :) ).\\nNow will look for keys.dat, keys.txt or prod.keys in '/', '/switch', or '/switch/n1dus'", 
            "screens": 0, 
            "extracted": 9948, 
            "version": "0.7", 
            "filesize": 3887, 
            "details": "n1dus formerly known as dOPUS is an installer and converter of NSP and XCI files for the Nintendo Switch. It is Based on Tinfoil and 4NXCI.\\n\\nDISCLAIMER: Use dOPUS at your own risk. I'm not responsible for any damage, data loss, or anything else dOPUS may cause.\\n\\nRequires sdmc:/keys.dat in order to extract/install XCI files.\\n\\nKeys can be extracted using tesnos' kezplez or shchmue's fork of kezplez. Hers supports the fuses and TSEC being dumped in multiple locations as well as also supporting firmware 6.0.", 
            "app_dls": 29833, 
            "md5": "a02224acfd2b89f48e3f682e5ce6db59"
        }, 
        {
            "category": "game", 
            "binary": "/switch/OpenLara/OpenLara.nro", 
            "updated": "15/01/2019", 
            "name": "Openlara", 
            "license": "BSD v2", 
            "title": "OpenLara", 
            "url": "https://github.com/XProger/OpenLara/releases", 
            "description": "Classic Tomb Raider open-source engine", 
            "author": "XProger", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 60727, 
            "version": "latest", 
            "filesize": 41736, 
            "details": "Classic Tomb Raider open-source engine\\n\\ninspired by OpenTomb project http://opentomb.github.io/\\n\\nNOTE THIS DOWNLOAD INCLUDES A PLAYABLE PSX VERSION OF THE GAME.\\nYOU CAN HOWEVER FOLLOW THE INSTRUCTIONS BELOW.\\n\\nInstructions:\\n\\nfor original PC, PSX and Sega Saturn CD version owners\\n\\n    copy data from your CD into /switch/OpenLara/\\n    (! to extract content from PSX CD images please use this tool https://github.com/m35/jpsxdec !)\\n\\nfor ported android version owners\\n\\n    unzip data file /sdcard/obb/com.squareenix.tombraider1classic/main.42.com.squareenix.tombraider1classic.obb into /switch/OpenLara/\\n\\nfor Steam/GOG version owners\\n\\n    go to ..\\Steam\\steamapps\\common\\Tomb Raider (I)\\ and run dosbox.exe\\n    enter these commands\\n        mount C .\\n        imgmount d '.\\game.dat' -t iso -fs iso\\n        xcopy D:\\DATA\\ C:\\DATA\\\\n    after that you'll get level files in the new 'DATA' folder copy them into /switch/OpenLara/\\n\\nfor advanced users\\n\\n    copy level and title screen files (PHD, PSX, PCX, PNG, RAW, SAT, SAD, SPR, SND, BIN) into '/switch/OpenLara/level/1/'\\n    copy audiotrack files (track_*.ogg, track_*.mp3) into '/switch/OpenLara/audio/1/'\\nSTEP 2: Open switchbrew hbmenu (Album app) and run OpenLara\\n\\nTo switch into two players mode hold L and R buttons on both joy-cons.\\nClicking on the sticks mapped as Start button and used to respawn your player to the position of another.\\nHold L and R buttons on the one of joy-cons to switch back to single player mode.\\n\\nFeedback:\\n    bug reports : https://github.com/XProger/OpenLara/issues\\n    questions   : https://www.facebook.com/OpenLaraTR", 
            "app_dls": 8869, 
            "md5": "f9e2daa1399091db4227d25c8af4a622"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/NXGallery/NXGallery.nro", 
            "updated": "21/10/2021", 
            "name": "NXGallery", 
            "license": "MIT", 
            "title": "NXGallery", 
            "url": "https://github.com/iUltimateLP/NXGallery/releases", 
            "description": "View your album from your phone or PC.", 
            "author": "iUltimateLP", 
            "changelog": "2.0.0\\n\\nThis is a huge rework of the existing NXGallery project.\\n\\n* a complete new UI which adapts to the Switch visuals, and your preferred color scheme\\n* a scannable QR code to simplify the connection between the Switch and your smartphone\\n* a faster and more optimized web frontend which will not load all full images anymore but only thumbnails\\n* a new way of accessing the media files - all bugs regarding file-based emuMMC or different configurations should be fixed now\\n* ...and more technical stuff", 
            "screens": 2, 
            "extracted": 5127, 
            "version": "2.0.0", 
            "filesize": 1591, 
            "details": "NXGallery is a Nintendo Switch Homebrew Application to transfer your screenshots or videos to your phone or PC in no-time. Simply run this app and enter the address prompted on the screen in your web browser and et voil\u00e0, you can share your favourite moments!", 
            "app_dls": 18122, 
            "md5": "5bf68486fe766b287f1332c2d1a6271f"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Snake/Snake.nro", 
            "updated": "29/12/2018", 
            "name": "Snake", 
            "license": "n/a", 
            "title": "Snake", 
            "url": "https://gbatemp.net/download/snake-lovepotion-source-code-version.35086/", 
            "description": "The classic Snake game", 
            "author": "Shrike", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 6449, 
            "version": "4", 
            "filesize": 4076, 
            "details": " made this little port of Snake for the Switch with LovePotion (thx TurtleP & Co for all the help <3 Bless your discord server)\\n\\nNEW UPDATE: SNAKE Version 4 (New Style, Now working with 5.x.x )\\n\\nHey I'm back (again) and I have a brand new version of Snake for LovePotion with me (thx TurtleP & Mik & Co for all the help <3 Bless your discord server).This time Mik (Renbo Design) from the 'Tiny Turtle Industries' Discord supported me with his great artworks. <3 !!!In addition to that, this is the first time the game is compiled to only 1 NRO file, instead of a whole folder with Lua files.If you want to look at the code anyways (maybe for learning some LovePotion/Lua) just contact me.Also this version works with 5.x.x and every other firmware.Don't forget: The 2 player-mode is started by pressing '+'' on the right joycon.", 
            "app_dls": 7460, 
            "md5": "e3de41a3f162789305771098b96ea166"
        }, 
        {
            "category": "game", 
            "binary": "/switch/games/MysteryOfSolarusDX.nro", 
            "updated": "22/02/2021", 
            "name": "solarus", 
            "license": "GPLv3", 
            "title": "Mystery of Solarus DX", 
            "url": "https://github.com/capsterx/solarus/releases/", 
            "description": "Fanmade Legend of Zelda game", 
            "author": "capsterx carstene1ns", 
            "changelog": "0.4.2-luajit\\n\\nSwitching to use switch-utils keymapper for configurable keys per-game\\n\\n0.4.2-luajit\\n\\nThe game Zelda - A Link To The Dream does not currently use the joypad on the file creation/selection menu, so as a quick workaround ZR was mapped to return so the game can be started.\\n\\n0.3-1.6.4\\n\\nThis release adds opengl which allows version >= 1.6 version games to use shaders.", 
            "screens": 0, 
            "extracted": 46264, 
            "version": "0.4.3-luajit", 
            "filesize": 30608, 
            "details": "This is my port of solarus engine to the nintendo switch\\n\\n\\nI did not find a prebuilt Plutonium or lua, so i included these in the source tree for convience.\\n\\nI took some code from https://github.com/carstene1ns/solarus-engine but have since modified it quite a bit also upgrading it to 1.6.4.\\n\\nI basically have the code for the switch ignoring the sdl axis movement and any of the joypad buttons that are directional and instead fake them as keyboard directions. Dont know if that's the best way to go about it, but it works.\\n\\nThe - key is mapped to 'escape' so you can actually exit the game\\n\\nhttps://github.com/capsterx/solarus#about-solarus", 
            "app_dls": 39173, 
            "md5": "25a73d7816049a7e543a3079d50e4c29"
        }, 
        {
            "category": "game", 
            "binary": "/switch/tetriswitch.nro", 
            "updated": "29/12/2018", 
            "name": "tetrisswitch", 
            "license": "n/a", 
            "title": "TetrisSwitch", 
            "url": "https://github.com/Ryuzaki-MrL/tetriswitch/releases", 
            "description": "Testris for the switch", 
            "author": "Ryuzaki-MrL", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 230, 
            "version": "1.1.0", 
            "filesize": 85, 
            "details": "It's freaking Tetris, but anyway:\\n\\n(<) / (>): move tetromino\\nHold (Down): soft drop (fast drop)\\n(Up): hard drop (instant drop)\\n(A) / (B): rotate\\n(X): change grid color\\n(L) / (R): hold tetromino\\n(+): pause; start over (after game over)\\n(-): quit game (while paused)", 
            "app_dls": 3989, 
            "md5": "9a37e69a28793b3a2fe1d5c430c77bc0"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/ConsoleEditor/ConsoleEditor.nro", 
            "updated": "02/05/2020", 
            "name": "ConsoleEditor", 
            "license": "GPLv3", 
            "title": "ConsoleEditor", 
            "url": "https://github.com/jiangyibin/ConsoleEditor/releases", 
            "description": "A simple text editor", 
            "author": "jiangyibin", 
            "changelog": "n/a", 
            "screens": 1, 
            "extracted": 525, 
            "version": "0.1.0", 
            "filesize": 247, 
            "details": "A simple text editor for Nintendo Switch\\n\\nBrowser, edit and save file. Especially design for edit cheat file.", 
            "app_dls": 5985, 
            "md5": "2235a341786dfe23fbc51564eb4091ba"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Apollo/Apollo_0.1.nro", 
            "updated": "10/07/2019", 
            "name": "Apollo", 
            "license": "GPLv3", 
            "title": "Apollo", 
            "url": "https://github.com/evo-brut3/Apollo/releases", 
            "description": "File Explorer for the Nintendo Switch", 
            "author": "evo-brut3", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 9416, 
            "version": "0.1", 
            "filesize": 3745, 
            "details": "Apollo is a File Explorer Homebrew for the Nintendo Switch. Its goal is to be the most convenient and reliable method to manage console's files.\\nFollowing the NX Homebrew Scene trend its name comes from Apollo - one of the Olympian deities, who is i.a. a god of music, truth, knowledge and protection of young.\\nIt is also a reference to Apollo 11 - a spaceflight mission which allowed people to walk on the Moon.\\nApollo is my first homebrew project, I hope you'll like it.\\n\\nOverview\\n\\nApollo's current features are:\\n\\n- Graphical User Interface: Minimalist design which is based on default hbmenu and official home menu esthetic.\\n- Selecting items: A simple but mandatory feature.\\n- Copying files and directories: Before doing so, application checks whether user is trying to overwrite currently existing files or directories and then asks about overwriting them.\\n- Recursive directory deletion: It allows for complete deletion of directories' content and obviously for file deletion.\\n- Renaming files and directories: Speaks for itself.\\n- Sorting items: Alphabetically or reversed.", 
            "app_dls": 11405, 
            "md5": "d462d2e59c15d6b3000ddf6b16673b4d"
        }, 
        {
            "category": "game", 
            "binary": "/switch/DrDriller/DrDriller.nro", 
            "updated": "03/03/2020", 
            "name": "Dr-Driller", 
            "license": "n/a", 
            "title": "Dr-Driller", 
            "url": "https://github.com/llakssz/Dr-Driller/releases", 
            "description": "Mr Driller clone in C++ & SDL 2", 
            "author": "llakssz", 
            "changelog": "0.6\\n\\nFirst Release\\n\\nRemember the awkward control scheme:\\nLeft joycon controlls player 1, right controls player 2.\\nHold joycons vertically.\\nL/R = OK, +/- = START.\\nANALOG = move, ZR/ZL = swap camera", 
            "screens": 1, 
            "extracted": 23557, 
            "version": "0.6", 
            "filesize": 17686, 
            "details": "Dr. Driller is a clone of Mr. Driller, written in C++, making use of SDL 2.\\n\\nThe game supports local co-op multiplayer - a first for Mr. Driller-like games. (There is a 'Battle Mode' in Mr. Driller Drill Land, in which 2 - 4 players can play on one special map, seeing who can find a 'gold coin' first, it's not the same.)\\n\\nControls\\nLeft joycon controlls player 1, right controls player 2. Hold joycons vertically. L/R = OK, +/- = START. ANALOG = move, ZR/ZL = swap camera\\n\\nCurrently, the project is aimed at Nintendo Switch, although with a few changes it will run on other platforms. Multiple platforms are the goal.\\n\\nThis project is far from complete, and there are a number of bugs!\\n\\nThis project would not have been possible without adas's work on Miss Driller, in the year 2000. Others built upon that to create Drill2x in around 2007.\\n\\nA large refactor was done, upgrade to SDL 2, more Mr. Driller features were added (crystal blocks, white blocks, death clearing surrounding blocks, upgraded graphics, multiplayer, character selection...)\\n\\nNamco has not created *real Mr. Driller game for more than 10 years, so Dr. Driller was started to fill the gap. *real Mr. Driller game - something that is not a web-based slot machine (search online!), mutilated mobile version (Mr. Driller for Kakao), or some officially licensed web version that has different mechanics (can't find the link now)\\n\\nThere is a late 2009 trademark for 'Mr. Driller Encore', supposedly a port of Mr. Driller Drill Land to Switch, better late than never!\\n\\n\\n", 
            "app_dls": 1094, 
            "md5": "ead543bb46e26ee972edc4fcc6c8a38a"
        }, 
        {
            "category": "game", 
            "binary": "/switch/onscripter-nx/onscripter-nx-hd.nro", 
            "updated": "20/09/2022", 
            "name": "ONScripterNX", 
            "license": "GPLv2", 
            "title": "ONScripter-NX", 
            "url": "https://github.com/clamintus/onscripter-nx", 
            "description": "ONScripter Engine", 
            "author": "clamintus", 
            "changelog": "0.3\\n\\nThank you for your patience!\\nIt's been eight months, I know, but I hope that this was worth the wait!\\n\\nWith every update ONScripter-NX becomes more and more complete. I want people to enjoy their beloved novels on their Switch while feeling at ease, not with a chunky app that doesn't do the work right. With this update I tweaked the engine a bit to improve the playing experience in the long run. I hope I've made progress towards my goal, improving your playing experience too!\\n\\nFollow the instructions on README.md to know how to install ONScripter-NX.\\n\\nGame-specific zips are just convenience builds.\\nThey already come with some of the necessary files included, so you just need to copy the arc*.nsa/arc*.sar files from an original copy of the game.\\n\\nChangelog:\\n\\nHD support - yes! Play your old novel like you had never been able to! More info about it in the README page (seriously, read it!)\\nA new command has been added to adjust text display speed.\\nBy pressing the Left Stick, you can switch between the three available text display speeds (slow~normal~fast).\\nONScripter-NX will also memorize your selected text speed for that game.\\nMenu navigation is now a lot easier thanks to repeated input support.\\nNow you can hold the stick to scroll menu entries faster.\\nThis also works when navigating text history using D-Up and D-Down, and basically in every other directional input use case too.\\nNow the app deinitializes RomFS properly at shutdown.\\nA proper deinit function has been created. It will be called at app's shutdown, and will be eventually populated with more deinitializing code, if needed in the future. For now it just contains the RomFS deinit call...\\n\\n0.2\\n\\nFixed a crash due to trying to load unexistent font file when no arc-files were found.", 
            "screens": 0, 
            "extracted": 9406, 
            "version": "0.3", 
            "filesize": 3961, 
            "details": "Open-source port of the ONScripter visual novel engine.\\nPorted version: onscripter-20060724-insani\\nAny game compatible with this version of ONScripter should run fine! If not, press Y to report an issue. :)\\nEnjoy!\\n\\n\\nONScripter (O-N-Scripter) is a program that interprets and executes scripts written for NScripter in its own way.\\n\\n\\n-- Port additions --\\n   - 4:3 aspect ratio simulation\\n   - Touchscreen support\\n   - RomFS integration\\n   - Optimized flush implementation\\n\\n\\n-- How to play --\\n\\nGo to the folder where onscripter-nx.nro is located (/switch/ followed by onscripter-nx/ or game-specific folder name)\\nCopy the game files in that folder:\\narc*.nsa / arc*.sar\\nnscript.dat / nscript.___\\nYou don't need this if you are using a game-specific version of ONScripter-NX.\\nSoundtracks (CD folder, ...)\\ndefault.ttf font\\nYou don't need this if you are using a game-specific version of ONScripter-NX.\\nLaunch ONScripter-NX from hbmenu\\nNote: Launching from the album applet seems to work, but it is strongly advised to launch it by holding R on an installed game to avoid potential memory problems since that's the normal environment where Switch homebrews are designed to run.\\nEnjoy!\\n\\n-- Controls --\\n\\n    A : Enter (or proceed in text mode)\\n    B : Back (or proceed in text mode)\\n    X : Right-click Menu\\n    Y : Draw full page at once\\n    Joystick UP / Joystick LEFT : Previous element\\n    Joystick DOWN / Joystick RIGHT : Next element\\n    D-Pad UP / L : Scroll up text history\\n    D-Pad DOWN / R : Scroll down text history\\n    ZL / ZR (held) : Skip mode\\n    Plus : Exit to homebrew menu", 
            "app_dls": 768, 
            "md5": "69e1e82347687cfc0157c694d2214855"
        }, 
        {
            "category": "advanced", 
            "binary": "/switch/switchpresence-rewritten/SwitchPresence-Rewritten-Manager.nro", 
            "updated": "27/07/2020", 
            "name": "SwitchPresence-Rewritten", 
            "license": "GPLv2", 
            "title": "SwitchPresence-Rewritten", 
            "url": "https://github.com/SunTheCourier/SwitchPresence-Rewritten/releases", 
            "description": "Discord rich presence switch", 
            "author": "SunTheCourier", 
            "changelog": "1.8.2\\n\\nFixed connecting to PresenceClient\\n\\n1.8.1\\n\\nThe SwitchPresence Client has moved! you can now find it at PresenceClient.\\n\\nServer\\nReceived breaking changes, make sure to switch to PresenceClient!\\n\\n1.8\\n\\nClient\\nPresence data will now persist up to a minute after the server or client disconnects\\nServer\\nMemory footprint greatly decreased\\nThreads should now be lower priority allowing for a tiny performance gain\\nUpdate frequency increased from every 5 seconds to every second.\\nSwitch toolbox json included\\n\\n1.7\\n\\nhttps://github.com/Sun-Research-University/SwitchPresence-Rewritten/releases/tag/v1.7\\n\\n1.6.1\\n\\nhotfix\\n\\n1.6\\n\\nUpdated to support AMS v0.10.0 and greater\\nIf you installed AMS v0.10.1 and your switch crashes, reinstall AMS v0.10.1 as there was a shadow bug fix to the release\\nUpdated to use libnx v3.0.0\\n\\n1.5\\n\\nProper Icon Added (#15)\\nAllow for special characters to be displayed properly in Discord (this will allows games like Pok\u00e9mon Sword/Shield with the character \u00e9 to show up properly in rich presence!)\\n\\n1.4.2\\n\\nFixed an issue where sysmodule would not launch at all\\nFixed an issue where pressing B on the main menu would not exit the homebrew\\n\\n1.4.1\\n\\nFixed an issue where Manager Homebrew would not enable/disable SwitchPresence\\n\\n1.4\\n\\nFixed an issue where MAC address lookups failed (#12)\\nFixed an issue where icons would fail to dump (#10)\\nRewrote lots of code to better improve performance for the manager application (#11)\\n\\n1.3\\n\\nClient is now able to take a MAC address to connect to the switch (this can automatically be taken when the switch is connected using the IP)\\nMany bug fixes\\nThanks to @cathery (#7) for all the code for these features and fixes!\\n\\n1.2.2\\n\\nRecompiled with latest LibNX for fw 9.0.0 compatibility\\nClient\\nFixed a bug where if the server was shut down via manager, client would stay connected", 
            "screens": 0, 
            "extracted": 1116, 
            "version": "1.8.2", 
            "filesize": 475, 
            "details": "Change your Discord rich presence to your currently playing Nintendo Switch game! Concept taken from SwitchPresence by Random\\n\\nSetup\\n\\nGeneral switch setup can be found here : https://switch.homebrew.guide\\n\\nSimply Create an application at the Discord Developer Portal call your application Nintendo Switch or whatever you would like and then enter your client ID and switch's IP into the SwitchPresence client!\\n\\nYou can also optionally dump game icons using a helper homebrew included in releases it will also give you the option to toggle the SwitchPresence sysmodule!\\nAfter you have dumped the icons you can bulk upload them to your Discord Developer Application under Rich Presence->Art Assets you can upload them with the name given to them on dump or optionally upload your own icon and set the SwitchPresence client to load that icon using the name of the custom icon.\\n\\nTechnical Info\\n\\nThe protocol for the sysmodule is a very simple struct sent via TCP\\n\\nstruct titlepacket\\n{\\n    u32 magic; //Padded to 8 bytes by the compiler\\n    u64 tid;\\n    char name[512];\\n};\\n\\nPlease note that magic is padded to 8 bytes which can be read into a u64 if wanted\\nThe Packet is sent about every 5 seconds to the client from the server (in this case the switch).\\nIf a client is not connect it will not send anything.", 
            "app_dls": 3882, 
            "md5": "0e7a70cd36b6f773b6c06fd49d2dd423"
        }, 
        {
            "category": "game", 
            "binary": "/switch/VVVVVV/NX-VVVVVV.nro", 
            "updated": "07/02/2021", 
            "name": "nx-vvvvvv", 
            "license": "n/a", 
            "title": "NX-VVVVVV", 
            "url": "https://git.nicholemattera.com/NicholeMattera/NX-VVVVVV", 
            "description": "Port of VVVVVV.", 
            "author": "NicholeMattera", 
            "changelog": "2.0.1\\n\\nUpdated to the latest commit b5ef10cae5\\nBuilt with the latest version of libNX\\n\\n2.0.0\\n\\nUpdated to the latest commit 688f759967\\nComes with a bunch of new goodies like Over 30 FPS, Flip, and Glitchrunner modes.\\n\\n\\n1.1.0\\n\\n- New Feature: New Icon.\\n- New Feature: Added ability to skip initial loading screen.\\n- Bug Fix: Disabled level editor for time being until controls can be reworked.\\n- Bug Fix: Closing via home button no longer takes a long time to quit.\\n- Bug Fix: Custom levels are now working.\\n- Bunch of small fixes that contributors have merged in upstream.", 
            "screens": 0, 
            "extracted": 10156, 
            "version": "2.0.1", 
            "filesize": 3729, 
            "details": "App detailed Description:\\nA Nintendo Switch port of the popular game VVVVVV. This is a fork from the official source code of VVVVVV by Terry Cavanagh. You'll need the data.zip file from VVVVVV to actually run the game, or it's available to download separately for free in the Make and Play edition of the game. \\n\\nhttp://distractionware.com/blog/category/vvvvvv-make-and-play/", 
            "app_dls": 3252, 
            "md5": "34b65a1252d7e0928c91b8c6ce457781"
        }, 
        {
            "category": "legacy", 
            "binary": "/switch/switchident-console/SwitchIdent_Console.nro", 
            "updated": "25/06/2023", 
            "name": "switchident-console", 
            "license": "GPLv3", 
            "title": "SwitchIdent-console", 
            "url": "https://github.com/joel16/SwitchIdent/releases", 
            "description": "Console information", 
            "author": "Joel16", 
            "changelog": "0.2\\n\\nBuilt using the latest version of DKA64 toolchain and libnx.\\nProperly display system region.\\nDisplays battery percentage and charging status.\\nDisplays battery charger type.\\nDisplays if battery charging is enabled.\\nDisplays if ample power is supplied.\\nDisplays Wireless RSSI signals and quality in percentage.\\n\\nValues that change in real time are now properly refreshed. (Battery percentage, charging state, dock state, etc).", 
            "screens": 0, 
            "extracted": 388, 
            "version": "0.5", 
            "filesize": 120, 
            "details": "Notice: The console interface version of SwitchIdent is no longer supported and is now considered legacy on the Homebrew Appstore. For future updates, please use the version titled SwitchIdent!\\n\\nThis is yet another identity tool that is continuing the series of <device name here>ident. The tool allows users to get various bits of information from your device, hence the name 'ident' as in identifying your device.\\n\\nPlease see the Source link for further information and usage.", 
            "app_dls": 7559, 
            "md5": "3a91d07c3e57707ee09cf3ef2aa4c19a"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Hamsters_NX.nro", 
            "updated": "16/07/2018", 
            "name": "Hamsters", 
            "license": "MIT License", 
            "title": "Hamsters NX", 
            "url": "https://switchbrew.github.io/nx-hbl/", 
            "description": "hamster breeding game", 
            "author": "Cid2mizard", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 287, 
            "version": "1.0", 
            "filesize": 100, 
            "details": "This is a hamster breeding game in text mode , \\nmore precisely the remake of an old game that I played in college running originally on Mo5 and TO7 \\n\\n I don't know the author but you find it here for windows => \\nhttp://denouval.chez.com/hamster.htm . \\nThe is a port of my 2DS/3DS homebrew => https://gbatemp.net/threads/release-hamsters-2ds.383457/.", 
            "app_dls": 1141, 
            "md5": "558702cc8bf7bdb8954bbeb16630ffa4"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/AmiiboGenerator/AmiiboGenerator.nro", 
            "updated": "05/11/2023", 
            "name": "AmiiboGenerator", 
            "license": "none", 
            "title": "AmiiboGenerator", 
            "url": "https://github.com/Slluxx/AmiiboGenerator/releases", 
            "description": "Generates all Amiibos on your Switch", 
            "author": "Slluxx", 
            "changelog": "2.1.1\\n\\nBugfix: Fixing a crash when the emuiibo folder does not exist (for example due to emuiibo not being installed beforehand).\\n\\n2.1.0\\n\\nThis release adds a wakelock.\\nGenerating Amiibo with images is quite a lengthy progress and some consoles went into sleep, breaking the process. This is now fixed.\\n\\n2.0.0\\n\\nThis is a pretty major update, featuring a new interactive menu, selective generation and deletion as well as some other significant improvements. Please refer to the readme for the full feature set.\\n\\n1.4.0\\n\\nFixed an issue where custom created amiibos were deleted.\\nAmiiboGenerator will create an \"autogenerated.flag\" file inside the amiibo folder and only delete amiibos with that flag file.\\nIf you want to keep an autogenerated amiibo, remove that file\\nBecause all amiibos will be deleted before generating new ones, if you create a folder structure that the tool wants to use too, it will skip generating/overwriting the files. Very unlikely but better safe than sorry.\\nFixed an issue with an Animal Crossing Amiibo where the slash in its name would create an unexpected folder structure.\\nDue to the new update, you might need to manually delete the amiibos, as they lack the \"autogenerated.flag\" file and wont be deleted or overwritten by the new version of the tool. You could delete all amiibos with 1.3.0, update and then generate them again.\\n\\nThis release shows as 1.3.0 on your switch.\\n\\n1.2.0\\n\\nDownloaded Amiibo images will now be auto resized to a height of 150px (and width in aspect ratio). This will help with the fluidity inside the overlay and reduce overall filesize.\\nDownloaded Amiibo images without an alpha-channel will be converted to RGBA, to be able to display correctly in the overlay.\\n\\n1.1.0\\n\\nAdded the option to download amiibo images (very slow) and redid the \"menu\".", 
            "screens": 0, 
            "extracted": 1534, 
            "version": "2.1.1", 
            "filesize": 650, 
            "details": "Generates all Amiibos directly on your console.\\n\\nIt needs internet to download the amiibo database from. Though you can download it manually and place it in sdmc:/emuiibo/amiibos.json. (Go to Github repository to see links)\\n\\nThe homebrew does not generate amiibo.bin dumps and does not contain anything stolen from nintendo. It only generates json files that emuiibo can use. They are exactly the same ones than the ones generated by emutool.", 
            "app_dls": 25395, 
            "md5": "ab8f29a40ef163bacb39ac82b81eb21d"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Shiromino/Shiromino.nro", 
            "updated": "06/03/2021", 
            "name": "Shiromino", 
            "license": "MIT", 
            "title": "Shiromino", 
            "url": "https://github.com/Saaaahil/shiromino/releases", 
            "description": "Switch port of Tetris Grand Master Clone", 
            "author": "Saaaahi", 
            "changelog": "1.0.2\\n\\nAdded option to pause game with minus button", 
            "screens": 0, 
            "extracted": 29127, 
            "version": "1.0.2", 
            "filesize": 22357, 
            "details": "Recreates various game modes from the Tetris: The Grand Master series. Score saving & replays are broken, currently.", 
            "app_dls": 1043, 
            "md5": "0978cb853953abd08fcb2a5e65c35ebd"
        }, 
        {
            "category": "tool", 
            "binary": "none", 
            "updated": "04/09/2023", 
            "name": "emuiibo", 
            "license": "GPLv2", 
            "title": "emuiibo", 
            "url": "https://github.com/XorTroll/emuiibo/releases", 
            "description": "MitM'ing NFP services for Amiibo emulation!", 
            "author": "XorTroll", 
            "changelog": "1.1.1\\n\\nDependencies were adjusted to properly support Java 8 as well (emuiigen)\\n\\nA consequence of this is that combo boxes are no longer searchable (for now)\\n\\n1.1.0\\n\\nSelected status option (on/off) is now saved via SD flags, so that after a reboot the selected option remains\\n\\nFixed an input-related bug which would cause weird issues when trying to open hbmenu/album while emuiibo was intercepting a game\\n\\nLogging (if enabled) now logs to a log file inside the SD card (instead of official LogManager, which is less intuitive for regular users)\\n\\nNow converted bin-files have a proper mii set (it's not their actual mii since it's still a technical problem to use it, but previously none was set thus showing an invalid/blank mii - now a random one is generated like in other places with nonexistent miis)\\n\\n1.0.0\\n\\nThis update's major milestone (among others) is to finally intercept nfp:sys service, AKA intercepting system settings/applet amiibo support - hence, many changes here are because of this\\n\\nemuiibo is no longer a pre-release, by the way ;)\\n\\nNOTE: don't forget to update to the latest nx-ovlloader/Tesla menu!\\n\\nThe virtual amiibo format went through some major changes system-settings support required:\\n\\nNow area information is saved in <amiibo>/areas.json, which stores pairs of access_id and program_id values. System settings support also requires knowing the program ID of the title using the area, which is why now area information is saved here\\n\\nThis JSON also contains a current_area_access_id field: system settings's option to delete an amiibo's save data conflicts with emuiibo's implementation of saving (real amiibos have a single game save data while emuiibo allows multiple), so this field contains the currently \"selected\" area, which consists on the area system settings will see and show info of/delete\\n\\nIn order to convert old formats to this new changes, the areas.json file will be created automatically, but since there is no way for emuiibo to tell the program ID of plain amiibo areas, it will set a certain ID by default (to be distinguishable from the rest, I opted for \"Retain Interactive Display Menu\"'s one, which is a debug program), and for the correct ID to be set on the area info, the user must use the amiibo with the game in question. I know this can be a bit tedious, but it's the best way to handle it\\n\\nNow virtual amiibos with names longer than 10 characters are ignored and considered as invalid. Due to certain technical reasons (and Nintendo being too inconsistent with its formats) I originally thought the limit was at 40, but in certain contexts (like system settings) where the 10-char limit is imposed, existing virtual amiibos with longer names tend to cause weird/unexpected behavior\\n\\nThe system settings formatting option will remove all virtual amiibo areas (won't unregister it like with real amiibos since virtual amiibos have no concept of being (un)registered)\\n\\nThe system-settings game-save-deleting option will remove the selected amiibo area, which can be changed from the overlay. This selected area will also be the one system-settings always shows\\n\\nNow the random-UUID option has its own field in the amiibo.json file (use_random_uuid), so that amiibos will have their own UUID which won't be cleared when random-UUID wants to be enabled (see related overlay changes)\\n\\nOld formats supported in older emuiibo versions (raw bin dumps and older virtual amiibos) are fully supported now! Backwards-compatibility has been reimplemented so that these outdated formats are automatically converted to the modern format on boot (for bin dumps, the dump binary file gets moved but not deleted)\\n\\nCriptography is now supported, so that if /switch/key_retail.bin is present, the encrypted sections of bin dumps will be accessible by emuiibo, so that the resulting converted amiibos will contain all the amiibo data present there (this includes game app-data areas, AKA amiibo game save-data)\\nemuiibo\\n\\nCompiled with latest libraries\\n\\nAll the format changes above resulted in code changes to support it, of course\\n\\nThe emuiibo IPC service (used by the overlay and other homebrew to control emuiibo) has some new commands reflecting the format changes. As always, the overlay is the best example of a homebrew using this service to control amiibo emulation\\n\\nSome amiibo ID internal bugs were fixed (again, huge shoutout to Nintendo for being unnecessarily and heavily inconsistent with their amiibo formats across platforms), which would've previously caused some isssues with certain games (like Monster Hunter Rise, Splatoon, etc.)\\n\\n0.6.4\\n\\nFixed some minor issues related to virtual amiibo area saving\\nFixed a weird internal issue where sometimes emuiibo would become unaccessible under certain circumstances\\n\\n0.6.3\\n\\nFixed support for latest Atmosphere versions (0.19.x) and for 12.x system updates. Note that this emuiibo version (and next ones) won't work on older Atmosphere versions.\\n\\n0.6.2\\n\\nSmall nx library corrections/improvements\\nAtmosphere 0.18.0 support (always use emuiibo with latest ams if it's supported!)\\n\\n0.6.1\\n\\nFixed controller support - some games couldn't be used with detached JoyCons / other controllers on v0.6, that has been fixed on this version.\\n\\nWhen exporting system miis on startup, now emuiibo doesn't use the mii's name as the mii folder's name, the mii's name is written to a name.txt file instead to avoid potential FS issues with non-UTF8 names, and the mii folder's name will just be an index.\\n\\n0.6\\n\\nemuiibo has been through a complete rewrite in Rust \ud83e\udd80 (except for the overlay), so everything has changed internally:\\n\\nSupport for latest Atmosphere (0.14.4), and next releases unless breaking changes are introduced\\n\\nemuiibo no longer handles conversion of raw amiibo dumps or old emuiibo formats - only the current format is supported (the one used since 0.5.x)\\n\\nHeap size has been considerably reduced (last version used 0x40000, current one only uses 0x4000!) - in addition, the exefs NSP's size has been reduced too, being now 5 times smaller than 0.5.x\\n\\nRegarding the known issues with time services and sysmodules, emuiibo no longer makes use of this service to avoid creating more issues, even though this implies that virtual amiibos' \"last write date\" won't be set when a virtual amiibo is modified - luckily, not emulating this anymore doesn't change anything relevant nor break anything\\n\\nemuiibo's IPC interface other processes may use to communicate with it has a minor change - thus, 0.5.x or older overlays WON'T WORK with this version's emuiibo!\\n\\n0.5.1\\n\\nNote: this is nothing more than a quick update in order to support latest CFW - emutool wasn't even updated, the only thing which changed is its version number, and emuiibo has no relevant changes other than small bugfixes.\\n\\nUpdated libnx, libstratosphere/Atmosphere-libs and JSON libraries. emuiibo requires C++20 now, as Atmosphere-libs do so.\\n\\nChanged size from 0x20000 to 0x40000 to avoid some memory issues people experienced.\\n\\nFixed a small bug when dumping console miis to the SD card on startup.\\n\\n0.5\\n\\nemuiibo has been completely rewritten, and this has been incredibly helpful, since almost any issue present for previous versions is no longer a problem ;)\\n\\nKey combos are no longer a thing, since they were a not very friendly way of controlling emuiibo, and having an overlay is 100 times more helpful.\\n\\nThe way emuiibo internally \"mimics\" Nintendo's amiibo services has been improved a lot. This was what caused many games to not work fine (Link's Awakening, Diablo 3, Fire Emblem...). In fact, emuiibo is introducing a new feature which makes amiibo emulation slightly more similar to real amiibos, which made those specific games work (see below).\\n\\nVirtual amiibo connecting/disconnecting: these two are the equivalents of placing a real amiibo in the NFC point/R-stick (connecting it) and removing it from that spot (disconnecting it). Previously, emuiibo \"tried\" to take care of that manually (games like SSBU asked the user to remove the amiibo after saving progress), which resulted in many games freezing when they read amiibos. Now, simply disconnect the amiibo when you need to remove it, and connect it to use it again!\\n\\nSupport for raw bin amiibo dumps works now (it was broken for v0.4)\\n\\nOld (v0.3.x and v0.4) amiibo formats are converted on startup, so no need to create new amiibos, old ones should work :)\\n\\nIPC API changed completely, check the overlay's source as an example of how it works.\\n\\nNow logs are reset on each reboot, so make sure to not reboot or make a copy of emuiibo's log file if wou want to preserve them! (this was done since the log file would get excessively big if it wasn't cleaned)\\n\\nThis is a new addition to the project and, probably, the best and easiest way of controlling emuiibo (thanks to WerWolv for such an amazing project)!\\n\\nThis are its current features:\\n\\nToggle on/off emulation\\n\\nControl virtual amiibo emulation with emuiibo, select a virtual amiibo as active, connect/disconnect it (see above)\\n\\nBrowse through categories, keep your virtual amiibos organized\\n\\nSee in real time if the currently opened game is being intercepted by emuiibo (if you have the overlay open while the game runs, you might be able to spot the exact instant in which emuiibo intercepts the game's amiibo access)\\n\\n\\n\\n0.4\\n\\nemuiibo was updated to latest libnx and libstratosphere, what might fix possible bugs those had before. (libstratosphere's new IPC API is far more accurate now)\\n\\nInternal heap usage was decreased from 0x75000 to 0x5000. (almost 24 times less heap!)\\n\\nSeveral implementation mistakes were corrected, which might have caused issues.\\n\\nThose problems with certain amiibos (mainly BOTW ones) have been fixed, which were caused by a bad handling of amiibo IDs (N sends them in a slightly different way)\\n\\nNow emuiibo has a settings file: settings.json inside emuiibo's directory. The only setting it has for now is whether input combos are enabled, and this defaults to true.\\n\\nIf you want to disable input combos, just edit the file and change the field comboEnabled from true to false, or the opposite to re-enable them.\\n\\nAdded logging, so that most interactions are logged to a logging file (emuiibo.log) in emuiibo's directory, to help with potential issues.\\n\\n0.3.1\\n\\n9.0.0 support\\n\\n0.3\\n\\nEmuiibo has been fully rewritten, what involves several changes:\\n\\nAmiibo moves should be faster now since on previous versions the amiibo dir would be re-scanned (thus iterated over every amiibo) each time user moved to the next amiibo.\\n\\nAmiibo structure and filesystem layout have changed to a WAY more proper one. (see below)\\n\\nNew amiibo structure - dumps no longer required!\\n\\nThe only relevant part of an amiibo is its unique ID (the rest can be emulated), thus having online databases of this IDs, dumps are useless, but still supported ;)\\n\\nAmiibos go now inside /emuiibo/amiibo/ for a better directory layout. Don't worry about backwards compatibility. (see below)\\n\\nAmiibos can be placed inside /emuiibo/amiibo// to be only used in that specific game. Amiibos outside those directories will be used on any game.\\n\\nBackwards compatibility for any kind of amiibo, considering that 3 types exist: single dumps, 0.2.x format and the new 0.3+ format\\n\\nSay hello to a new tool to create virtual amiibos easily - emuGUIibo!\\n\\nMade using Windows Forms, so should be supported by Mono\\n\\nAccesses a full amiibo list from an online API, so the user just has to select an amiibo and customize it!\\n\\nAmiibos are generated on the user-specified directory. If a drive with /emuiibo directory is detected, emuGUIibo will assume it's a console's SD card and default (but not force) that path.\\n\\n(Probably developer only) nfp:emu service changes:\\n\\nCommands were renamed and reordered, so make sure you update your implementation.\\n\\nAdded new command to get emuiibo version by 3 integers (major.minor.micro)\\n\\n0.2.1\\n\\n8.1.0 support, working as always\\n\\nA new command was introduced in nfp:emu (RescanAmiibos)\\n\\n0.2\\n\\nAmiibo progress saving support\\n\\nGames like SSBU allow saving their progress on amiibos. Now this is supported by redirecting savedata to files inside amiibo's \"areas\" directory.\\n\\nThis, in fact, provides another advantage, as real amiibos just allow savedata for one title, while this system allows to have multiple saves.\\n\\nAmiibo system changed\\n\\nFirst of all, don't worry. All amiibo BIN files found in emuiibo dir will be auto-converted to the new system.\\n\\nThe new system has every amiibo in a different directory, which contains the amiibo (\"amiibo.bin\"), a JSON metadata file (\"amiibo.json\"), an \"areas\" directory (see above) and a mii char-info copy (\"mii.dat\").\\n\\nOn this system everything can be customized. In order to change miis you would need the char-info data, which is stored inside the console. To help with this, emuiibo will dump all console miis inside \"miis\" directory in emuiibo dir, named with the index + mii name (example: \"0-XorTroll.dat\"). To use it, copy to the amiibo dir and name it as \"mii.dat\".\\n\\nAn interesting option can be added to the JSON (\"randomizeUuid\" boolean), which makes emuiibo randomize the amiibo UUID. Having this means special circumstances in certain games, like being recognized as a different amiibo each time in BotW, hence infinite supply.\\n\\nIMPORTANT! After using 0.2, since the old system gets changed to the new one, 0.1 won't find any amiibos as they're not on the root dir now. Thus, avoid using 0.1 after using 0.2.\\n\\nHOME button LED blink (7.x+, sadly)\\n\\nOn firmwares on 7.x or higher, performing a combo makes the HOME button blink, which is a simple and nice system to signal that a combo has been performed. Not supported on previous versions for technical limitations.\\nnfp:emu service changed, with new commands\\n\\nAlso, a remainder that the next Goldleaf version (0.6) is going to have emuiibo support, featuring real amiibo dumping to emuiibo-style and more!\\n\\n", 
            "screens": 0, 
            "extracted": 1359, 
            "version": "1.1.1", 
            "filesize": 670, 
            "details": " Virtual amiibo (amiibo emulation) system for Nintendo Switch\\n\\n## Virtual amiibos\\nVirtual amiibos go inside `sd:/emuiibo/amiibo`. For instance, an amiibo named `MyMario` would be `sd:/emuiibo/amiibo/MyMario/<amiibo content>`. They can go inside sub-directories, like `sd:/emuiibo/amiibo/SSBU/Yoshi`.\\n\\nA virtual amiibo is detected by emuiibo based on two aspects: a `amiibo.json` and a `amiibo.flag` file must exist inside the virtual amiibo's folder mentioned above. If (for whatever reason) you would like to disable a virtual amiibo from being recognised by emuiibo, just remove the flag file, and create it again to enable it.\\n\\nThe JSON file contains all the aspects and data an amiibo needs to provide to games, except a few special ones (per-game savedata, protocol and tag type...)\\n\\n## Usage and controlling\\n\\nIf you set up everything mentioned above, you're ready to use emuiibo ingame.\\n\\n**Tip:** Enable it (emulation status) before you start a game, because it does not work in some games if you enable it after launching the game! It really depends on how the game uses amiibos internally, so this guarantees emuiibo will intercept the game.\\n\\nTo see if emuiibo is working ingame, check if emuiibo is intercepting the game when it's trying to access amiibos. If it's not, try launching the game with emuiibo enabled first.\\n\\nTo open the Tesla overlay, hold down **L1 + DPAD-down** and then press **R3 (right stick)**. If you did it, the overlay will open on the left side of the screen. Now choose emuiibo.\\n\\nYou can see/control the following options in the top part of the overlay:\\n\\n- **Emulation status (on/off)**: when emuiibo's emulation status is on, it means that any game trying to access/read amiibos will be intercepted by emuiibo. When it's off, it means that amiibo services will work normally, and nothing will be intercepted. This is basically a toggle to globally disable or enable amiibo emulation.\\n\\n- **Active virtual amiibo**: it's the amiibo which will be sent to the games which try to scan amiibos, if emulation is on. If the amiibo happens to have an image, this will be displayed in the top part of the overlay.\\n\\n- **Virtual amiibo status (connected/disconnected)**: when the active virtual amiibo is connected, it means that the amiibo is always \"placed\", as if you were holding a real amiibo on the NFC point and never moving it - the game always detects it. When it is disconnected, it means that you \"removed\" it, as if you just removed the amiibo from the NFC point. Some games might ask you to remove the amiibo after saving data, so you must disconnect the virtual amiibo to \"simulate\" that removal. This is a recent feature, since emuiibo tried to handle this automatically in previous versions, causing some games to fail.\\n\\n- **Random UUID (on/off)**: when a virtual amiibo is selected, this will toggle the random UUID option on the amiibo (see above), which will make emuiibo use randomized UUIDs any time a game accesses the amiibo.\\n\\nIn the main menu of the bottom part, You can browse virtual amiibos (and thus select them) through the (sub)directories in `sd:/emuiibo/amiibo`. You can also mark some of them as favorites, which can be easily accessed from a separate menu below.\\n\\nAfter you selected an amiibo, you can see it's selected on top in the overlay and that it is *connected*.\\nA virtual amiibo being **connected** is the equivalent of holding a real amiibo figurine/card on the NFC point. To **disconnect** the amiibo (the equivalent of removing a real amiibo from the NFC point), just select the same amiibo again.\\n\\nTo go back in the menus, just press **B** button.\\n\\n**Example of use**:\\n\\n1. Open the overlay and choose emuiibo\\n2. Enable emuiibo\\n3. Start the game\\n4. Navigate to the games NFC feature to use the amiibo and activate it\\n5. Open the overlay and choose your amiibo (the amiibo will then be *connected*).\\n6. The game should now register/make use of it\\n7. If the game tells you to remove the amiibo, *disconnect* it.\\n\\n## For developers\\nemuiibo hosts a custom IPC service, also named emuiibo, which can be used to control amiibo emulation by other homebrew tools.\\n\\nThe overlay's code serves a good example to see how to control emuiibo with libnx.\\n\\n## Credits\\n- Everyone who contributed to the original nfp-mitm project (and other forks): Subv, ogniK, averne, spx01, SciresM\\n- AmiiboAPI web API, which is used by emutool to get a proper, full amiibo list, in order to generate virtual amiibos.\\n- 3dbrew for their detailed documentation of amiibos, even though some aspects are different on the Switch.\\n- LoOkYe for writing emuiibo's wiki and helping with support.\\n- AD2076 and AmonRaNet for helping with the tesla overlay.\\n- AmonRaNet for all the work he put into the overlay.\\n- AmonRaNet, Impeeza, amazingfate, qazrfv1234, shadow2560 and SimoCasa for providing/helping with translations.\\n- Thog / Ryujinx devs for reversing mii services and various of its types.\\n- Citra devs for several amiibo formats used in 3DS systems.\\n- Manlibear for helping with improvements and development of emutool.\\n- All the testers and supporters from my Discord server who were essential for making this project progress and become what it is now :)\\n\\n## License exemption\\n\\nThe Ryujinx project/team is exempt from GPLv2 licensing, and may make use of emuiibo's code licensing it under their current license.", 
            "app_dls": 126973, 
            "md5": "fb820e1fe5a85d481246991186209ab0"
        }, 
        {
            "category": "game", 
            "binary": "/switch/enigma/enigma.nro", 
            "updated": "12/06/2021", 
            "name": "Enigma", 
            "license": "GPLv2", 
            "title": "Enigma", 
            "url": "https://github.com/rsn8887/Enigma/releases", 
            "description": "A port of Enigma", 
            "author": "rsn8887", 
            "changelog": "1.16\\n\\nRe-compile with 12.0.0 support. Updating the .nro file is enough, data is the same.\\nFix crash on Switch when loading levels with rubberbands\\n\\n1.15\\n\\nFix crash on Switch when loading levels with rubberbands that re-appeared using latest toolchain\\n\\n1.14\\n\\nRe-compile with 9.0.0 support\\n\\n1.13\\n\\nFix crash on Switch when loading a level that contains rubberbands", 
            "screens": 0, 
            "extracted": 92170, 
            "version": "1.16", 
            "filesize": 74250, 
            "details": "Enigma is a puzzle game inspired by Oxyd on the Atari ST and Rock'n'Roll on the Amiga. The object of the game is to find uncover pairs of identically colored Oxyd stones. Simple? Yes. Easy? Certainly not! Hidden traps, vast mazes, laser beams, and, most of all, countless hairy puzzles usually block your direct way\u2026\\n\\n\\nDetailed information about the game can be found here: http://www.nongnu.org/enigma/index.html\\n\\nVita/Switch-exclusive features\\ngame controller support: analog joystick mouse controls and button mappings\\nfront and rear touch controls with left/right mouse click gestures\\ncomplete level packages with >3,000 levels and pre-calculated preview screenshots\\nBluetooth/USB keyboard and mouse support. The Vita supports only a limited number of BT devices, tested working with Jelly Bean BT keyboard and mouse combo ASIN:B06Y56BBYP and with the standalone Jelly Comb Bluetooth Wireless Mouse ASIN:B075HBDWCF. The Switch supports only a limited number of USB mice. Tested working with Logitech M187.\\n\\nControls (controls updated with version 1.08)\\nLeft analog stick = analog control of the marble and mouse pointer\\nSquare / Y / L-trigger = select menu items, use object in game (left mouse button)\\nTriangle / X / R-trigger = cycle through inventory items (right mouse button)\\nCross / A = ok in menu (return)\\nCircle / B = back / in-game menu (escape key)\\nStart / Plus = help screen (F1)\\nSelect / Minus = destroy marble and remove one life (F3)\\nR-trigger + Select / R-trigger + Minus = restart level (shift-F3)\\n\\nDpad in menu = quick-select menu items (arrow keys)\\nDpad left/right in game = quick-change mouse speed\\nDpad up/down in game = cycle through previous messages\\n\\nFront touch = analog control of the marble and mouse pointer\\nRear touch = analog control of the marble and mouse pointer (Vita only)\\nSingle finger tap = select menu items, use object in game (left mouse button)\\nDual finger tap = cycle through inventory items (right mouse button)\\n\\nDual finger tap works by holding one finger down and quickly tapping with a second finger somewhere else.\\n\\nMouse sensitivity can be adjusted in options or in-game via dpad left/right. The setting affects analog joystick, touch, and real bluetooth/USB mice.", 
            "app_dls": 1032, 
            "md5": "dee9b9d21a8b626a9bfec88798b7f04c"
        }, 
        {
            "category": "game", 
            "binary": "/switch/spacenx.nro", 
            "updated": "04/02/2020", 
            "name": "spacenx", 
            "license": "MIT", 
            "title": "Space Game NX", 
            "url": "https://github.com/vgmoose/spacenx", 
            "description": "Shoot rocks in outer space, and stuff", 
            "author": "vgmoose", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 766, 
            "version": "1.1", 
            "filesize": 325, 
            "details": "This is a port of Space Game - https://github.com/vgmoose/space to the Switch, using libtransistor.\\nThe game is currently fully playable, but there's no music, enemy count is limited to compared to the Wii U version, and some Switch-specific features are planned.", 
            "app_dls": 3807, 
            "md5": "f3a419dc378c951dfbf1c951da5cd766"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Klooni1010.nro", 
            "updated": "21/06/2022", 
            "name": "Klooni1010", 
            "license": "GPLv3", 
            "title": "Klooni 1010", 
            "url": "https://github.com/TheLogicMaster/Klooni1010", 
            "description": "libGDX game based on the original 1010!", 
            "author": "TheLogicMaster", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 25848, 
            "version": "0.8.6", 
            "filesize": 9100, 
            "details": "Klooni 1010! is an open source copy of 1010! with the same game-play dynamics of the original game. In-app purchases and ads have been removed, and the UI and sound assets have been replaced.\\n\\nThis game has been ported to Switch using SwitchGDX.\\n\\nPort: TheLogicMaster\\nRemake: LonamiWebs\\nOriginal game: Gram Games", 
            "app_dls": 408, 
            "md5": "bb5e2420dc9297553a6d3a8248efe77a"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/vgedit/vgedit.nro", 
            "updated": "22/10/2022", 
            "name": "vgedit", 
            "license": "GPLv3", 
            "title": "vgedit", 
            "url": "https://github.com/vgmoose/vgedit/releases", 
            "description": "Text editor for the Nintendo Switch", 
            "author": "vgmoose", 
            "changelog": "v2.1\\n\\nThe Switch build has no significant changes. It is a version Bump\\n\\nv2.0.1: Small bugfix to not move the cursor while holding a directional button with the on-screen keyboard up.\\n\\nv2.0: New Features:\\n- Line numbers along left side\\n- Can load much larger text files\\n    - Uses SDL_FontCache for improved performance\\n- New menu bar while editing file\\n    - Find and jump to position within file\\n    - Undo/redo history state tracking\\n- Create new file or folder while browsing\\n- USB Keyboard support\\n    - Only in Insert mode (when on-screen keyboard is showing)\\n    - Can press Alt to toggle on-screen keyboard\\n\\nBugfixes:\\n- Proper line wrapping for long lines\\n- Properly affix cursor within text file\\n- File/folder list is alphabetized now\\n- Better support for tabs within file\\n- Scroll to cursor position when typing\\n- Unsaved changes need confirmation when exiting\\n- Allow copy/paste between two files\\n\\n", 
            "screens": 3, 
            "extracted": 10426, 
            "version": "2.1", 
            "filesize": 4089, 
            "details": "vgedit is a Video Game text Editor for the Switch. It has basic file browsing functionality (SD card only) and allows text files to be edited directly using either the touch screen or a controller.", 
            "app_dls": 22697, 
            "md5": "6f3c8c08188e7a8435bad38cedbc1464"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Payload_launcher/Payload_Launcher.nro", 
            "updated": "21/11/2021", 
            "name": "Payload_launcher", 
            "license": "MIT", 
            "title": "Payload_Launcher", 
            "url": "https://github.com/suchmememanyskill/Payload_Launcher", 
            "description": "Launch payloads via the reboot-to-payload system", 
            "author": "Such Meme, Many Skill", 
            "changelog": "3.0.2\\n\\nAnother recompile. Fixes issue #13. I have no idea about the current state of the application. Please use something else than this tool\\n\\n3.0.1\\n\\nrecompile to work with atmosphere 0.19.0+\\n\\n3.0.0\\n\\nThe app has been rewritten (again) to make use of SDL, so everything looks pretty, and not like a glorified console.\\n\\n2.0.2\\n\\nFix heap size so no gui apps crash after opening payload_launcher\\n\\n2.0.0\\n\\nAdds some more colours to the ui\\nLots of the code completely rewritten to not be 1 giant mess\\nPayload favourites are now handled by adding it's location to the ini file, so now it doesn't generate a favourites.payload besides the nro.\\nNew logo\\nAdded fast scroll with the right joystick\\nonly 20 payloads a folder? good one, this version can load up to 500.\\n\\nv1.1.4\\n\\nReverts dax's pr to cleanup the strings after using my app\\n\\n\\nv1.1.3\\n\\nFix paths sometimes breaking (thanks dax)\\nChange heap init code to only be ran when opening the keyboard\\n\\nv1.1.2\\nAdded a keyboard to manually put in a path\\n\\n1.1.0\\n\\nAdded the support to change which folder the program should look to find the payloads.\\nBy default, the app will ask the user between hekate's payload folder, argon-nx's payload folder, the root folder and the /payloads folder. You can set a path manually by navigating to the payload_config.ini generated in the same folder as the nro.", 
            "screens": 0, 
            "extracted": 8007, 
            "version": "3.0.2", 
            "filesize": 3189, 
            "details": "With this app you can list a folder, and launch payloads inside of it. You can also favourite a payload for quick launching with X, and set the currently selected payload as atmosphere's reboot payload by pressing -.", 
            "app_dls": 51289, 
            "md5": "19e17d618c1f38a694dc63099747ae21"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/nxmp/nxmp.nro", 
            "updated": "06/01/2024", 
            "name": "NXMP", 
            "license": "n/a", 
            "title": "nxmp", 
            "url": "https://github.com/proconsule/nxmp/releases", 
            "description": "Video player for Nintendo Switch", 
            "author": "proconsule", 
            "changelog": "0.9.0\\n\\nAdded\\nAdded Brazilian Portuguese language\\nAdded deko3d Backend capable of 4K HDR 60fps decoding (experimental)\\nLight/Dark Theme (mimic the native HOS UI)\\nAdded a trivial image viewer instead of using mpv (feature zoom/pan)\\nAdded ZL/ZR to show prev/next image\\nAdded Archive browsing support using libarchive as a devoptab mount\\nAdded M3U parser as a devoptab mount\\nChanges\\nsamba,nfs,sftp,ftp,libarchive are now implemented as devoptabs mounts\\nRemoved\\nUPNP is disabled since need major rewrite of code\\nRemoved old themes class (will be replaced with new one when ready)\\nRemoved old ttf font used (now it uses the system default font)\\nFixed\\nGhosting was mitigated but still present in 0.8.2 now is fixed forever\\nKnonw Issues\\ndeko3d Backend is experimental and can have issues or missing some features\\nShader deinterlace is not working on deko3d backend\\nShadermania is not working on deko3d backend\\nMiniplayer is not working on deko3dbackend\\n\\n0.8.2\\n\\nAdded\\nAdded initial i18n (More than 50% of text is i18n ready, be patient soon will be 100%)\\nItalian-Spanish-Japanese-Deutsch-French-Chinese(Simplified)-Korean native translation\\nDefault file ordering can be changed in Settings menu\\nError messages on network share connection failure\\nLoading splash screen\\nExit Choice between HB-Menu and Home\\nChanges\\nUpdate ImGui to last release\\nMoved from SDL to GLFW for window context\\nTheme ini structure changes\\nSQLite vfs using native calls\\nFixed\\nVideo Ghosting Fixed\\nSubFont Color fix\\nDatabase Open/Close Fix\\nTheme support is back\\nKnonw Issues\\nNXMP start loading times increased due to importing more font glyphs\\n\\n0.8.1\\nA quick release to fix a issue with audio playback.\\nHere is the short changelog:\\n\\nAudio File playback crash fixed\\nFixed a typo error in popups\\n\\n0.7.0\\nAfter a long time a new release! This time with a Huge News! HW Decoding!\\n\\nChangelog:\\n\\nHW Decoding for (H264,HEVC,VP8,MPEG2) up to 4K HDR@30fps thanks to averne for the code\\nAdded AV1 Decoder (SW Decoding)\\nAdded Network Share Add Menu (you can now add net share from NXMP)\\nAdded Context Menu on Network Share Browser (Can Move Up/Down Delete Share)\\nFixed Docked Mode Visual (now should be nearly the same as Handled Mode)\\nUpdated SMB2 lib (should work far better) thanks to averne for the patch\\nUpdated libusbhsfs to current master\\nAdded support for Images (gif,png,jpg)\\nRemoved Win32 port (probably was the only one who use it)\\nAdded Power and Dec Stats (with all relevant info)\\nAdded a scrolling text into playerWindow controls\\nChanged Battery Icon code (now show percentage also)\\nAdded emuoverrides and loglevel into config.ini (emuoverrides exclude some part of code so can be run on emulators)\\nChanged how Battery info is fetched (in a more sane way)\\nCleanup a bit the messy code (just a bit)\\nMany small changes inside to make things more sane\\nKnown Issues:\\n\\nVP9 is not working right now\\nThemes are not working right now (will be in future releases)\\nIs a big new release i expect can be some other issues. They will be fixed asap.\\n\\n\\n0.6.3\\n\\nAdded battery indicator to the right menu.\\n\\n0.6.1\\n\\nUPNP Support\\nNFS Support\\nTheme support (Experimental)\\nChoose default subtitle language.\\nImplemented Overclock (Enable and disable with L3)\\nThe overclock will be activated automatically with Shadermania enabled.\\nVideo Interpolation Support (4 different methods).\\nFixed bug where you lose window focus if you press the touch screen, with touch control disabled.\\nFixed bug where if you changed the color of the subtitle and went to save the settings, the subtitle would be completely black.\\nAdded function to disable subtitle Embedded Styles in the subtitles.\\nAdded function to modify the size of the borders in the subtitles.\\nAdded function to customize the intensity of Shadows in subtitles.\\nAdded function to customize the distance of Shadows in subtitles.\\nAdded function to change colors to subtitle borders.\\nAdded Subtitle Blur Intensity.\\nAdded option to disable swiping, keeping \"touch control\" enabled.\\nAdded subtitle scaling (Some subtitle formats do not support Font Size, so scaling the size has been implemented.)\\nIn the Subtitles tab, the \"Reset to Default\" feature has been moved to the top.\\n\\n0.6.0\\n\\nAdded trivial playlist system\\nAdded Touch Controls\\nAdded SFTP protocol\\nAdded Samba protocol\\nAdded Show/Hide Hidden Files\\nShow Resume/Viewed files in file lists\\nAdded \"Completed\" column into database\\n\\n0.5.1\\n\\nFix for db not saved on hard exit the app\\nShaderMania useless but fun with shaders\\nCustom Sub Font Size\\nShow File selection during playback with - button\\nVolume Up/Down with rstick\\n\\n0.5.0\\n\\nSQLite database for positions resume\\nNew Player GUI\\nEQ presets (in eqpresets.ini)\\nHTTPS and HLS support\\nFLAC extension added\\nFixed negative pos seek\\nAdded custom port support in Enigma2\\nChanged event loop (to fix some bugs)\\n\\n0.4.1\\n\\nAdded Audio equalizer (5 and 18 band)\\nSubtitle Sub-Menu (Sub Position & Sub Delay)\\nGPU Deinterlace (wow it works!)\\nfixed right menu not disappear on file end\\nnew icons thanks bodyXY\\n\\n0.4.0\\n\\nadded Auto Audio Language Selection\\nadded Image Controls\\nadded Audio Controls\\nchanged USB device list aspect\\nfixed empty folder crash\\n\\n0.3.0\\n\\nTrack selection (video/audio/sub)\\nCustom Seek Values (in config.ini or via Settings Menu)\\nAspect Ratio Control (with custom ratio)\\nFix (disable Sleep Mode/Dimming on media playback)\\nSmall fiexs\\n\\n0.2.1\\n\\nfixed FTP navigation\\nNetwork/Enigma are not shown if no source provided\\nEnigma2 preliminary EPG support\\nUSB should not crash anymore\\n\\n0.2.0\\n\\nAdded USB support\\nAdded startpath in config file\\nRewrite browsing system\\nGeneral bug fixes\\n\\n0.1.0\\n\\nFirst public beta\\n\\nLocal File browser\\nHTTP file browser (tested on apache directory listing)\\nFTP file browser\\nEnigma2 support\\nthis is a public beta, can have any kind of bugs!", 
            "screens": 4, 
            "extracted": 118059, 
            "version": "0.9.0", 
            "filesize": 69972, 
            "details": "NXMP is an open-source Nintendo switch media player\\n\\nIt is based on MPV and FFMPEG, it supports a wide range of file format\\n\\nCurrently, it supports:\\n\\n- Local File Browser\\n- HTTP and FTP Browser (you can add as many sources as you like)\\n- Enigma2 Decoder support (for viewing tv channel from the decoder)\\n- USB support up to 32 devices (supporting FAT NTFS and EXT4) thanks to the libusbhsfs\\n\\n\\nButtons Mapping\\n\\n- A select (play/pause during playback)\\n- B back (stop during playback)\\n- Y Main Menu\\n- X show OSD (during playback)\\n- R L ZR ZL (seek +/- during playback)\\n- + Exit NXMP\\n- R Stick Button Toggle Masterlock (during playback, only A button will work)\\n- Dpad Right (during playback show right menu)\\n- Dpad Left (during playback close right menu)", 
            "app_dls": 45402, 
            "md5": "21e559f4bce7f328f091b81ddeedcb12"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/delve/delve.nro", 
            "updated": "26/11/2020", 
            "name": "delve", 
            "license": "GPLv3", 
            "title": "Delve", 
            "url": "https://github.com/noirscape/delve/releases", 
            "description": "A simple terminal based gopher client", 
            "author": "noirscape", 
            "changelog": "1.1\\n\\nNew features:\\n\\nAdded keyboard support. swkbd already supported it, but the menus can now be navigated entirely with a keyboard. Use F1 to open the command menu, down to scroll down and F2 at any point to exit.\\nQuick recap of the controls (also in the readme):\\n\\nPress - to open the system keyboard to enter commands (see the help command for more on the commands you can use).\\nPress down while the pager is active (there's a message about the pager) to display the next bit of text.\\nTo use, simply extract the sd.7z and merge the resulting folder with your sdroot.", 
            "screens": 0, 
            "extracted": 355, 
            "version": "1.1", 
            "filesize": 154, 
            "details": "delve - A simple terminal gopher client\\nThis is a port of the delve gopher client to the Nintendo Switch. Requires Homebrew to run.\\n\\nHas slight differences with the original delve, which are described below.\\n\\nDifferences with the original delve\\nPager works as follows:\\nPress the down key to show the next piece of information.\\nPress - to enter a command at any point.\\nNo support for command histories (incompatible with swkbd).\\nDefault config file is loaded from /switch/delve/delve.conf.\\nNo support for custom type handlers.\\nExtra marker to indicate the end of a command.\\n", 
            "app_dls": 1469, 
            "md5": "f0a3e9bbd7725f8a21919b50f1efa7b4"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "31/05/2020", 
            "name": "sys-http", 
            "license": "GPLv3", 
            "title": "sys-http", 
            "url": "https://github.com/zaksabeast/sys-http/releases", 
            "description": "Communicate with the Nintendo Switch using HTTP", 
            "author": "zaksabeast", 
            "changelog": "0.1.0\\n\\nCORS headers to allow web browsers to work with sys-http\\n/settings/language to get the console language", 
            "screens": 0, 
            "extracted": 501, 
            "version": "0.1.0", 
            "filesize": 384, 
            "details": "This is a sysmodule that allows communicating with the Nintendo Switch using http. This sysmodule brings a few advantages that don't currently exist:\\n\\nHTTP is a standardized protocol with well defined uses\\nMost languages have at least one http library, so there's not a need to write a wrapper around raw TCP\\nWeb browsers can use HTTP, but not raw TCP (without disabling security rules)\\nPotential future use cases:\\n\\nRead Pokemon Sword/Shield den seeds directly into @Admiral-Fish's RaidFinder or @leanny's Seed Checker\\nDisplay Animal Crossing turnip prices in a mobile app\\nShow updating game values during a Twitch live stream\\nSetup a PKHeX REST API and live edit Pokemon from a website\\nCreate a Discord bot that allows users to interact with the console\\n\\nConnecting\\nsys-http uses port 8080\\nhttps is not currently used\\nAvailable routes\\nAll number query parameters will be in hex format for consistency.\\n\\nThese are the currently available routes:\\n\\n/ - Health check to see if the sysmodule is running\\n/refreshMetadata - Refreshes the game metadata used to power other routes\\n/titleId - Returns the title Id of the game\\n/readHeap?offset=<hex>&size=<hex> - Read values from the heap", 
            "app_dls": 2386, 
            "md5": "640effc95e669cdabee9c63ce62023b7"
        }, 
        {
            "category": "tool", 
            "binary": "none", 
            "updated": "16/04/2023", 
            "name": "AARebootApplet", 
            "license": "n/a", 
            "title": "AA-Reboot Applet", 
            "url": "https://github.com/ThatFinnDev/AA-Reboot-APPLET", 
            "description": "Applet for AA-Reboot", 
            "author": "ThatFinn", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 129, 
            "version": "release", 
            "filesize": 80, 
            "details": "This is an applet forwarder for the my AA-Reboot application, which reboots to a hekate.bin payload on the root of the sd card.\\n\\nTo use this applet forwarder, make sure you have AA-Reboot installed and a hekate.bin file on the root of your sd card. You need a linked/fakelinked user account too because otherwise the applet won't start.\\n\\nTip: If you have only one user, you can activate \"Skip Selection Screen\" in the settings, to start the AA-Reboot instantly.\\n\\nMariko and OLED variants are untested\\n\\nKnown Limitations:\\nIt replaces LoginApplet, the ShareApplet and the LobbyApplet too because it's the same application. (This shouldn't matter since you are not accessing those applets while in CFW)", 
            "app_dls": 1600, 
            "md5": "9e21ac743906848d455e76d4ee4d0123"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Mod_Manager/Mod_Manager_0.3.nro", 
            "updated": "28/08/2019", 
            "name": "Mod_Manager", 
            "license": "GPLv3", 
            "title": "Mod-Manager", 
            "url": "https://github.com/Syzygye/Mod-Manager/releases", 
            "description": "LayeredFS \"mods\" folders manager.", 
            "author": "Syzygye", 
            "changelog": "0.3\\n\\nUpdated the mods limit to 38.\\n\\n0.2\\n\\nAdd sxos compatibility.", 
            "screens": 0, 
            "extracted": 255, 
            "version": "0.3", 
            "filesize": 107, 
            "details": "Enable and disable LayeredFS mods quickly.\\n\\nCompatible with Atmosphere and Sxos.", 
            "app_dls": 7637, 
            "md5": "d02700ebf57d264b2dd91c284cdc05c7"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "18/09/2019", 
            "name": "BootSoundNX", 
            "license": "Apache v2", 
            "title": "BootSoundNX", 
            "url": "https://github.com/KranKRival/BootSoundNX/releases", 
            "description": "A system module that plays sound on the nintendo switch boot !", 
            "author": "KranKRival", 
            "changelog": "1.1.0\\n\\n1.TitleID has changed - therefor you need to delete the old directory from version 1.0.0 atmosphere/titles/AA200000000002AA\\nsound/boo\\n2.bootsound path changed to sdmc://config/BootSoundNX/sound/bootsound.mp3", 
            "screens": 0, 
            "extracted": 509, 
            "version": "1.1.0", 
            "filesize": 359, 
            "details": "A system module that plays sound on the nintendo switch boot !\\n\\nNotes\\nMP3 Only!\\n\\nChange Sound\\n\\nto replace the boot sound replace it with your sound in sdmc://config/BootSoundNX/sound/bootsound.mp3\\n\\ncredits: jakibaki", 
            "app_dls": 4501, 
            "md5": "b5b34d83a3184b9ad35f2603ba9f987b"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Avatool/Avatool.nro", 
            "updated": "28/01/2024", 
            "name": "Avatool", 
            "license": "GPLv3", 
            "title": "Avatool", 
            "url": "https://github.com/J-D-K/Avatool/releases", 
            "description": "Homebrew tool to overwrite Switch account avatars.", 
            "author": "J-D-K", 
            "changelog": "2.1.0\\n\\nNow uses a variation of JKSV's newest menu code to prevent crashes from trying to read out of bounds.\\nNow prevents users from continuing to shutdown the account service without avatars in their sdmc:/avatars/\\nFurther code revisions\\nWith that out of the way, I'm starting to feel that this may be the final version. Avatool is much cleaner under the hood and I'm much happier with it. It gets the job done in a quick and dirty way and that's what it was made to do. Thanks everyone that still uses it.\\n\\n-JK\\n\\n2.0.0\\n\\nSurprise! I bet you never thought this would happen.\\n\\nA major portion of the app has been rewritten and runs on the latest Switch firmware\\nUses JKSV's newest graphics file/SDL instead of writing directly to the framebuffer\\nNOTE: It appears my old menu code can be buggy. This will be replaced in the future once JKSV's rewrite is completed. I will also keep an eye out for issues and bugs since I have some extra time for now.\\n\\n1.0.2\\n\\nBuilds and runs again. Still more I want to do.", 
            "screens": 0, 
            "extracted": 8754, 
            "version": "2.1.0", 
            "filesize": 3525, 
            "details": "Avatool relies on shutting down the Switch's account service. This will result in a crash eventually. Once this is done:\\n\\nL and R change the target avatar\\nUp and Down control menu\\nA overwrites targetted avatars\\nAvatars are 256x256 jpg images. Place them in sdmc:/avatar/ for Avatool to find them.", 
            "app_dls": 3613, 
            "md5": "a4b4940a0f791149088f3e8d2ceb5e3e"
        }, 
        {
            "category": "_misc", 
            "binary": "none", 
            "updated": "02/11/2024", 
            "name": "EdiZonOverlay", 
            "license": "GPLv2", 
            "title": "EdiZon-Overlay", 
            "url": "https://github.com/proferabg/EdiZon-Overlay", 
            "description": "Toggle cheats in a convenient overlay.", 
            "author": "proferabg, WerWolv", 
            "changelog": "1.0.9\\n\\nSpecial thanks to @ppkantorski for this update!\\n\\nUpdated libnx.\\nNow utilizing libtesla (Ultrahand) & libultra.\\nCustom wallpaper / theme support.\\nUsers can override the system wallpaper / theme with sdmc:/config/edizon/wallpaper.rgba and sdmc:/config/edizon/theme.ini.\\nFaster opening / game detection.\\nFix for local IP calls.\\nTemperature readings are now done through i2c.\\n\\n1.0.8\\n\\nUpdated libnx\\nFixed temperature rendering\\nAdded Enabling Cheats by Default on Overlay Open\\n\\n1.0.7\\n\\nSquashed some more crashing issues!\\nFixed mismatched cheats when hiding and showing the overlay.\\nAdded a way to disable submenu logic for those who requested it.\\n\\n1.0.6\\n\\nUsing latest libnx and libtesla which fixes most crashes.", 
            "screens": 0, 
            "extracted": 940, 
            "version": "1.0.9", 
            "filesize": 366, 
            "details": "EdiZon-Overlay is a Tesla-Menu overlay that enabled you to toggle cheats without ever having to leave the game. It also provides useful stats like temperatures, clock speeds, local IP address, and Wi-Fi signal strength.", 
            "app_dls": 26834, 
            "md5": "dd4f109e09ef7f658dcc09cf45afdc05"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Hurrican/Hurrican.nro", 
            "updated": "05/02/2024", 
            "name": "Hurrican", 
            "license": "n/a", 
            "title": "Hurrican", 
            "url": "https://github.com/rsn8887/Hurrican/releases", 
            "description": "Hurrican for Nintendo Switch", 
            "author": "rsn8887", 
            "changelog": "1.04\\n\\nFixed joystick array overflow to properly fix crashes (thanks DeltaV)\\n\\n1.03\\n\\nFixed crashes in tutorial and later\\n\\n1.02\\n\\nRe-compiled with 12.0.0 support\\n\\n1.01\\n\\nRe-compile with 9.0.0 support\\n\\n1.00\\n\\nFirst Release", 
            "screens": 0, 
            "extracted": 68353, 
            "version": "1.04", 
            "filesize": 41671, 
            "details": "This is my Switch port of Hurrican, a freeware jump and shoot game created by Poke53280 that is based on the Turrican game series. Blast your way through nine action-packed levels filled with different enemies and powerups.\\n\\nEverything needed to play is already included in the archive.\\n\\nPort by @rsn8887.\\n\\nVisit my Patreon: https://www.patreon.com/rsn8887\\n\\nTHANKS\\n\\nThanks to Poke53280 team for making such a great game, releasing the source, and making it freeware.\\n\\nThanks to the other developers such as DKS and Pickle for extending the Hurrican source and adding SDL/OpenGL-ES support and more.\\n\\nThanks to ScHlAuChi for telling me about this.\\n\\nThanks to devkitPro for making Switch homebrew possible.\\n\\nThanks to my supporters on Patreon: Andyways, CountDuckula, Jason Crawford, Greg Gibson, Jesse Harlin, \u00d6zg\u00fcr Karter, Matthew Machnee, Milenko, and RadicalR.\\n\\nControls\\nLeft analog stick = walk/duck/aim (hold up/down to look)\\nDpad = walk/duck/aim (hold up/down to look)\\nY = shoot\\nB = jump\\nX = hold for lightning beam (control angle with stick/dpad left/right)\\nA = powerline\\nR = grenade\\nL = cycle weapon type\\nZR = smart bomb\\nCurrent Limitations\\nDon't try to remap buttons in the controls menu, it asks for a button press, but doesn't react to Joycon input. The only way out is to force quit the game with the home button. If you mess up preferences, just delete /switch/Hurrican/hurrican.cfg\\n\\nThe tutorial level (if you select \"Start Tutorial\" instead of \"Start New Game\") currently crashes just after loading.", 
            "app_dls": 2437, 
            "md5": "4e4db6fd9ecf2ac2b79b9757ba78ab5a"
        }, 
        {
            "category": "game", 
            "binary": "/switch/ttt2.nro", 
            "updated": "16/07/2018", 
            "name": "tictactoe", 
            "license": "none listed", 
            "title": "TicTacToe for NX", 
            "url": "https://gbatemp.net/threads/alpha-tictactoe-for-nx.497196/", 
            "description": "Tic Tac Toe", 
            "author": "SH3RLOCK", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 105, 
            "version": "Alpha", 
            "filesize": 39, 
            "details": "I developed an Alpha for a Tic Tac Toe on Nintendo Switch. Someone interested to try it out? I don't have a Switch with 3.0.", 
            "app_dls": 896, 
            "md5": "8067c3ad348f0dd9a75de67c596088b0"
        }, 
        {
            "category": "game", 
            "binary": "/switch/gzdoom/gzdoom.nro", 
            "updated": "14/07/2023", 
            "name": "gzdoom", 
            "license": "GPLv3", 
            "title": "GZDoom", 
            "url": "https://github.com/fgsfdsfgs/gzdoom/releases", 
            "description": "GZDoom adds an OpenGL renderer to the ZDoom source port", 
            "author": "fgsfdsfgs", 
            "changelog": "nx4.11pre-2\\n\\nfixed console input.\\n\\nnx4.7.1-1\\n\\nrebased port on latest upstream (4.7.1+);\\n- this means the GLES2 renderer is now available and functioning, which might benefit performance;\\n- the game should also now default to GLES2;\\nrebuilt with newest libraries.\\n\\nnx4.6pre-7\\n\\nrebased port on latest upstream (4.5.0+);\\nrebuilt with newest libraries.\\n\\nnx4.4pre-6\\n\\nmerged latest upstream changes (4.3.3+);\\nyou can now enter console commands by hitting A in the console;\\nincreased amount of possible PWADs in the launcher to 10\\n\\nnx4.3pre-5\\n\\nmerged latest upstream changes (4.2.1+);\\nrebuilt with latest libnx (9.0.0 support).\\n\\nnx4.3pre-4\\n\\nmerged latest upstream changes (4.2+);\\nthat seems to have fixed the not-saving-joystick-settings bug.\\n\\nnx4.2pre-3\\n\\nmerged latest upstream changes (4.1.3+).", 
            "screens": 0, 
            "extracted": 40548, 
            "version": "nx4.11pre-2", 
            "filesize": 23423, 
            "details": "GZDoom is a modder-friendly OpenGL source port based on the DOOM engine.\\n\\nPlace supported IWAD (eg. doom2.wad) files in sd:/switch/gzdoom/iwads\\nThis package comes with Freedom wads.\\n\\nAny custom files (PWADs, PK3s, DEHs, LMPs, whatever) should be placed into the gzdoom/pwads folder.\\nThe launcher has predefined default profiles for most supported IWADs. You can also add your own profiles by pressing Y on the main tab. Any changes will be saved to gzdoom/launcher.ini.\\nThe launcher will only detect files in gzdoom/iwads and gzdoom/pwads. You can use the Override RSP file option if you have to load files from other locations.\\nMultiplayer does work, however only Switch <=> PC multiplayer has been tested. You can start a netgame from the launcher. Don't forget to change the player number from 1 and read the warning message.\\nThe IP that's placed in the address field by default is your Switch's local IP, others can use that to connect to it if they're on the same network.\\nOnly the player that hosts the game needs to set gameplay settings, however everyone has to pick the same set of custom files as the host.\\nFatal errors are logged into error.log. You can also turn on logging in the launcher.", 
            "app_dls": 6088, 
            "md5": "7c37bf69de0efb4303bea3ec49c51715"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/appstore/appstore.nro", 
            "updated": "23/03/2023", 
            "name": "appstore", 
            "license": "GPLv3", 
            "title": "Homebrew App Store", 
            "url": "https://github.com/vgmoose/appstorenx", 
            "description": "Download and manage homebrew apps", 
            "author": "4TU Team", 
            "changelog": "2.3.2\\nFixes 'Most Recent' sorting order\\nAll other fixes in 2.3.1 (see below)\\n\\n2.3.1\\nAll Platforms:\\n\\n- Uses full qwerty keyboard on Search/Feedback pages\\n- Adjustments to the App details page:\\n  - View multiple Screenshots when available\\n  - List to-be-installed files with button press\\n  - Change uninstall button to X, to prevent accidental clicks\\n- Faster zip extraction for large packages (Thanks @Maschell!)\\n- Allow changing of music by replacing background.mp3 file\\n  - MP3 title and artist are now displayed in the UI\\n- Adds SFX when moving cursor through menus\\n- Save and remember music/sfx toggle setting\\n\\nSwitch Specific:\\n\\n- Add background music (Slimers (T-T)b cover by drewinator4)\\n  - https://www.youtube.com/watch?v=Tb02CNlhkPA\\n- Default music playback to OFF\\n  - Switch users get upset when the speakers make noise\\n- Displays a warning notice if the user launches in Applet mode\\n- Change sidebar color from gray to red\\n\\n2.2\\n- No more loading bar! Icons load on the fly\\n- Recovery mode added, accessed by pressing repeatedly L/R immediately after launching\\n- Switched to Chesto/resinfs for drawing UI and asset storage\\n- Updated Credits/About Screen\\n- Bugfixes around UI and unpacking files\\n\\n2.1\\n- Install and browse themes directly\\n- Launch NROs directly after installing\\n- Faster downloads!\\n- Exit using minus button\\n\\n2.0\\nNew Features:\\n- Search functionality with on screen keyboard\\n- Allow sorting of app list by: most recently updated, download count, alphabetically, download size, and randomly\\n- Add new \"Advanced\" category including some system/hekate modules\\n- Redesigned \"App Details\" screen to show much more information about each app such as long scrollable description, download count, download size, and last updated date\\n- Added feedback reporting for any app to collect data about what works and doesn't work. This feedback will be passed along to the app's author if appropriate\\n\\nEnhancements:\\n- All touch and controller controls refactored and more responsive to input (highlights, buttons, etc)\\n- Add four-column \"wide\" view activated by pressing L or ZL in the app listing\\n- New offline screen when internet connection isn't detected instead of empty progress bar\\n- List other apps by the same author from the details page\\n\\nBug fixes:\\n- Switched to curl instead of old hacky HTTP downloading curl\\n- Empty folders are now removed upon uninstallation of a package\\n- Corrupt cached icons should no longer freeze loading\\n- Uses romfs for storing images instead of an external folder\\n- Some settings for cleaning up any empty folders leftover by the old app and wiping the icon cache", 
            "screens": 0, 
            "extracted": 13871, 
            "version": "2.3.2", 
            "filesize": 7603, 
            "details": "The Homebrew App Store is graphical frontend to the get package manager for downloading and managing homebrew on the Nintendo Switch. This is a replacement to the Wii U Homebrew App Store.\\n\\nFor further information you can visit source repo here : https://gitlab.com/4tu/hb-appstore", 
            "app_dls": 285997, 
            "md5": "a43041d65cb85ddb6ec7fc0e529b36b4"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/NX-ntpc/nx-ntpc.nro", 
            "updated": "13/02/2021", 
            "name": "NX-ntpc", 
            "license": "The Unlicense", 
            "title": "NX-ntpc", 
            "url": "https://gbatemp.net/threads/time-syncing-app-sysmodule-for-offline-switch.544227/", 
            "description": "NTP client for the Switch.", 
            "author": "thedax", 
            "changelog": "https://github.com/thedax/NX-ntpc/releases\\n\\nThis release has had its source code removed by its developer on github and therefore has been moved to the legacy category until it becomes active once more.\\n\\n1.0.4\\n\\nAttempt to fix the rare random hang when waiting for server response\\nNow displays error messages if you're not connected to the internet\\n\\n1.0.2\\n\\nRefactor printing.\\nAsk user if they wish to enable internet time sync and reboot to fix the time if time sync isn't enabled, otherwise the time will automatically update correctly, even if Nintendo's servers are blocked.\\nWe still can't set the user clock directly, but this is as good as it gets for now.", 
            "screens": 0, 
            "extracted": 372, 
            "version": "1.0.4", 
            "filesize": 139, 
            "details": "A crude NTP client for the Switch.\\n\\nWhat's it do?\\nIt contacts a time server at http://ntp.org and sets the Nintendo Switch's clock appropriately.\\n\\nRun the NRO from the hbmenu, or send it over nxlink. An internet connection is required for this application to work, but it does not contact Nintendo's servers, so it should be friendly in 90DNS and other Nintendo-blocked environments. If \"Synchronise Clock via Internet\" (in System Settings -> System -> Date & Time) is enabled before launching this application, the time will automatically update correctly on the console's Home Screen. If it is not enabled, the application will ask if you wish to enable it, and then reboot afterward to correct the time, or offer a way to exit without enabling internet time sync.", 
            "app_dls": 3130, 
            "md5": "572cadc6a61b75193142867308a84784"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "10/05/2023", 
            "name": "nx-ovlloader", 
            "license": "n/a", 
            "title": "nx-ovlloader", 
            "url": "https://github.com/WerWolv/nx-ovlloader/releases", 
            "description": "Host process for loading Switch overlay OVLs", 
            "author": "WerWolv", 
            "changelog": "1.0.7\\n16.0.0 Support\\n\\n1.0.6\\n\\nA check preventing Tesla from running (and crashing / causing issues) on firmwares bellow 9.0.0 went missing with the last release. This re-adds that check again. Thanks to @friedkeenan\\n\\n1.0.5\\n\\nIncreased stack and heap size a bit again to prevent issues people were facing with certain overlays\\n\\n1.0.4\\n\\nUpdate to work with firmware version 10.0.0\\nReduced stack size to 0x10000 and heap to 0x400000\\nPLEASE MAKE SURE TO DELETE THE /atmosphere/contents/010000000007E51A FOLDER WHEN UPDATING!!!\\n\\n1.0.3\\n\\nBefore, libtesla exhausted service sessions which made qlaunch crash on firmwares lower than 9.0.0. nx-ovlloader now gracefully exits instead of making qlaunch crash.\\n\\nIf you're using a firmware lower than 9.0.0, please update!\\n\\n1.0.2\\n\\nThis version allows changing of the default overlay's argvs without having to overwrite the default nro path using envSetNextLoad\\n\\n1.0.1\\n\\nIf there's no ovlmenu.ovl present on the SD card, instead of fataling Tesla now gracefully exits and will try loading it again on next restart (or when enabled by the Kosmos Toolbox for example)", 
            "screens": 0, 
            "extracted": 356, 
            "version": "1.0.7", 
            "filesize": 156, 
            "details": "Host process for loading Switch overlay OVLs (NROs)\\n\\nThis is the loader service of the Tesla ecosystem. It's derrived from the default nx-hbloader. When being run, this service automatically tries to chainload /switch/.overlays/ovlmenu.ovl, the Tesla Menu. From there on it will load and switch between different overlays on request.", 
            "app_dls": 73001, 
            "md5": "f937497ce6c5115fb8e7fd667fbe1500"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/gagorder/gag-order.nro", 
            "updated": "17/07/2018", 
            "name": "gagorder", 
            "license": ".", 
            "title": "Gag Order", 
            "url": "https://github.com/Adubbz/Gag-Order/releases", 
            "description": "Patches SuperNag", 
            "author": "Adubbz", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 284, 
            "version": "0.1.0", 
            "filesize": 103, 
            "details": "Initial release. Expect a lack of polish, and possible issues. Tested only on 4.1.0.\\n\\nDisclaimer:\\n\\nI am not responsible for any issues or damage this causes.", 
            "app_dls": 6036, 
            "md5": "818d389723d11a798e2d0f2a1d5a222b"
        }, 
        {
            "category": "_misc", 
            "binary": "/switch/ascii-starwars.nro", 
            "updated": "10/11/2024", 
            "name": "ASCIIStarWars", 
            "license": "MIT", 
            "title": "ASCII Star Wars", 
            "url": "https://github.com/TooTallNate/switch-ascii-starwars", 
            "description": "Plays the ASCII Star Wars movie", 
            "author": "TooTallNate", 
            "changelog": "2.0.0\\n\\nFix package to use correct binary and 2.0.0 release.\n\\n0.0.53\\n\\nVersion Packages (#155)\\n\\n0.0.51\\n\\nVersion Packages (#149)\\n\\n0.0.50\\n\\nVersion Packages (#146)\\n\\n0.0.49\\n\\nVersion Packages (#143)\\n\\n0.0.48\\n\\nVersion Packages (#138)", 
            "screens": 0, 
            "extracted": 6514, 
            "version": "2.0.0", 
            "filesize": 2704, 
            "details": "Render the infamous ASCII Star Wars movie (also known as thetowel.blinkenlights.nl telnet server) on your Switch. Internet connection is required.\\n\\nFont is \"Geist Mono\" by Vercel.\\n\\nThis is a demo application written in JavaScript using nx.js.", 
            "app_dls": 507, 
            "md5": "d04c233f2342a8189fe3655eecc78063"
        }, 
        {
            "category": "game", 
            "binary": "/switch/residualvm/residualvm.nro", 
            "updated": "20/09/2020", 
            "name": "residualvm", 
            "license": "GPLv2", 
            "title": "residualVM", 
            "url": "https://github.com/usineur/residualvm/releases", 
            "description": "A 3D game interpreter", 
            "author": "usineur", 
            "changelog": "0.4.0git-2\\n\\nFix possible crashs in Grim Fandango\\nFix double-events when using touch controls (thx @rsn8887)\\n\\n0.4.0git-1\\n\\nInitial Release.", 
            "screens": 1, 
            "extracted": 18142, 
            "version": "0.4.0git-2", 
            "filesize": 7709, 
            "details": "ResidualVM is a game engine reimplementation that allows you to play 3D adventure games such as Grim Fandango, Escape from Monkey Island, Myst III and The Longest Journey.\\n\\nResidualVM utilizes OpenGL for 3D graphics hardware acceleration. A software renderer is also included for machines without hardware OpenGL.\\n\\n2. Current state\\nAt this point ResidualVM is fit for normal use, when playing supported games, it is however worth noting that you should still save early and save often, as problems or dead ends might still exist (Grim Fandango itself originally had a few unintentional ways to get the game stuck).\\n\\n2.1. Which games does ResidualVM support?\\nCurrently ResidualVM supports Grim Fandango and Escape from Monkey Island, as well as Myst III and The Longest Journey.\\n\\n\\nA more detailed description of the requirements to get games running can be found here : \\n\\nhttps://github.com/usineur/residualvm#residualvm-a-3d-game-interpreter.\\n", 
            "app_dls": 564, 
            "md5": "9d114bd455ecba52315b66cf0b6f69e2"
        }, 
        {
            "category": "theme", 
            "binary": "/switch/Switch_themes_Installer/NXThemesInstaller.nro", 
            "updated": "16/10/2023", 
            "name": "NXthemes_Installer", 
            "license": "GPLv2", 
            "title": "NXThemes Installer", 
            "url": "https://github.com/exelix11/SwitchThemeInjector/releases", 
            "description": "NxThemes Installer", 
            "author": "exelix11", 
            "changelog": "4.7.1\\n\\nSupport for 17.0\\nExpose patch templates functionality in the PC theme injector, allows for patching custom szs files\\nMinor changes in bflan serialization, mostly for the layout editor\\n\\n4.7\\n\\nSupport for firmware 14.0 #113\\nThe reboot button now uses spsm instead of bpc, this means the console will shut down properly #111\\nAuto update for home menu patches, whenever a new firmware drops if it just needs a new IPS patch it will be downloaded automatically from github as soon as it's available.\\nThis means there won't be firmware specific releases anymore unless something major breaks\\nIf you don't want to connect your console to the internet you can download the new patches manually from github, there is a guide in the readme.\\nIf you want to get notifications for new updates as soon as they're available click watch on the theme-patches repo\\n\\n2.6.4\\n\\nSupport for firmware 13.1.0.\\nFirmware 13.1.0 updated the home menu, it's recommended to uninstall the currently installed themes, extract the home menu (you should be automatically prompted to do so) and install them again from the original nxtheme files.\\nUpdated command line arguments for the theme injector\\n\\n2.6.3\\n\\nSupport for firmware 13.0\\n\\n2.6.2\\n\\nChanges:\\n\\nSupport for firmware 12.1.0.\\nFirmware 12.1.0 updated the home menu, it's recommended to uninstall the currently installed themes, extract the home menu (you should be automatically prompted to do so) and install them again from the original nxtheme files.\\nNew command line options to diff and extract szs files in the theme injector.\\nEdit: The theme injector zip has been updated to remove the dev version warning. No other change was made\\n\\n2.6.1\\n\\nChanges:\\n\\nSupport for atmosphere 0.19\\nAtmosphere now ships without a contents folder and that causes the previous versions to enable compatibility mode and create a titles folder in the /atmosphere directory. If you used previous releases of the theme installer you can safely delete that folder.\\nSupport for the titles folder when running atmosphere has been dropped. If you happen to use ancient atmosphere versions (<= 0.10.0) please upgrade your cfw.\\nVarious fixes in json handling in the theme injector\\nAbout the home menu it wasn't update with firmware 12.0, you current themes and existing patches should work fine.\\n\\n2.6\\n\\nSupport for 11.0\\nOld layouts will behave as expected and remove the new applet button\\nWhen creating a new layout with the layout editor you will be able to choose if you want to keep the new nso button or not.\\nLayouts made for 11.0 with previous versions of the tools may show up differently with this release due to the new patches, create the diff again using latest layout editor.\\nMore layout material properties supported in nxtheme\\nThe layout editor has been updated as well\\n\\n2.5.1\\n\\n10.2.0 Support\\nHome menu compatibility detection: you won't see an annoying warning every time there's a new firmware update but only when it's actually needed\\nTheme packs downlaoded from themezer will be saved in a folder with the same name\\nFix crash in the theme injector when applying certain layouts\\n\\n2.5\\n\\nSupport for downloading themes from Themezer, a new custom themes sharing website.\\nTheme downloading can support other hosts as long as they implement the API, more details have been added in the wiki\\nSupport for the currently china-only 10.1.1 firmware\\nFixed the random crashes when installing themes\\nUpdated all the built-in layouts\\nDrag and drop support for selecting files in the theme injector\\nMany changes under the hood to improve user experience\u2122\ufe0f\\n\\n2.4\\n\\n10.1.0 Support\\nRemoved support for the outdated theme shuffle sysmodule. It was known to cause issues, please stop using it.\\nImproved home menu extraction speed, now it should take just a few seconds\\nFixed several crashes reported by users\\nPreparations for something cool that's coming soon ( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\\n\\n2.3.3\\n\\nThis update removes the incompatible firmware warning on 10.0.3\\n\\n2.3.2\\n\\nThis update removes the incompatible firmware warning on 10.0.2\\n\\nv2.3\\n\\nFirmware 10.0 support\\nShiny new UI for the theme installer\\nIncludes several bug fixes, no more seizure-inducing flashing text when navigating or installing multiple themes !\\nSupport for font color in the nxtheme format\\nInjector:\\n\\nAdded a button to easily extract nxthemes\\nDropped the included DDS converter for better linux compatibility\\nThis means that now only JPG and DDS images are supported for backgrounds and only PNG and DDS for custom applet icons.\\nPNG isn't supported for backgrounds as having a lossless image only increases the theme size as eventually it gets compressed with DXT1 (lossy !), for best quality use a good DDS encoder\\nSZS Patcher tab is now hidden by default, you can enable it from the advanced settings if you need to.\\n\\nv2.2.1\\n\\nSupport for 9.2.0 firmware\\nLockscreen support for SX OS\\nThis only works on its latest beta version as IPS patches support has been added only recently, a warning with more info be shown when you launch the theme installer.\\nFix various bugs that caused crashes\\nIf you are on SXOS and previously manually copied home menu patches to the exefs_patches as a workaround for lockscreen themes please delete the files you manually copied (and uninstall your theme) before using this installer.\\n\\nv2.2\\n\\nSupport for 9.1.0\\nLockscreens on sxos are still not supported\\nSupport for atmosphere 0.10.0\\nFinally fixed clear lockscreen layout on >= 9.0\\nEdit: for the theme installer I forgot to update the version in the makefile, the homebrew menu will show the wrong verion (2.1.1), launching it will show the correct one in the top. Oops.\\n\\nv2.1.1\\n\\nSupport for 9.0.1, the home menu was not actually updated, all themes should work.\\nImproved navigation\\nSupport for file associations in the homebrew menu, more info here\\nFixed layout diffing in the injector\\nNote that lockscreen themes on >9.0 are still supported only on atmosphere\\n\\nv2.1\\n\\nSupport for 9.0\\nSince 9.0 the home menu will require some code patches to work properly with themes, unfortunately not all CFWs support that, currently only lockscreen themes are affected, the installer will warn you when installing a theme that requires a patch you don't have\\nThis also means that for each update of the home menu the affected parts will break for sure as the patch will have to be updated\\nUpdated the applet icons patching process and custom layout, finally the color should stay the same no matter the theme selected in the system settings.\\nAdded the option to change the order of panes via custom layouts, more info here\\nImproved UI navigation and fixed minor issues\\n\\nv2.0.1\\n\\nThis release fixes a bug that in some cases would install a theme ignoring the background image.\\nOnly themes created with the new web injector are affected by this.\\n\\nv2.0\\n\\nTouch screen support\\nNow more themes are shown in the main screen\\nAs more info has to be loaded, depending on your sd card, loading times may be a bit longer, this shouldn't be an issue though\\nIt's possible to preview the image of every nxtheme file\\nIt's possible to disable custom icons or common layouts in the settings\\n\\nv1.6-hotfix\\nFixed home menu extraction\\n\\nv1.6\\n\\nFixed home menu extraction in Atmosph\u00e8re's emunand\\nBflyt material editing in nxthemes, currently just colors but there's more to come ;)\\nCustom colors for the applet buttons via json layouts by automatically patching the bntx. Example layout\\nFinally fixed themes in the user page applet\\nMade the layout patching less strict.\\nIf you had nxthemes that did not install properly because of the firmware this should fix it\\nFixed various crashes reported by users -- Thanks !\\nUpdated a few built-in layouts\\nNote that compatibility with 8.1.0 is unknown as no CFW supports it yet. Should issues arise another update will be released to take care of that hopefully not\\n\\nv1.5\\n\\nAnimation support (bflan), now themes can contain animated parts.\\nFull 8.X support, all incompatible built-in layouts were updated\\nMost old nxthemes should still work on 8.0 as the installer will try to automatically fix them, the ones that still don't work unfortunately have to be built from scratch, info on how to fix a layout for 8.0 has been added here\\nHopefully fixed custom fonts on ReiNX\\nFinally fixed the remote install network code\\n\\nv1.4\\n\\nCustom font support ! Copy any TTF in the themes folder to install it.\\nCustom usd1 panes support for nxthemes, these kind of panes allow more customization by changing the shape of icons or add shadows. The layout editor will be updated soon.\\nSupport for the player select applet\\nSupport for nxthemes without a background image, these kind of themes just edit the layout and look good on any color setting (dark or light \"theme\" option in the console settings)\\nOther minor fixes and improvements\\nNote that custom fonts also apply to titles that load the font from the home menu, there's no way to prevent this.\\n\\n\\n\\nv1.3\\n\\nAutomatic home menu extraction, works on any firmware and any cfw, keys are not needed anymore. this means full support for 7.0.x\\nReboot to payload button for atmosphere users.\\nCustom album images are now supported, it's also possible to set a custom color for the icon with a layout (only if using a custom image)\\nCLI support for the injector on Linux.\\n\\nv1.2\\n\\nSupport for custom layouts for common.szs (all firmwares)\\nBetter support for firmwares <= 5.X\\nSupport for command line args\\nFixed many ui issues and and minor bugs\\n\\nv1.1\\n\\nMultiselect to install multiple themes at the same time\\nRemote install to install themes without having to copy them first\\nTheme background preview for nxtheme files\\nAuto extraction of the home menu directly on the console.\\nTheme shuffle support with the new Theme Switcher sysmodule, check it out here , as this is in beta please read the warnings before using it.\\nThis should also fix the darker images bug when converting to DDS", 
            "screens": 0, 
            "extracted": 8428, 
            "version": "4.7.1", 
            "filesize": 3358, 
            "details": "an homebrew that can manage custom themes directly on the switch, it can install both nxtheme and szs themes.\\n\\n", 
            "app_dls": 381706, 
            "md5": "b8ef215a743bec2152a913c2d76c2474"
        }, 
        {
            "category": "game", 
            "binary": "/switch/gol/gol.nro", 
            "updated": "22/10/2018", 
            "name": "gol", 
            "license": "none", 
            "title": "Game of Life", 
            "url": "https://github.com/Srynetix/libnx-gol/releases", 
            "description": "Game of Life for Nintendo Switch", 
            "author": "Srynetix", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 150, 
            "version": "1.2", 
            "filesize": 40, 
            "details": "How to play\\n\\nL: Pause game\\nR: Resume game\\nA: Randomize cells\\nX: Clear screen\\nY: Speed up x5\\n+: Quit game\\n\\nPress touch screen to revive cells.", 
            "app_dls": 775, 
            "md5": "ef5bd00e7edc84ca6c198c7d1a68a942"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Aquaria/aquaria.nro", 
            "updated": "14/01/2021", 
            "name": "Aquaria", 
            "license": "GPLv2", 
            "title": "Aquaria", 
            "url": "https://github.com/dimag0g/Aquaria/releases", 
            "description": "Aquaria open source", 
            "author": "dimag0g", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 13425, 
            "version": "0.3.0", 
            "filesize": 5818, 
            "details": "You will need a copy of the official game (https://www.bit-blot.com/aquaria/buy.html) to run this port. Demo version will not work. Copy over the game files to /switch/aquaria. Keep already existing files (provided in the release).\\n\\nControls\\n\\nThe L-stick moves Naija around and navigates through menus. A/R and B/L act as right and left mouse buttons, respectively.", 
            "app_dls": 406, 
            "md5": "ab73d5ef7404d7247feb96a9f99e7777"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/melonds/melonDS.nro", 
            "updated": "04/10/2021", 
            "name": "melonDS", 
            "license": "GPLv3", 
            "title": "melonDS", 
            "url": "https://github.com/RSDuck/melonDS/releases", 
            "description": "DS emulator", 
            "author": "Hydr8gon / RSDuck", 
            "changelog": "release6fix1\\n\\nFixes a few bugs.\\n\\nrelease6\\n\\ndeko3D based renderers!\\n\\nrelease5fix1\\n\\nno info posted\\n\\nrelease 5\\n\\nno info posted \\n\\nrelease 4\\n\\ndon't render 3d again without a GX flush\\n\\nspeedup in 30 FPS games\\n\\ngbatemp release\\n\\nincludes closelid option amongst other edits.\\nread the gbatemp thread for details.\\nhttps://gbatemp.net/threads/melonds-for-switch.518300/\\n\\n\\nv0.8.3\\n\\nfix ARM 'shift by register' operands (fixes Mario Party DS 'Stick and Spin' minigame)\\nremove glBindImageTexture() (not needed and requires GL 4.2)\\nfix input bugs when using Ctrl/Alt/Shift keys for buttons\\nfix possible crashes when exiting (again. heh)\\n2D: support forcedblank+masterbrightness\\n2D: fill gaps in implementation (mode6 on sub GPU, mode7, 'prohibited' modes/sizes for OBJ and largeBG)\\nbuild fixes\\nfix division edge case (xperia64)\\nnew FPS limiter, audio sync, vsync for OpenGL\\nadd warning message if romlist.bin is not found (Zettymaster)\\n\\nv0.8.2\\n\\n-Updated to melonDS 0.8.2\\n-Added OpenGL renderer (experimental and kinda broken)\\n-Removed screen filtering option (incompatible with new OpenGL display)\\n\\n\\nv0.7.4-2\\n\\nChangelog:\\n-Fixed crappy audio in docked mode\\n-Improved the UI font\\n-Added new UI selector, styled like the one from the Switch UI\\n-Added complete UI touch control, including scrolling and button presses when touching the labels in the corner\\n-Added support for mapping multiple controls to a single button, as well as clearing mappings\\n-Added a frameskip setting\\n-Fixed overclock setting on Switch system 8.0.0\\n\\nBecause of the changes to the config system, you should delete your melonDS.ini file before using this version to avoid issues!\\n\\nv0.7.4\\n-Updated to melonDS 0.7.4\\n-Added continuous menu scrolling on input hold\\n-Improved audio quality in docked mode\\n-Overclocking now persists across docked/undocked switching\\n-Added ROM and folder icons for the file browser\\n-Added input and hotkey remapping\\n\\nv0.7.3\\n\\n-Updated to melonDS 0.7.3\\n-Only initialize microphone when it's selected as the input device (if microphone causes crashes for you, turning it off should fix it)\\n-Fix save state on the pause menu\\n\\nv0.7.2\\n\\n-Updated to melonDS 0.7.2\\n-Removed temporary timing hack\\n-Optimized menus\\n-File browser now remembers the last folder you launched a ROM from\\n-Added ability to close/open lid from the in-game menu\\n-Added option to adjust audio volume\\n-Added microphone input (if you have a headset with a microphone connected) or white noise input\\n\\nv0.7.1\\n\\nThe first full release!\\n\\nv0.5.2\\n\\n-Fixed crash when pressing R with no savestate\\n-The emulator now has time to finish up before exiting, ensuring savestates don't get corrupted\\n\\nv0.5.1\\n\\n-Fixed crappy sound output\\n\\nNotes:\\nIf sound is still crackly the game probably isn't running full speed!\\n\\nv0.5\\n\\n-Added Switch CPU overclocking; default off (1020 MHz), max 1785 MHz\\n-Added framerate cap to prevent games that now reach full speed from going too fast\\n-Somewhat fixed crappy audio (no longer choppy at full speed, but still crackles)\\n\\nNotes:\\nSet the overclock to maximum and some less intensive games will run full speed! Others will run much faster than they did before. Be warned that maximum overclock will probably heat up your Switch more than normal and extensive use might negatively affect your system.\\n\\nv0.4\\n\\n-Added screen rotation and screen layout settings; functionality is identical to desktop melonDS\\n-The emulation window is now drawn with OpenGL\\n-Having Vsync on is now just as fast as having it off\\n-Vsync option has been removed\\n\\nNOTE: Don't get too excited by the OpenGL! I'm only using it to draw the software renderer's output to the screen. There is NO speed boost from this right now. Yes, there is a bit of a speed boost in this build, but it has little to do with OpenGL.\\n\\nv0.3.1\\nFix sound output\\n\\nv0.3\\n\\nmelonDS was just bumped to version 0.7 a few hours ago, so here's another release from me as well! This release comes with an options menu containing four whole options (crazy, I know). I've also reworked some things to prevent flickering when navigating the menus.\\n\\nThe options added include:\\nBoot game directly - Disabling this will allow you to boot into the DS firmware instead of automatically running a game.\\nThreaded 3D renderer - Speeds up 3D rendering; you probably don't want to turn this off.\\nVsync - While not technically being Vsync, the functionality is similar enough. Disabling this will let the screen render without waiting for a frame to finish. It'll give you a performance increase at the cost of screen tearing and minor artifacts.\\nAudio output - Self-explanatory. Disable to sacrifice audio for a small performance boost.\\n\\nThe first two options are actual melonDS options, while the last two are custom ones I added for the purpose of increasing performance. You still probably won't get full speed, and the trade-offs may or may not be worth it, but at least it's something.\\n\\nv0.2\\n\\nThis release features the latest commits from upstream melonDS, which mainly feature the addition of experimental savestates. To use savestates on the Switch port, press L to save and R to load. You only get one slot per game. This is only temporary until I make some sort of actual menu system. Note that the DS L and R buttons are mapped to the Switch ZL and ZR buttons; don't get them mixed up!", 
            "screens": 0, 
            "extracted": 2902, 
            "version": "release6fix1", 
            "filesize": 1077, 
            "details": "This release is taken from here : https://gbatemp.net/threads/melonds-for-switch.518300/page-35#post-8830041\\n\\nmelonDS\\nDS emulator, sorta\\n\\nThe goal is to do things right and fast, akin to blargSNES (but hopefully better). But also to, you know, have a fun challenge :)\\n\\nThe source code is provided under the GPLv3 license.\\n\\nHow to use\\nmelonDS requires BIOS/firmware copies from a DS. Files required:\\n\\nbios7.bin, 16KB: ARM7 BIOS\\nbios9.bin, 4KB: ARM9 BIOS\\nfirmware.bin, 128/256/512KB: firmware\\nFirmware boot requires a firmware dump from an original DS or DS Lite. DS firmwares dumped from a DSi or 3DS aren't bootable and only contain configuration data, thus they are only suitable when booting games directly.\\n\\nPossible firmware sizes\\n128KB: DSi/3DS DS-mode firmware (reduced size due to lacking bootcode)\\n256KB: regular DS firmware\\n512KB: iQue DS firmware\\nDS BIOS dumps from a 3DS can be used with no compatibility issues. DSi BIOS dumps should be usable too, provided they were dumped properly.\\n\\nAs for the rest, the interface should be pretty straightforward. If you have a question, don't hesitate to ask, though!", 
            "app_dls": 83081, 
            "md5": "41f8331ba52983f03f680092c5997af4"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/libretro_gearboy.nro", 
            "updated": "16/07/2018", 
            "name": "gearboy", 
            "license": "none listed", 
            "title": "Gearboy", 
            "url": "https://gbatemp.net/threads/retroarch-switch.492920/", 
            "description": "A Gameboy Retroarch Core", 
            "author": "Retroarch", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 3128, 
            "version": "beta", 
            "filesize": 1097, 
            "details": "A very beta version of this core , games play from the SD card, and saves Now work.\\n\\nCurrent issues:\\n\\nScreen settings\\nButton Config\\nAnalog input.", 
            "app_dls": 7839, 
            "md5": "e2df5ae96e6391a8d42b82c02f56bb2f"
        }, 
        {
            "category": "game", 
            "binary": "/switch/triplane-turmoil/triplane-turmoil.nro", 
            "updated": "02/11/2024", 
            "name": "Triplane_Turmoil", 
            "license": "GPLv3", 
            "title": "Triplane Turmoil", 
            "url": "https://github.com/sergiou87/triplane-turmoil/releases", 
            "description": "A side-scrolling dogfighting game", 
            "author": "sergiou87", 
            "changelog": "1.0.11\\n\\nFixed support for multiple controllers\\nFixed running on Nintendo Switch\\n\\n1.0.10\\n\\nThis just addresses some input issues with the Switch port in firmware 9.0.0+ by building it with the latest libnx version.", 
            "screens": 0, 
            "extracted": 12545, 
            "version": "1.0.11", 
            "filesize": 4937, 
            "details": "Intro\\n=====\\n\\nTriplane Classic is a side-scrolling dogfighting game featuring solo\\nmissions and multiplayer mode with up to four players. It is a port of\\nthe original Triplane Turmoil game for DOS and aims to match the\\noriginal game exactly so that high scores remain comparable to the\\noriginal.\\n\\nThis is a fork of the original port of the game (http://triplane.sourceforge.net/)\\nbut updated to SDL2, so that is easier to port to other platforms.\\nIt also adds support for 4 XInput game controllers instead of only\\n2 joysticks.\\n\\nPlease read the manual page for information on how to actually play\\nthe game. Also see README.install if you want to build the game from\\nsource code.\\n\\nNintendo Switch Port\\n====================\\n\\nThe Nintendo Switch port has been built using DevkitPro (https://devkitpro.org/)\\nand libnx (https://github.com/switchbrew/libnx).\\n\\nThe whole game should be playable, controls have been adapted to the\\nSwitch, including the use of the touch screen or the left joystick\\nand the A button as a mouse to navigate the menus.\\n\\nThe roster is not functional yet, as you cannot input text, so 4\\nplayers are created by default, which have assigned the corresponding\\ngamepad to their player number.\\n\\nThe default controls are:\\n- Up/Down: left joystick or directional pad\\n- Guns: Y button\\n- Bombs: B button\\n- Roll: X button\\n- Power: R button\\n- Exit/back: - button\\n- Help: + button\\n\\nTrademarks\\n==========\\n\\nTriplane Turmoil is a trademark of Dodekaedron Software\\nCreations Oy.\\n\\nTriplane Turmoil 2 is a trademark of Draconus Entertainment Ltd.\\n\\nTriplane Classic is not a trademark. However, if you make substantial\\nmodifications that, for example, change the scoring system, we\\nencourage you to pick a new name for your modified game so that users\\nare not confused.\\n\\nContact\\n=======\\n\\nTeemu J. Takanen <tjt@users.sourceforge.net>\\n\\nTimo Juhani Lindfors <timo.lindfors@iki.fi>\\n\\n", 
            "app_dls": 477, 
            "md5": "05e53b79878f62c2a190b2b9337bdede"
        }, 
        {
            "category": "game", 
            "binary": "/switch/OpenSupaplex/OpenSupaplex.nro", 
            "updated": "22/03/2023", 
            "name": "OpenSupaplex", 
            "license": "GPLv3", 
            "title": "OpenSupaplex", 
            "url": "https://github.com/sergiou87/open-supaplex/releases", 
            "description": "Classic scrolling tile-based puzzle game", 
            "author": "sergiou87", 
            "changelog": "7.1.2\\n\\nNEW:\\n\\nAdded proper Linux support (thanks @DarthGandalf).\\nFIXED:\\n\\nThe Nintendo Switch port can now be played in Applet Mode. Virtual keyboard support has been disabled (thanks @rjimenezda).\\n\\n7.1.1\\n\\nFIXED:\\n- LB/L1/L and RB/R1/R buttons won't change the game speed anymore when used in the main menu.\\n- Wii and Wii U ports had the wrong title in the Homebrew Channel.\\n- Fixed game panel behavior when you restart a level with it hidden. Now it will be shown when you restart a level.\\n\\n7.1\\n\\nNEW:\\n- Added support for PSP, Nintendo 3DS, Windows 64bit, macOS, PS3, Wii and Wii U.\\n- Added Music and Sound Effects.\\n- Added support for saving and loading game states.\\n- Bumped the default game speed from 5 to 10 (maximum). \\n- Added different scaling modes.\\n- Improved gamepad controls:\\n    - LB/L1/L and RB/R1/R buttons can be used in the main menu to select a different level set.\\n    - LB/L1/L and RB/R1/R buttons can be used in during the game to change the game speed.\\n    - Y/Triangle button (X on Nintendo consoles) shows/hides the bottom panel during the game.\\n    - B/Circle button (A on Nintendo consoles) displays, for a few seconds, the number of red disks you have.\\n    - Back/Select/Minus during a game will exit the level immediately.\\n    - Start/Plus during a game will pause the game.\\n- Added advanced menu giving access to many options that were only available with a keyboard before, or not available at all:\\n    - Restart the level.\\n    - Sound and music volume.\\n    - Change the scaling mode.\\n    - Game speed.\\n    - Play/record demos.\\n    - Debug options (show FPS, load/save state, remove Zonks/Snik Snaks\u2026). If you use these, your progress won't count!!\\n    - And more things!\\n- Added command line options in platforms that support this. Just run the game with `--help` for more info.\\n\\nFIXED:\\n- Fixed many MANY bugs. Now the game should behave exactly as the original, validated by almost 7000 pre-recorded demos.\\n", 
            "screens": 6, 
            "extracted": 33277, 
            "version": "7.1.2", 
            "filesize": 23203, 
            "details": "OpenSupaplex is an open-source reimplementation of Supaplex by sergiou87. Supaplex is a video game created by Philip Jespersen and Michael Stopp, two Swiss students, and published by Digital Integration in 1991. It is an extended clone of Boulder Dash.\\n\\nSupaplex introduces a number of new elements that were not present in Boulder Dash, including bugs, pieces of base that randomly cause a life-threatening electrostatic discharges, Ports, which limit Murphy's movement to specific directions, and terminals, which set off yellow Utility Disks. Utility Disks are explosive floppy disks and come in three different colors: Orange Disks work like Zonks, but explode when hit or when falling. Yellow Disks do not fall yet may be pushed in any direction, but not pulled (which allows creating Sokoban-like puzzles), and explode when the Terminal is used. Red Disks can be carried and dropped when convenient, exploding seconds after.\\n\\nSupaplex is the first Boulder Dash-like game that is not fully grid-based: while the playing field is an obvious grid, the objects do not 'snap' from one grid position to another, but can be halfway or 'in between' grid positions while moving or falling. This behavior has led to a number of well-known bugs that can be turned to the player's advantage, many of which need to be exploited to complete fan-made levels. For instance, by turning around quickly, the player can cause an enemy or rock to 'bounce' off Murphy.\\n\\nThe game also applies 'gravity' on some levels, which means that Murphy will fall down empty spaces and will be unable to go back up, unless he climbs up by using bases. Gravity is not actually designated - the player can only notice via trial-and-error.\\n\\nControls:\\n- Up/Down/Left/Right: left joystick or directional pad\\n- Removing bases/infotrons next to Murphy: Y button + direction\\n- Detonate red disk: hold Y button\\n- Show/hide bottom game panel: X button\\n- Show number of red disks: A button\\n- Change game speed: L and R buttons\\n- Exit/back: - button\\n- Pause: + button", 
            "app_dls": 2434, 
            "md5": "dc085d115b606aad1c2879300bee2cd3"
        }, 
        {
            "category": "tool", 
            "binary": "/atmosphere/contents/01006A800016E000/romfs/skyline/plugins/hdr-launcher.nro", 
            "updated": "03/08/2024", 
            "name": "hdr-launcher", 
            "license": "GPLv3", 
            "title": "hdr-launcher", 
            "url": "https://github.com/techyCoder81/hdr-launcher-react", 
            "description": "Easily install/update/launch HDR!", 
            "author": "HDR-Development", 
            "changelog": "0.6.2\\n\\nFix the Launcher (techy...)\\n\\n0.5.0\\n\\nWhat's Changed\\nUpdate Stage Names & Preview by @JoBen-cmd in #72\\nGeneric Emulator Handling by @WuBoytH in #73\\nUpdate version and fix actions by @techyCoder81 in #74\\nNew Contributors\\n@JoBen-cmd made their first contribution in #72\\n@WuBoytH made their first contribution in #73\\nFull Changelog: v0.4.7...v0.5.0\\n\\n0.4.2\\n\\ncrashes when not connected to the internet have been resolved. the launcher will now properly handle the case where we are not online.\\nthe nightly/beta toggle is now just a button, similar to the arcropolis button. This should be simpler than the previous setup.", 
            "screens": 0, 
            "extracted": 12135, 
            "version": "0.6.2", 
            "filesize": 9933, 
            "details": "A dedicated application to seamlessly install/update/launch HDR, the gameplay overhaul mod for Smash Ultimate.", 
            "app_dls": 7455, 
            "md5": "195d1463365d1aab872adef558415d8d"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "17/03/2023", 
            "name": "ovlSysmodule", 
            "license": "GPLv2", 
            "title": "ovl-sysmodule", 
            "url": "https://github.com/WerWolv/ovl-sysmodules/releases", 
            "description": "A sysmodule selector for Tesla", 
            "author": "WerWolv", 
            "changelog": "1.3.1\\n\\nUpdate dependencies + fix warnings (#20)\\n\\n1.3.0\\n\\nToggling a Sysmodule from On to Off now also automatically prevents it from auto starting.\\nIf you'd still like to have the sysmodule auto start and only have it disabled until the next reboot, you can override it by pressing Y instead.\\n\\n1.2.2\\n\\nUpdate for latest Atmosphere + libnx hid changes\\n\\n1.2.1\\n\\nUpdated nx-ovlloader ProgramID to prevent killing it after the update\\n\\n1.2.0\\n\\n@HookedBehemoth decided to redo the entire thing building a much prettier interface and add some extra features:\\n\\nAdded ability to toggle sysmodules that need a reboot\\nAdded ability to toggle sysmodule auto booting\\nRedid the UI to make it look a lot cleaner\\nUpdated to libtesla v1.3.1 to make use of all the new features\\n\\n1.1.0\\n\\nCompatibility update for latest libtesla release", 
            "screens": 0, 
            "extracted": 385, 
            "version": "1.3.1", 
            "filesize": 168, 
            "details": "A Tesla overlay that allows you to toggle sysmodules on the fly", 
            "app_dls": 43551, 
            "md5": "b4f343f54b78426cf26d777814d3a566"
        }, 
        {
            "category": "game", 
            "binary": "/switch/FlappyBirdNX/Flappy_Bird_NX.nro", 
            "updated": "29/12/2018", 
            "name": "FlappyBirdNX", 
            "license": "GPLv3", 
            "title": "Flappy Bird NX", 
            "url": "https://github.com/Manurocker95/FlappyBird/", 
            "description": "A flappy bird clone", 
            "author": "Manurocker95", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 27885, 
            "version": "1.0", 
            "filesize": 19872, 
            "details": "Flappy bird clone for Switch.", 
            "app_dls": 1451, 
            "md5": "45012504ddf3485a4fe544e3c14ad0de"
        }, 
        {
            "category": "game", 
            "binary": "/switch/nxquake2/nxquake2.nro", 
            "updated": "21/12/2022", 
            "name": "nxquake2", 
            "license": "GPLv2", 
            "title": "nxquake2", 
            "url": "https://github.com/fgsfdsfgs/nxquake2/releases", 
            "description": "Port of the Yamagi Quake II client", 
            "author": "fgsfdsfgs", 
            "changelog": "_060\\n\\nmerged in latest upstream yquake2 (8.20+);\\nas a result of the above, better gamepad support;\\nas a result of the above, gyro aiming support (might be a bit buggy, disabled by default);\\nprobably more stuff that has been added since yquake2 7.45;\\nbuilt with latest libnx and devkitA64.\\n\\n_051\\n\\nrebased the port on latest upstream yquake2;\\nport now utilizes dynamic libraries for renderers and game code and thus supports some mods and Mission Packs;\\nbuilt with latest libraries and probably works on 12.0.0+/AMS0.190x+.", 
            "screens": 0, 
            "extracted": 72164, 
            "version": "_060", 
            "filesize": 41926, 
            "details": "This is the Yamagi Quake II Client, an enhanced version of id Software's Quake II with focus on offline and coop gameplay. Both the gameplay and the graphics are unchanged, but many bugs if the last official release were fixed and some nice to have features like widescreen support and a modern OpenGL 3.2 renderer were added.\\n\\nInstallation instructions\\n\\nCopy the baseq2 directory from your Quake 2 installation to /switch/nxquake2/. \\n\\nOGG music is supported and should be placed into /switch/nxquake2/baseq2/music/. See below for details.\\n\\nMission Packs and mods are not supported yet.\\n\\nIf the game crashes, check /switch/nxquake2/crash.log for details.\\n\\nTHIS DOWNLOAD INCLUDES THE DEMO VERSION OF THE GAME. For fuller instructions on running the full game with audio read here : https://github.com/fgsfdsfgs/nxquake2#full-versions.", 
            "app_dls": 10771, 
            "md5": "ab1380e6862a82dc4e970d311cf6b43c"
        }, 
        {
            "category": "game", 
            "binary": "/switch/memory_game_nx/memory_game_nx.nro", 
            "updated": "04/11/2018", 
            "name": "memory-game-NX", 
            "license": "none", 
            "title": "Memory Game NX", 
            "url": "https://github.com/K3yn/memory-game-nx/releases", 
            "description": "Memory Game", 
            "author": "K3yn", 
            "changelog": "v0.1 - Initial Release.", 
            "screens": 0, 
            "extracted": 10437, 
            "version": "0.1", 
            "filesize": 4429, 
            "details": "A work in progress memory game.\\n\\ncard game in which all of the cards are laid face down on a surface and two cards are flipped face up over each turn. The object of the game is to turn over pairs of matching cards.\\n\\nFeatures :\\n\\n- Tactil\\n- 1 only level atm.\\nControls :\\n\\n- Touch : Reverse card.", 
            "app_dls": 289, 
            "md5": "bcf99edc4e732e3cd9b9e2280afeabac"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/ldnmitm_config/ldnmitm_config.nro", 
            "updated": "07/07/2024", 
            "name": "ldn_mitm", 
            "license": "GPLv2", 
            "title": "ldn_mitm", 
            "url": "https://github.com/spacemeowx2/ldn_mitm/releases", 
            "description": "A mitm kip modified from fs_mitm", 
            "author": "spacemeowx2", 
            "changelog": "1.17.0\\n\\nsubmodule: bump Atmosphere-libs from `c3dc418` to `bb76786`\\n\\nBumps [Atmosphere-libs](https://github.com/Atmosphere-NX/Atmosphere-libs) from `c3dc418` to `bb76786`.\\n- [Commits](https://github.com/Atmosphere-NX/Atmosphere-libs/compare/c3dc418a28e390bc57426016aa2c9e7e87d7a584...bb767869105d0eb5c38425f54bf20614639a078d)\\n\\n---\\nupdated-dependencies:\\n- dependency-name: Atmosphere-libs\\n  dependency-type: direct:production\\n...\\n\\nSigned-off-by: dependabot[bot] <support@github.com>\\n\\n1.16.0\\n\\nupdated-dependencies:\\n- dependency-name: actions/checkout\\n  dependency-type: direct:production\\n  update-type: version-update:semver-major\\n\\n1.15.0\\n\\nsubmodule: bump libtesla from `b32acbc` to `0ad2838` (#148)\\n\\n1.14.0\\n\\nMerge pull request #132 from TSRBerry/master\\n\\n[GHA] Update workflows to use offical dkp docker images\\n\\n1.13.0\\n\\nbuild: update actions\\n\\n1.12.0\\n\\nUpdated Atmosphere-libs\\nAdded tesla plugin and ovl_sysmodule file\\n\\n1.11.0\\n\\nudpate README\\n\\n1.10.0\\n\\nupdate Atmosphere-libs\\n\\n1.9.0\\n\\nupdate Atmosphere-libs\\n\\n1.8.0\\n\\nupdate README\\n\\n1.7.0\\n\\nUpdate release.yml\\n\\n1.6.0\\n\\nadd nightly\\n\\n1.5.0\\n\\n0.14 Atmosphere\\n\\n1.4.0\\n\\nOnly be compatiable with Atmosphere 0.13.0\\n\\nv1.3.4\\n\\nUpdated Atmosphere-libs\\n\\nv1.3.3\\n\\nupdate Atmosphere-libs to 0.10.3\\n\\nv1.3.2\\n\\nfix wrong version\\n\\nv1.3.1-alpha\\n\\nReduce heap size and size in socket config.\\n\\nv1.2.6\\n\\nupdate libstratosphere\\n\\nv1.2.5\\n\\nupdate libnx before make for FW9.0.0\\n\\nv1.2.4\\n\\nupdate Dockerfile\\n\\nv1.2.2\\n\\nupdate libstratosphere", 
            "screens": 0, 
            "extracted": 756, 
            "version": "1.17.0", 
            "filesize": 370, 
            "details": "Notice: It has been reported that this tool may not work on the latest firmware and might need an update. Your mileage may vary.\\n\\nPlay local wireless supported games online.\\n\\nPackage also includes the config tool loaded via hbmenu.", 
            "app_dls": 26270, 
            "md5": "0988da4308e571370d5af6c84a435d84"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/pfbneo/pfbneo.nro", 
            "updated": "12/09/2023", 
            "name": "pFBA", 
            "license": "n/a", 
            "title": "pFBNEO", 
            "url": "https://github.com/Cpasjuste/pemu/releases", 
            "description": "final burn alpha emulator", 
            "author": "cpasjuste", 
            "changelog": "6.7.1\\n\\ncommon: cleanup media loading code\\ncommon: add unknown files even if it doesn't exist in gamelist.xml\\ncommon: change menus items position\\ncommon: fix games paths starting with ./\\ncommon: fix medias paths with recalbox gamelist.xml format\\ncommon: add ability to use custom gamelist.xml file in roms folders, overriding embedded (romfs) gamelist.xml\\ncommon: add SHOW_AVAILABLE menu option to hide missing files/roms/systems from gamelist (restart required)\\npfbneo: bump fbneo to latest git revision\\n\\n6.6\\n\\npfbn: support latest fbneo core (25f8e93)\\npfbn: fix memory leak on stop\\npfbn: fix default dip switch values (fix red hearth, some megadrive games\u2026\\ncommon: fix adding favorites in some cases\\ncommon: revert roms paths to default if not available\\n\\n6.5\\n\\npgen: fix hidden roms when file extension len is 2 (switch/vita/ps4)\\nvita: fix fps counter\\npgen: fix sram loading\\ncommon: disable config overwrite by default\\ninput: fix inputs not always cleared before processing\\npgen: fix emulation for roms size > 8MB\\npnes: remove load_archive hacks (use libarchive)\\npnes: use 0ldsk00l repo\\nlinux: hopefully fix missing shared libaries\\n\\n6.4\\n\\npgen: check for missing mega-cd bios on loading\\npgen: save per game mega-cd backup ram\\npgen: fix state saving (vita)\\npgen: fix scd_bram_cart.brm size\\npgen: add sram saving support\\npsnes: remove deprecated high res option\\npsnes: add AUDIO_SYNC option (on: perfect audio, off: minor audio stuttering in favor of fps)\\nvita: add more optimisations flags (improve fps)\\nvita: add WAIT_RENDERING option (improve fps but not working with effects)\\ncommon: fix wrong keys assignment in help bar (hopefully)\\ncommon: improve audio handling\\n\\n5.2\\n\\ncommon: fix audio sync (50hz roms in psnes/pnes and a few games like seiken densetsu 3)\\ncommon(skins): make menu text outline bigger\\ncommon(skins): fix fonts vertical positions\\ncommon: fix font padding and outline position\\ncommon: update gamelists (move to emulationstation format, lower memory usage)\\npfbneo: fix some games detected as clones (X-Men - Konami, ...)\\nswitch (pnes/psnes): update romlist help texture\\nswitch: fix single joycon mode for new c2d input (thanks R-YaTian)\\nlinux: add buttons gfx, enable some joystick buttons (wip)\\ncommon: general improvements to enhance the user's experience...\\n\\n5.1\\n\\npfbneo: fix some games (sfiii2,...) and megadrive system (sf2,...)\\npfbneo: fix video reinit code (mainly used by megadrive games)\\npfbneo: update gamelist.xml (fix mslug hacks system set as atomiswave, some clones, hacks and hb...)\\npfbneo: fix tg16 system id\\npfbneo: add/fix diagnostic and reset keys (press start 3 secondes for diag, coin 3 secondes for reset)\\npfbneo: fix Victory (Comsoft) system\\npfbneo: major input refactor (fix mortal kombat, outrun, etc...)\\npfbneo: handle fire6/fire7 (L2/R2) buttons\\npfbneo: use integers when possible for game list filtering (speed up system filtering)\\npfbneo: fix some flipped games orientation (comad..)\\npfbneo: use hiscore.dat from romfs\\npfbneo: remove audio sync option (automatically enabled when force 60hz option is disabled)\\npfbneo (switch): fix/invert fire buttons\\n\\n5.0\\n\\nfbneo: bump core to git rev e44cd75\\nfbneo: add system switch with fire buttons 5-6 (L/R)\\ninput: add menu1 and menu2 keys config option\\nupdate all databases\\nadd crt-geom-flat (for selected systems)\\nadd ps4 support\\nmany changes...\\n\\n4.4\\n\\npnes: update for latest pemu changes\\npfbn: add nes console support\\npfbn: update fbneo core to commit 89f2b6d\\nall: add \"big_preview\" skin\\nall: romlist: fix lower/upper cases sorting\\nall: romlist: don't filter on file extension, show any files in roms folder\\nall: load previews from default folders even if the game do not exist in database (\"media/mixrbv2/.png\", \"media/video/.mp4\")\\nall: add \"no preview\" image when no preview found\\nall: add a few effects to preview images/videos\\nall: further improvements to overall system stability and other minor adjustments have been made to enhance the user experience\\n\\n4.3\\n\\nadd SHOW_REAL_NAMES ui option to show zip names (or fbn names) instead screenscraper name in rom listing\\nlower videos previews size (1/2 size, 20 seconds instead 36).\\n\\n4.2\\n\\npemu: vita: fix roms paths in config.cfg not correctly loaded\\npemu: fix input configuration option menu (inputs, highlight, textures..)\\npfbn: fix option menu audio interpolation loop\\npemu: vita: fix \"Renderer::onUpdate\" called twice\\npfbn: vita: add crappy frameskip option (not working very well..)\\npemu: bump version to 4.2\\n\\n4.1\\n\\nhttps://github.com/Cpasjuste/pemu/releases/tag/4.1\\n\\n4.0\\n\\nadd screenscraper custom gamelist.xml support (help fixing database errors here)\\nadd screenshot support (put png files in \"roms/media/mixrbv2\")\\nadd video snaps support (put mp4 files in \"roms/media/video\")\\nadd lots of game filtering options\\nimprove game list scrolling\\nbetter favorites handling implementation\\nfix audio frequency option not applied\\nuse unibios 3.3 instead 3.1 by default for NeoGeo\\nupdate title image (pFBNEO, thanks to MarbleMad from screenscraper)\\ndisable console support, will be back later\\nupdate fbneo (Dec 3, 2019)\\nswitch: fix for firmware 9.x\\nlinux: add proper linux (ubuntu x64) support (set roms path in config.cfg)\\nwindows: add proper windows (x64) support (set roms path in config.cfg)\\nupdate build instructions\\nlot of untracked changes....\\n\\n3.4\\n\\nadd spectrum hardware roms filter\\nfix spectrum roms not detected/handled correctly\\nfix crash on some roms (Forgotten Worlds cps1, gaiapols...)\\nremove now unnecessary force 50hz option\\nupdate fba to latest git (2019-03-28)\\n\\n3.3\\n\\npfba: fix FORCE_60HZ option not always applied\\n\\n2.0\\n\\nuse OpenGL for rendering, which allow some nicer ui effects, and of course, more power (thanks armada, fincs, subv... for theire work on mesa/nouveau)\\npoint filtering can now be used in any rendering size\\nadd a few libretro shaders (retro-v2, scanlines, pixellate, crt easymode, crt geom, sharp bilinear, sharp bilinear scanlines, sabr v3, xbrz, supereagle). Note that some shader will work better in integer scaling (2x, 3x), and some will have a better effect with linear filtering (sharp bilinear). Also, some are very intensive (crt geom, sabr, xbrz) and may not work fullspeed in some emulators (pSNES)\\nadd fps counter option\\n\\n1.58\\n\\ntry to fix docked mode (untested, thanks m4xw for the tips)", 
            "screens": 0, 
            "extracted": 98728, 
            "version": "6.7.1", 
            "filesize": 25792, 
            "details": "The main goals of this final burn alpha port are :\\nhave a basic but user friendly user interface on non windows devices\\nuse a recent rendering interface for speed and effect support\\ncross-platform and code portability\\neasy updates of fba core (no modifications to the original sources)\\nuse arm asm m68k (cyclone) core on arm devices\\n\\nGENERAL INFORMATION'S\\nUsing icons on the Nintendo Switch will make main loading time longer if a lot of icons are detected. There's currently no plan to improve this.\\nYou can enable or disable single joycon support from the pFBA main menu (+). When enabled, all detected joycons (not docked) will be handled as a single controller/player.\\nPoint scaling is currently limited to 1x, 2x and 3x size. FIT, FIT 4/3 and FULL options will fallback to 3x.\\n\\nNINTENDO SWITCH CONTROLS (UI)\\n(L/R)            : SWITCH FROM TITLE TO PREVIEW IMAGE\\n(+)              : GENERAL OPTIONS + DEFAULT ROMS OPTIONS\\n(-)              : PER ROM OPTIONS\\n(A)              : RUN ROM\\n\\nNINTENDO SWITCH CONTROLS (IN-GAME)\\n\\n(+)              : START\\n(-)              : COINS\\n(+/-) + (A)      : START\\n(+/-) + (B)      : COINS\\n(+/-) + (X)      : SERVICE SWITCH\\n(+/-) + (Y)      : 1P + 2P START\\n(+/-) + (L/R)    : PFBA MENU\\n(+)   + (-)      : UNIBIOS MENU (NEOGEO ONLY)", 
            "app_dls": 47302, 
            "md5": "4e9a124f8e51fb4729dc76ea1b12c24f"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Eevee/Eevee.nro", 
            "updated": "21/02/2021", 
            "name": "Eevee", 
            "license": "GPLv3", 
            "title": "Eevee", 
            "url": "https://github.com/melsbacksfriend/Eevee/releases", 
            "description": "A free, offline Pok\u00e9mon Home alternative", 
            "author": "melsbacksfriend", 
            "changelog": "2.1.0\\n\\nCurrently, the only batch edit feature is turning an entire box into Eevee. The text on the button to do so is a reference to the origin of this program's name.\\n\\nThe inject folder is at sdmc:/switch/Eevee/inject\\n\\nCurrent controls when working with bank/save:\\nL to copy\\nR to paste\\nY to dump\\nX to delete\\nA to edit\\n+ to exit.\\n\\nCurrent controls when injecting:\\nA to copy to clipboard\\n\\n2.0.0\\n\\nThis version adds injecting. Supports .pk8 from SwSh, but also supports .pk6 from XY/ORAS and .pk7 from SuMo/USUM! Extract them from your 3ds save using PKHeX or PKSM.\\n\\nThe inject folder is at sdmc:/switch/Eevee/inject\\n\\nCurrent controls when working with bank/save:\\nL to copy\\nR to paste\\nY to dump\\nX to delete\\nA to edit\\n+ to exit.\\n\\nCurrent controls when injecting:\\nA to copy to clipboard", 
            "screens": 0, 
            "extracted": 11619, 
            "version": "2.1.0", 
            "filesize": 5084, 
            "details": "Features currently available:\\nBank\\nCloning\\n\\nFeatures planned:\\nEditing\\n\\nOrigin behind the name:\\nI named this program Eevee because of something funny my brother said about Eevee and a Joy-Con. For more info, go to the funny-stories channel on my Discord server https://discord.gg/nxrSSs9", 
            "app_dls": 7342, 
            "md5": "e251378caf58c4bab5350675386887fd"
        }, 
        {
            "category": "game", 
            "binary": "/switch/meritous/meritous.nro", 
            "updated": "29/12/2018", 
            "name": "meritous", 
            "license": "n/a", 
            "title": "Meritous", 
            "url": "https://github.com/Nop90-Switch/Meritous-Switch", 
            "description": "Top View Dungeon Game", 
            "author": "Lancer-X, nop90", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 4652, 
            "version": "1.0", 
            "filesize": 2939, 
            "details": "Meritous is a cross between a top-view dungeon crawler and a bullet-hell shoot-em-up.\\n\\n In it, you control main character Merit, who travels through an enormous 3000-room labyrinth, the Orcus Dome, in order to find three artifacts called the PSI Keys, and restore them to their proper locations.\\n\\nFor more information known bugs and controls , please hit the SOURCE button.\\n\\nEXTRA INFO : https://gbatemp.net/threads/release-meritous-for-switch.498356/", 
            "app_dls": 1528, 
            "md5": "3d7026c133e5dd6723caf219a8e39083"
        }, 
        {
            "category": "_misc", 
            "binary": "/switch/HelloColours/hello_colours.nro", 
            "updated": "12/03/2022", 
            "name": "HelloColours", 
            "license": "The Unlicense", 
            "title": "Hello Colours!", 
            "url": "https://github.com/OkiStuff/hello_colours", 
            "description": " Quick Application to test your NX.", 
            "author": "Frankie A.", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 6804, 
            "version": "1.0.1", 
            "filesize": 2581, 
            "details": "Hello Colours is an SDL Application that lets you cycle between 11 colours to test your Homebrew environment.\\n\\nPress (b) to cycle between colours\\nPress (+) to exit", 
            "app_dls": 97, 
            "md5": "12bdf84b50b46f1c2eae4efe9d145481"
        }, 
        {
            "category": "game", 
            "binary": "/switch/ioquake3nx.nro", 
            "updated": "10/10/2021", 
            "name": "ioquake3nx", 
            "license": "GPLv2", 
            "title": "ioquake3-nx", 
            "url": "https://github.com/danifunker/ioq3", 
            "description": "ioQuake 3 Arena port for Switch (12.x)", 
            "author": "danifunker", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 10966, 
            "version": "0.0.1", 
            "filesize": 4366, 
            "details": "My first attempt at updating a port!\\n\\nForked from https://github.com/fgsfdsfgs/ioq3 and recompiled and updated to support switch firmware 12.x.\\n\\nI removed the gyro functions since it wasn't compiling properly.", 
            "app_dls": 1412, 
            "md5": "87b8a7ce2bf46ae63c7e17bbcc42ce04"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Minesweeper/Minesweeper-Switch.nro", 
            "updated": "23/07/2018", 
            "name": "Minesweeper", 
            "license": ".", 
            "title": "Minesweeper", 
            "url": "https://github.com/rincew1nd/Minesweeper-Switch/releases", 
            "description": "Minesweeper for Switch", 
            "author": "rincew1nd", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 1695, 
            "version": "2.0", 
            "filesize": 785, 
            "details": "Basic implementation of Minesweeper in C++ and SDL2 for Nintendo Switch.\\n\\nFeel free to report bugs and contribute!\\n\\nControls\\nPlus for exit\\nTouch screen for anything else", 
            "app_dls": 1038, 
            "md5": "3dd062b4b08fe33f8f232a06567b5fb7"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/gdkGBA.nro", 
            "updated": "29/12/2018", 
            "name": "gdkgba", 
            "license": "n/a", 
            "title": "gdkGBA", 
            "url": "https://github.com/jakibaki/gdkGBA", 
            "description": "Discontinued GBA emulator", 
            "author": "jakibaki", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 836, 
            "version": "v9", 
            "filesize": 341, 
            "details": "To set up I strongly recommend putting the original gba_bios.bin in sd:/switch/gba_bios.bin!\\n\\nAfter that put the roms into sd:/switch/roms/ and start the homebrew.\\n\\nAs soon as retroarch gets updated for 5.0 this will instantly become obsolete!\\n\\nMore info : https://gbatemp.net/threads/gameboy-advance-emulator-port-gdkgba-works-on-5-0.504186/", 
            "app_dls": 10435, 
            "md5": "332935fdbcfdfd853e09075d1d8ae75a"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/SMM2CourseInjector/CourseInjector.nro", 
            "updated": "16/09/2019", 
            "name": "SMM2CourseInjector", 
            "license": "n/a", 
            "title": "SMM2CourseInjector", 
            "url": "https://github.com/Chrs2324/SMM2CourseInjector/releases", 
            "description": "SMM2 Course Injector", 
            "author": "Chrs2324", 
            "changelog": "1.0.1\\n\\nRebuilt to work on new 9.0.0 firmware.", 
            "screens": 0, 
            "extracted": 742, 
            "version": "1.0.1", 
            "filesize": 295, 
            "details": "An application that allows you to automatically add SMM2 courses to your save file! To get started, simply create a new course and save it onto the course bot. Then, create a folder titled \"smm2 courses\" and place it in \"sdmc:/switch\". Next, add your downloaded courses to the folder. Once you've placed your courses in the folder, simply run the application and it will inject the courses into your save file!", 
            "app_dls": 1385, 
            "md5": "ccc7daff42307cea4bc3a38301f564c8"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "01/05/2020", 
            "name": "hid-mitm-plus", 
            "license": "GPLv2", 
            "title": "hid-mitm-plus", 
            "url": "https://github.com/PaskaPinishkes/hid-mitm-plus/releases", 
            "description": "Use Gamepads over the network", 
            "author": "PaskaPinishkes", 
            "changelog": "PLUS-0.2-ALPHA\\n\\nUntested pre release that tries to fix a bug in 0.1 where controllers aren't detected by the Switch in the latest AMS versions\\n\\nPLUS-0.1-ALPHA\\n\\nPre Release.", 
            "screens": 0, 
            "extracted": 213, 
            "version": "PLUS-0.2-ALPHA", 
            "filesize": 153, 
            "details": "hid-mitm-plus: a hid-mitm fork to allow the Nintendo Switch to be playable through Parsec or Steam Remote Play\\n\\nhid-mitm-plus is a hid-mitm (by jakibaki) fork that allows for up to 4 controllers (and in the future 8) to be used on a Nintendo Switch from a PC using the network. The purpose for this is to allow the Nintendo Switch to be playable through services such as Parsec (tested and working!) or Steam Remote Play Together (if you somehow manage to and I would love to hear an explanation)\\nCurrently, this sysmodule is still a WIP with a pre-release available as a lot of optimizations and testing must be made.\\nMore details are available on the github repository and any kind of feedback is welcomed!\\n\\nRequirements:\\n\\nAtmosphere (ReiNX and SX OS are untested)\\nPython 3\\nIf you want to use a streaming service such as Parsec, you'll need either:\\na) A capture card such as Elgato HD60 S or Pro; or\\nb) SysDVR (https://gbatemp.net/threads/sysdvr-stream-gameplay-directly-to-a-pc.550616/)\\n\\nInstructions:\\n\\nGo to Settings > Internet and write down somewhere the IP Address, you'll need it\\nOpen Command Prompt and go to the folder where you extracted the hid-mitm-plus pre-release\\nDownload the input_pc.py from the source repo or after this download its on the SD.\\nExecute \"py -3 -m pip install inputs\"\\nExecute \"python3 input_pc.py [IP ADDRESS]\", replacing [IP ADDRESS] with the IP that appears on the Switch Internet Settings\\nIf you have a controller connected, now the switch should detect it!\\n", 
            "app_dls": 1689, 
            "md5": "2d47ed722d7de140f14db79059d47b3d"
        }, 
        {
            "category": "tool", 
            "binary": "none", 
            "updated": "25/05/2023", 
            "name": "CaptureSight", 
            "license": "Lesser GPLv3", 
            "title": "CaptureSight", 
            "url": "https://github.com/zaksabeast/CaptureSight/releases/", 
            "description": "view Pokemon, Raid seeds, Future shiny frames/IVs, and more!", 
            "author": "zaksabeast", 
            "changelog": "0.12.8\\n\\nUpdated libtesla and built with latest libnx. This should hopefully fix crashes while in docked mode.\\n\\n0.12.7\\n\\nUpdated for switch 16.0.0\\n\\n0.12.6\\n\\nUpdated required PLA version to be 1.1.1\\n\\n0.12.3\\n\\nArceus 1.1.0 support\\n\\n0.12.2\\n\\nBDSP 1.2.0 support\\n\\n0.12.1\\n\\nAll data reading was rewritten in rust, and c++ is now purely for visuals\\nBDSP can read multiple wild Pokemon for Eterna Forest (Thanks @Drakansoul!)\\nSupport for Legends Arceus was added\\n- Wild Pokemon view\\n- Party Pokeon view\\n- Main RNG view\\n- Spawner seed list view (both active and inactive spawners)\\n- 1.0.2 support was added since the last pre-release (Thanks @SteveCookTU!)\\n\\n0.11.0\\n\\n- Support for BDSP v1.1.3 was added (Thanks @SteveCookTU!)\\n- The readme was updated with new features and install instructions (Thanks @ShinySylveon04!)\\n- BDSP Roamer view was added\\n- BDSP Trade view was added\\n- Pokemon gender was added beside the Pokemon's name in the Pokemon view\\n\\n0.10.1\\n\\n- Support for BDSP v1.1.2 was added\\n- Shiny Pokemon now have \"Shiny\" by their name in the summary screen\\n- EV order has been fixed\\n\\n0.10.0\\n\\nCaptureSight was (mostly) rewritten in rust\\nThe applet has been removed and only the overlay will be maintained going forward\\nSome views, such as RNG views, are detachable and can be kept open while input is sent to the game. Attaching and detaching controls from CaptureSight is done by pressing The Up Dpad button\\nNew views were added to Sword and Shield\\n- Main RNG\\n- Trainer TID/SID\\nBrilliant Diamond and Shining Pearl support was added\\n- Main RNG\\n- Random Group 0 and 1 RNGs\\n- Party, Wild, and Underground Pokemon\\n- Daycare\\n- Trainer TID/SID\\nThe Pokemon view was updated to show TID/SID and optionally hide EC/PID\\nHelpful error messages will be shown if an unsupported game, unsupported update, or issue with dmnt:cht occurs when loading the game\\n\\n0.9.2\\n\\nThis release fixes any potential issues running on Switch version 12.0.0 with Atmosphere 0.19.1.\\n\\n0.9.1\\n\\nAdded\\nApplet: Dmax Adventure Rental and Encounter Pokemon can be viewed for the next adventure\\nApplet: Pokemon alternate form numbers can be viewed on the Pokemon Summary screen (Thanks @ShinySylveon04!)\\nApplet: The shiny type of a Pokemon can be viewed on the Pokemon Summary screen (Thanks @ShinySylveon04!)\\nUpdated\\nBoth: Dens have been split into separate views for the base game and each DLC\\nBoth: Internal RNG use has been improved (Thanks @Admiral-Fish!)\\nBoth: Pokemon sprites, species, moves, and abilities have been updated for Crown Tundra (Thanks PKHeX!)\\nApplet: German translations have been updated (Thanks @Leanny!)\\nApplet: Each box has been split into its own view, instead of having one giant list of Pokemon\\nFixed\\nBoth: Crown Tundra wild Pokemon are shown correctly\\n\\n0.9.0-alpha\\n\\nAdded\\nBoth: Initial Crown Tundra support (Thanks @ShinySylveon04 for the trade offset!)\\nApplet: Show IVs and Ability in Den details\\n\\nNote: This is being made available early for testing purposes, helping communities with Raid RNG, and providing offsets for people. Event raids currently don't work. Please report any other bugs you encounter.\\n\\n0.8.0\\n= Added =\\nApplet: OT gender is now shown on the Pokemon Summary screen\\nApplet: Spanish translations are now available (Thanks @Subject21J and Captain Santana#5332!)\\n\\n= Updated =\\nBoth: 'None' will now be displayed when a Pokemon has a species of 0\\nBoth: Raid results and upcoming raid advances have been removed\\nApplet: The applet has been rewritten using borealis\\nApplet: Chinese translations have been updated (Thanks @wwwwwwzx!)\\nApplet: Italian translations have been updated (Thanks @Real96!)\\nApplet: French translations have been updated (Thanks @RichardPaulAstley!)\\n= Fixed =\\nBoth: Forced shiny Pokemon should now have information correctly displayed\\nBoth: Viewing legendary Pokemon in the 'Wild' view should work correctly (Thanks @Real96 and @Lusamine!)\\n\\n0.7.0\\nInitial support for Isle of Armor DLC\\nThanks to @3096 for the updated offsets\\nThanks to the @projectpokemon discord for the new species sprites\\nThanks to @Leanny for the several hours spent mapping out the den locations and nest correlations\\nThis is a breaking release that will require having the latest Pokemon update. If backwards compatibility with non-updated games is something you'd like supported, please consider opening an issue on Github for discussion.\\n\\n0.6.2\\n\\nOverlay: Updated libtesla to fix Atmosphere-NX/Atmosphere#965 (comment) (Thanks @fennectech!)\\n\\n0.6.1\\n\\nBoth: Updated Atmosphere-libs, Plutonium, and libtesla\\nOverlay: Fix running on Switch v10.0.0\\nNote: This removes viewing den species and box Pokemon in the overlay only. If you're interested in having the box view in the overlay come back, please comment in this issue\\n\\n0.6.0\\n\\nAdded\\nApplet: German translations (Thanks @Leanny!)\\nApplet: Ability filter (1, 2, H) for Raid Settings\\nApplet: Den and nest selector for Raid Settings\\nApplet: Show type match ups (i.e. 2x weak to Grass, 0.5 resistant to Water)\\nApplet: Alternate form sprites and types (enjoy Alolan and Galarian forms! - Thanks PKHeX!)\\nOverlay: Animated \"Calculating\" message when calculating raid seed (Thanks @ulucs!)\\nOverlay: Show abilities on Pokemon summary screen\\nUpdated\\nBoth: Fix off by one error when finding raid species\\nOverlay: Fix viewing event raids when the console uses certain languages\\nOverlay: Update libtesla (Thanks to @WerWolv and contributors - they did a great job on this!)\\nOverlay: Max raid advance search for overlay is 5,000 due to memory constraints (applet is still 10,000)\\n\\n0.5.0\\n\\nAdded\\nApplet: Animated \"Calculating\" message when calculating raid seed (thanks @ulucs!)\\nApplet: Shiny Pokemon sprites for Pokemon and Den screens (thanks @ulucs!)\\nApplet: Italian translations (thanks @Real96!)\\nApplet: Navigate to the previous screen by pressing \"B\" (previously navigated to the main screen)\\nApplet: Shiny and flawless IV filters for raid searches (you can now see multiple shiny advances!)\\nOverlay: Show all dens in overlay\\nUpdated\\nApplet: Improve Pokemon summary screen design (inspired by Pokemon Home)\\nApplet: Show \"Empty\" for invalid and empty Pokemon instead of \"Error\"\\nOverlay: Update libtesla (fixes CaptureSight-Overlay working with latest Tesla)\\nOverlay: Finding Pokemon raid seeds has changed from pressing \"A\" on the Pokemon summary screen to pressing \"Y\" when hovering over a Pokemon in a Pokemon list\\nBoth: Show 10K+ for advances over 9999 in the Den viewer\\nBoth: Match den Ids with RaidFinder and PKHeX raid plugin\\nBoth: Rename \"Frame\" to \"Advance\"\\n\\n0.4.0\\n\\nAdded\\nOverlay: The game no longer freezes when calculating a Pokemon's raid seed (Thanks @ulucs!)\\nOverlay: Den species is shown for each den on the den view\\nApplet: Exit the app with the plus button (+) on the warning screen\\nApplet: \"Event\" is shown beside event dens on the den view\\nShow shiny raid type (square or star) in the den and raid searcher views\\nEvent Pokemon are read from memory (Thanks @Leanny for the awesome Raid Plugin reference)\\nNo need to update to see the latest events\\nEdited events should display properly\\nUpdated\\nApplet: The den view no longer shows seeds\\nSeeds can still be found in the Raid Searcher view\\nShowing the seed on the den view had no value since CFW users can use the Raid Searcher to find spreads\\nShow \"10K+\" instead of \"9999\" when a shiny frame is higher than \"9999\" on the raid search screen\\nSmall code cleanliness changes\\nFixed\\nOverlay: Pokemon egg cycles now display properly\\nA Pokemon with a shiny frame higher than \"9999\" doesn't show \"0\" anymore\\nCertain seeds that would fail to be calculated from a Pokemon will now be found (Thanks to SergeiLankoff#3699 on the /r/PokemonMaxRaids discord for collecting data to fix this", 
            "screens": 0, 
            "extracted": 1207, 
            "version": "0.12.8", 
            "filesize": 428, 
            "details": "CaptureSight is a Nintendo Switch homebrew to view Pokemon data while playing Pokemon games.\\n\\nFeatures:\\nView Pokemon species, attacks, IVs, etc. for\\nWild Pokemon\\nIn-Trade Pokemon\\nRaid Pokemon\\nParty Pokemon\\nBox Pokemon\\nView all Active Dens\\nCurrent seed for Raid RNG\\nThe number of advances until a Shiny Pokemon\\nSpecies of a den (has a bug with event Pokemon - see below)\\nStars of a den\\nFind the raid seed that created a Pokemon\\nJoin a trade or raid with a person who doesn't have custom firmware and use CaptureSight to get their raid seed\\nView upcoming IVs for any den or Pokemon raid seed\\nSince CaptureSight can show the next shiny frame, upcoming IVs, and seed that created a Pokemon, no external tools are needed for Raid RNG\\nWith raid and trade views, anyone without custom firmware only needs to know someone with custom firmware to do Raid RNG\\nThe Applet has translations for multiple langues based on the Switch language setting\\nHow do I use CaptureSight?\\nTo use the applet:\\n\\nDownload the latest CaptureSight\\nStart Pokemon Sword, Shield, Brilliant Diamond or Shining Pearl\\nOpen the homebrew menu and launch CaptureSight\\nTo use the overlay:\\n\\nSetup WerWolv's Tesla - https://gbatemp.net/threads/tesla-the-nintendo-switch-overlay-menu.557362/\\nUnzip the archive to get CaptureSight.ovl\\nStart Pokemon Sword, Shield, Brilliant Diamond or Shining Pearl\\nPress the key combo to open Tesla Menu (L + Dpad Down + R joystick as of this writing)\\nOpen CaptureSight with Tesla\\n", 
            "app_dls": 36526, 
            "md5": "7ee70e55ba1aae0f935fa905ca2edb16"
        }, 
        {
            "category": "game", 
            "binary": "/switch/hode/hode.nro", 
            "updated": "26/11/2020", 
            "name": "hode", 
            "license": "n/a", 
            "title": "hode", 
            "url": "https://github.com/usineur/hode/releases", 
            "description": "engine used in the game Heart of Darkness", 
            "author": "usineur", 
            "changelog": "0.29d\\n\\nImport 0.2.9a, 0.2.9b, 0.2.9c and 0.2.9d changes\\nadded gain to sounds\\nadded no-hit cheat for 'rock' and 'lava'\\nadded original sounds limiter (16 channels)\\nfixed checkpoint 7 for 'lar1' screen 19\\nfixed some bounding box checks\\nfixed sound glitches when resuming the game after a cutscene\\nadded PSX hint screens\\nadded 'volume' submenu\\nfixed sounds volume and panning\\nfixed walk on chain bridge in 'lar1' screen 3\\nfixed gate not closing in 'lar2' screen 8\\n\\n0.2.9\\n\\nImport 0.2.9 changes\\nadded PSP and Wii platforms specific code\\nadded support for PC demo v1.0 data files\\nfixed screen state for 'fort' screens 16 and 17\\nfixed checkpoint for 'pwr1' screen 21\\nfixed PAF animation glitches with last frame\\n\\n0.2.8\\n\\nImport 0.2.8 changes\\nadded PSX background overlays (MDEC)\\nfixed crash playing paf animation #3 with Italian PC data files\\n\\n0.2.7\\n\\nadded 'projection' submenu\\nadded PSX backgrounds (MDEC)\\nfixed menu on big endian platforms\\n\\n0.2.6\\n\\nImport 0.2.6 changes\\nadded initial code for menu\\nadded initial code for PSX sounds (SPU ADPCM)\\nfixed skull animation in 'rock' screen 18\\n\\n0.2.5\\n\\nImport 0.2.5 changes\\n\\n0.2.4\\n\\nImport 0.2.4 changes\\n\\n0.2.3\\n\\nImport 0.2.3 changes\\n\\n0.2.2\\n\\nImport 0.2.2 changes", 
            "screens": 0, 
            "extracted": 70676, 
            "version": "0.2.9d", 
            "filesize": 55501, 
            "details": "About:\\n------\\n\\nhode is a reimplementation of the engine used by the game 'Heart of Darkness'\\ndeveloped by Amazing Studio.\\n\\nRunning:\\n--------\\n\\nBy default the engine will try to load the files from the current directory\\nand start the game from the first level.\\n\\nThese defaults can be changed using command line switches :\\n\\n    Usage: hode [OPTIONS]...\\n    --datapath=PATH   Path to data files (default '.')\\n    --level=NUM       Start at level NUM\\n    --checkpoint=NUM  Start at checkpoint NUM\\n\\nDisplay and engine settings can be configured in the 'hode.ini' file.\\n\\nStatus:\\n-------\\n\\nWhat is working :\\n* Andy\\n* Cinematics (PAF)\\n* Hint screens\\n* Level screens\\n* Monsters logic (MST)\\n* Plasma Cannon\\n* Shooting collisions\\n* Sound playback (SSS)\\n* Special Powers\\n\\nWhat is missing :\\n* Menus\\n\\n\\nCredits:\\n--------\\n\\nAll the team at Amazing Studio for possibly the best cinematic platformer ever developed.\\n\\nTHIS PACKAGE CONTAINS THE PC DEMO FILES FOR YOU TO TRY.", 
            "app_dls": 5532, 
            "md5": "5ad7480669a50a2a8fae19e5524e4882"
        }, 
        {
            "category": "game", 
            "binary": "/switch/MinesweeperNX/minesweeper.nro", 
            "updated": "09/09/2018", 
            "name": "MinesweeperNX", 
            "license": "N/A", 
            "title": "MinesweeperNX", 
            "url": "https://github.com/sh3rlock97/MinesweeperNX", 
            "description": "Minesweeper Game", 
            "author": "sh3rlock97", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 106, 
            "version": "initial", 
            "filesize": 40, 
            "details": "Minesweeper for Nintendo Switch using LibNX\\n\\n##Controls:\\nOpen Field / Remove Flag: A\\nSet Flag: B", 
            "app_dls": 327, 
            "md5": "0a2f72836d6703a89049e04d0bc9a1f4"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Evolution_Saved_Me_NX/Evolution_Saved_Me_NX.nro", 
            "updated": "30/12/2018", 
            "name": "Evolution_saved_me_NX", 
            "license": "GPLv3", 
            "title": "Evolution Saved Me NX", 
            "url": "https://github.com/Manurocker95/Evolution-Saved-Me-NX/releases", 
            "description": "Evolution Save Me port", 
            "author": "Manurocker95", 
            "changelog": "v1.0\\n\\nFirst Release", 
            "screens": 0, 
            "extracted": 24042, 
            "version": "1.0", 
            "filesize": 13541, 
            "details": "Evolution Saved Me port for the switch.\\n\\nDev has little no info recorded for this release.", 
            "app_dls": 268, 
            "md5": "0757f02f7bda78cd6b85759584c1be32"
        }, 
        {
            "category": "game", 
            "binary": "/switch/sonic3air/Sonic3AIR.nro", 
            "updated": "07/11/2022", 
            "name": "Sonic3-AIR", 
            "license": "GPLv3", 
            "title": "sonic3air", 
            "url": "https://github.com/Ultracoolguy/sonic3air/releases", 
            "description": "A Sonic 3 & Knuckles remaster", 
            "author": "Ultracoolguy", 
            "changelog": "22.09.10.0--rel1\\n\\nFixed crash when exiting game\\nMake sure to add Sonic 3 & Knuckles ROM to the folder. If you want to reduce size you can delete the doc folder.", 
            "screens": 0, 
            "extracted": 152060, 
            "version": "22.09.10.0--rel1", 
            "filesize": 139218, 
            "details": "THIS DOWNLOAD REQUIRES YOU TO ADD YOUR OWN ROM\\n\\nA fan-made widescreen remaster of Sonic 3 & Knuckles, made by Eukaryot and ported by Ultracoolplayer. It includes a remastered soundtrack, mod support, and many other QoL changes!\\n\\nThe release does not ship with a Sonic 3 & Knuckles ROM. You need to provide it yourself inside the sonic3air_switch folder.", 
            "app_dls": 26557, 
            "md5": "2af58e7145e48fb6f569bd26664f710c"
        }, 
        {
            "category": "game", 
            "binary": "/switch/brogue/brogue.nro", 
            "updated": "26/11/2020", 
            "name": "BrogueCE", 
            "license": "Affero GPLv3", 
            "title": "BrogueCE", 
            "url": "https://github.com/capsterx-switch/BrogueCE/releases", 
            "description": "Brogue: Community Edition - a minimalist roguelike game", 
            "author": "capsterx-switch", 
            "changelog": "1.9.2-r2\\n\\nThe default key mapping has been changed to\\nA = ENTER\\nB = ESC\\nX = CTRL-I\\nDUP = UP\\nDRIGHT = RIGHT\\nDDOWN = DOWN\\nDLEFT = LEFT\\nR = CTRL-Z\\nL = CTRL-Z\\n\\nI also added a icon\\n\\n1.9.2-r1\\n\\nI've never played this game, so I mapped the keys as best as I could. Right trigger should control mouse, right stick click is left click. touch screen also acts as mouse, as for the rest of the keys, they are configurable.\\nput a file on sdmc:/switch/brogue/switch_keys\\n\\nHere are the default ones:\\nMINUS = ESC\\nPLUS = CTRL-I\\nA = CTRL-a\\nB = CTRL-e\\nY = CTRL-r\\nX = CTRL-t\\nL-X = CTRL-d\\nZL - X = CTRL-c\\nZR - X = CTRL-R\\nR - X = CTRL-D\\nL - PLUS = CTRL-z\\nZL - PLUS = CTRL-Z\\nL - A = CTRL-s\\nDUP = UP\\nDRIGHT = RIGHT\\nDDOWN = DOWN\\nDLEFT = LEFT\\n\\nZL - DUP = CTRL-<\\nZL - DDOWN = CTRL->\\nR - PLUS = ENTER\\nL - MINUS = CTRL-x\\nZL - MINUS = CTRL-A", 
            "screens": 0, 
            "extracted": 10535, 
            "version": "1.9.2-r2", 
            "filesize": 4324, 
            "details": "Countless adventurers before you have descended this torch-lit staircase, seeking the promised riches below. As you reach the bottom and step into the wide cavern, the doors behind you seal with a powerful magic...\\n\\nWelcome to the Dungeons of Doom!\\n\\nBrogue is a single-player strategy game set in the halls of a mysterious and randomly-generated dungeon. The objective is simple enough -- retrieve the fabled Amulet of Yendor from the 26th level -- but the dungeon is riddled with danger. Horrifying creatures and devious, trap-ridden terrain await. Yet it is also riddled with weapons, potions, and artifacts of forgotten power. Survival demands strength and cunning in equal measure as you descend, making the most of what the dungeon gives you. You will make sacrifices, narrow escapes, and maybe even some friends along the way -- but will you be one of the lucky few to return alive?\\n\\n", 
            "app_dls": 510, 
            "md5": "a71b86e3745dac4b89d483be5d7b0c71"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/KipSelect/Kip_Select.nro", 
            "updated": "04/11/2019", 
            "name": "KipSelect", 
            "license": "GPLv3", 
            "title": "Kip Select", 
            "url": "https://github.com/Sciguy429/KipSelect", 
            "description": "A toolkit and KIP manager for atmosphere", 
            "author": "Sciguy429", 
            "changelog": "3.1.0\\n\\nMerge useful changes from the old menu-refactor branch. There was a lot of stuff here, i'm not going to list all of it as most of it was internal changes and bug-fixes anyway.\\nBy popular request this tool now recognizes some home-brew system modules and displays basic information about them. There is a google form available here If I've missed any popular modules. Keep in mind these descriptions only show up for layeredfs based modules. It is actually possible to pull this kind of information directly out of a KIP file.\\nUpdate NSWreleases.xml\\n\\n3.0.9\\n\\nFixed incorrectly displayed Atmosphere versions.\\nCenter the detail window header.\\nAdd a size limit to the detail window header so the text doesn't bleed off the screen.\\nRedo error.cpp/h to make adding new errors easier.\\nProperly throw a error if a non 200 HTTP response is received.\\nClarify curl errors.\\nFix reboot to Atmosphere code, it should no longer need to cause a console crash.\\nFixed quite a few spelling errors.\\n\\n3.0.8\\n\\nFixed the serious crashing bug in the short lived 3.0.7 release.\\nUsing some modified code from hactool Kip Select now pulls both the official kip name and titleid from the physical kip file.\\nNSWreleases.xml has been updated to the latest version.\\n\\n3.0.6\\n\\nIn Atmospheres latest release support for rebooting directly into a payload was added. This tool now leverages this in order to (almost) seamlessly restart back into Atmosphere. In the latest Atmosphere release a file called \"/atmosphere/reboot_payload.bin\" was added, this file is pretty much a direct copy of fusse_launcher.bin and is necessary for this function to work. After triggering the restart the console will crash, this is normal, press volume up to continue the restart, this seems to be a problem with Atmosphere, as there official example program dose the same thing.\\nIn all Instances where the tool works with the SD card the proper prefix sdmc:/ has been added.\\nCleared up a few error descriptions, i'm probably going to end up completely refactoring this stuff again.\\nSome preparations have been made to support cfw's other than Atmosphere. Renix support should be trivial as it's built pretty much directly off of Atmosphere, keep a eye out for a beta release in the next few days if you are interested.\\n\\n3.0.5\\n\\nLFS now displays the name of most system titles! Atmospheres integrated patches will no longer show up as numbers.\\nFixed odd bug in net code that could have caused a console crash.\\n\\n3.0.4\\n\\nYou can now download a updated NSWreleases.xml from within the tool. This file gets stored on the root of the SD card. If detected at launch the tool will use it instead of the file bundled in its romfs.\\n\\n3.0.3\\n\\nLFS now edits the correct flag, meaning enabling and disabling LFS items should now work properly.\\nThe tool now displays further information about LFS titles, such as there title name, if it can. Currently it dose this by using a bundled NSWreleases.xml, but in the future you will be able to update this file.\\nFixed a bug where if a titleid folder was named in lowercase the console would crash.\\nSome internal fixes to the makefile to make it easier for others to build the project.", 
            "screens": 0, 
            "extracted": 4248, 
            "version": "3.1.0", 
            "filesize": 1837, 
            "details": "Warning: Do not use the reboot option if your SD card is formatted as exfat.\\n\\nA WIP toolkit for the switch cfw Atmopshere, it started out as a simple KIP manager but has become much more over time. This toolkit is intended for use with Atmosphere Fusee, it will still somewhat work other packs like Kosmos but stuff may be broken.\\n\\nFeatures:\\n - Enabling And Disabling Of KIPS\\n - Configuring BCT.ini\\n - Managing LayeredFS titles\\n - Console reboot (DO NOT USE WITH EXFAT SDCARD)\\n", 
            "app_dls": 6477, 
            "md5": "acf8d00fc34ef0099c2a89e90a0bef2a"
        }, 
        {
            "category": "game", 
            "binary": "/switch/femulti/femulti.nro", 
            "updated": "15/02/2020", 
            "name": "femulti", 
            "license": "n/a", 
            "title": "Fire Emblem Multiplayer", 
            "url": "https://github.com/nmattela/femulti", 
            "description": "Fire Emblem Multiplayer", 
            "author": "nmattela", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 37180, 
            "version": "prerelease", 
            "filesize": 14151, 
            "details": "WORK IN PROGRESS\\n\\nThis is a game I made on Godot in my spare time in like a month so yea it's full of bugs and has an awful GUI :p. I'm willing to continue work on this if people are interested/willing to help, for now it's pretty much a proof of concept. Contact me if you have any questions, issues, ideas, or whatever. Discord tag is Scartlex#2761, or contact me via email on \\n\\nnicolas.mattelaer@gmail.com.", 
            "app_dls": 911, 
            "md5": "0e5f31db667915deb6acb63e2dc52838"
        }, 
        {
            "category": "game", 
            "binary": "/switch/DungeonRush/nx-DungeonRush.nro", 
            "updated": "15/07/2021", 
            "name": "DungeonRush", 
            "license": "GPLv3", 
            "title": "DungeonRush", 
            "url": "https://github.com/abysphalt/nx-DungeonRush/releases", 
            "description": "A game inspired by Snake", 
            "author": "abysphalt", 
            "changelog": "1.2.1\\n\\nAdded icon\\nAdded all the /res folder into the NRO.\\nchanged text.txt file to config.ini\\n\\nkeep config.ini in the same folder as the NRO.\\n\\nYou can edit config.ini to change player 1 name\\n\\nRemoved networking", 
            "screens": 0, 
            "extracted": 19359, 
            "version": "1.2.1", 
            "filesize": 12590, 
            "details": "A game inspired by Snake, in pure C with SDL2. My piece of work from C assignment. Hope you like it :)\\n\\nPress A to select. Please note that only 1 player mode is have been tested at the moment.\\n\\nUse the joycons DPAD to move left, right, up and down. Plus to pause during game Minus to exit (only when on the main menu). If you press Minus during games, it clears the stage..", 
            "app_dls": 943, 
            "md5": "df607e365513e87b3312c6c2806712ef"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Cpp-Snake-NX/Cpp-Snake-NX.nro", 
            "updated": "18/09/2019", 
            "name": "Cpp-Snake-NX", 
            "license": "n/a", 
            "title": "Cpp-Snake-NX", 
            "url": "https://github.com/CompSciOrBust/Cpp-Snake-NX/releases", 
            "description": "simple snake game ", 
            "author": "CompSciOrBust", 
            "changelog": "1.1.0\\n\\nEnabled video capture when overriding a supporting title", 
            "screens": 0, 
            "extracted": 734, 
            "version": "1.1.0", 
            "filesize": 290, 
            "details": "A simple snake game written in c++ by NULLx76 and ported to the Nintendo Switch by CompSciOrBust.", 
            "app_dls": 235, 
            "md5": "6ee60b3e2b3d883854f3c174fa0f0163"
        }, 
        {
            "category": "game", 
            "binary": "/switch/simon-nx/SIMON-NX.nro", 
            "updated": "28/10/2018", 
            "name": "SimonNX", 
            "license": "none", 
            "title": "Simon NX", 
            "url": "https://github.com/K3yn/simon-nx/releases", 
            "description": "Memory Game", 
            "author": "K3yn", 
            "changelog": "simon-nx0.2\\n\\nadded 2 levels\\nplayable touch and only with joy in dock mode\\n\\nv0.1 - Initial Release", 
            "screens": 0, 
            "extracted": 5302, 
            "version": "simon-nx0.2", 
            "filesize": 3857, 
            "details": "Simon is an electronic game of memory skill invented by Ralph H. Baer and Howard J. Morrison, with software programming by Lenny Cope. The device creates a series of tones and lights and requires a user to repeat the sequence. If the user succeeds, the series becomes progressively longer and more complex. Once the user fails or the time limit runs out, the game is over. The original version was manufactured and distributed by Milton Bradley and later by Hasbro after it took over Milton Bradley. Much of the assembly language was written by Charles Kapps[citation needed], who taught computer science at Temple University and also wrote one of the first books on the theory of computer programming. Simon was launched in 1978 at Studio 54 in New York City and was an immediate success, becoming a pop culture symbol of the 1970s and 1980s.\\n\\nFeatures :\\n\\n- U can use differents accounts for play.\\n- Highscores\\n- Tactil\\nControls : - Double Touch or D-pad + A : Menu Selection - Short Touch or Short A : enable color - - : Back to menu - : Restart game - Plus : Exit game", 
            "app_dls": 1604, 
            "md5": "6b1461ee6ede32244a47e6984477cada"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/nxplay/NXPlay.nro", 
            "updated": "29/12/2018", 
            "name": "nxplay", 
            "license": "n/a", 
            "title": "NXPlay", 
            "url": "https://github.com/XorTroll/NXPlay", 
            "description": "Media Player", 
            "author": "XorTroll", 
            "changelog": "This app is no longer being updated.", 
            "screens": 0, 
            "extracted": 4958, 
            "version": "0.1", 
            "filesize": 2757, 
            "details": "Beta Release\\n\\nPlace MP3, WAV, OGG, MOD or FLAC audios at sdmc:/switch/nxplay and enjoy!\\n\\nControls info is on the app itself.\\n\\n\\nI'm working on a ffmpeg port to make videos also available, may take some time as ffmpeg is so big.", 
            "app_dls": 13152, 
            "md5": "578fda2e3413d62e2308fc61b0ab5dd9"
        }, 
        {
            "category": "concept", 
            "binary": "/switch/Flavortown/Flavortown.nro", 
            "updated": "16/07/2018", 
            "name": "flavortown", 
            "license": ".", 
            "title": "Flavortown", 
            "url": "https://github.com/AlphonseElric/Flavortown", 
            "description": "simple SDL made demo", 
            "author": "AlphonseElric", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2734, 
            "version": "n/a", 
            "filesize": 1889, 
            "details": "Simple POC using SDL displays and image and plays a sound.", 
            "app_dls": 2137, 
            "md5": "beda334643ac5979836a038edd20ab50"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/SimpleModDownloader.nro", 
            "updated": "08/06/2024", 
            "name": "SimpleModDownloader", 
            "license": "GPLv3", 
            "title": "SimpleModDownloader", 
            "url": "https://github.com/PoloNX/SimpleModDownloader", 
            "description": "Download mods for your Switch!", 
            "author": "PoloNX", 
            "changelog": "2.1.0\\n\\nHello community, I've made some changes and added new options to the homebrew. Here they are:\\n\\nA lot of translations have been added/updated: Chinese by @sskyNS, Italian by @Gabriele73, and Turkish by @MYusufY.\\nImplemented GameBanana's categories.\\nAdded support for exefs and exefs_patches mod files.\\nFixed an issue with Super Smash Bros mods.\\nFixed unexpected crashes (#58, #56, #67, #70).\\nRemoved SSL verification to prevent crashes when the hour isn't synced.\\nSmoother loading bar.\\nRemoved the header when you're previewing a mod.\\nSwitched from cmake to xmake (reduced the size from 10MB to 5MB).\\nThank you for your attention!\\n\\n2.0.0\\n\\nRewrote the app using Borealis.\\nTransitioned to a new build tool: CMake.\\nFixed #46 and #39.\\nAdded a new page to preview the mod.\\nImplemented detection to check if a mod is compatible with SimpleModDownloader (in reality, I check if there's a romfs folder in the archive, as permitted by the GameBanana API).\\nAdded a fix to prevent a crash that occurred when the mod contained special characters.\\nReduced loading times and implemented multi-threading for improved performance.\\n\\n1.1.0\\n\\nAdds ARCropolis (Smash Bros mods) support compatibility (huge thanks to @Starwarsfan2099 #36).\\nAdds RAR support (finally); libarchive is updated to support it.\\nAdds one icon on the top left for all game views.\\nNow, when you download a mod, you go back to the game view instead of the main view (thanks @Derro8).\\nImproves the URL formatting using curl_easy_escape; it fixes #22 and #23.\\nAdds detection when the SD is full and crashes the app.\\nWhen you use \"B\" on image view, it goes to the older image. It's faster.\\nSome translations updated, thanks to all translators.\\nFixes #33 and #31.\\n\\n1.0.3\\n\\nfix #26\\n\\n1.0.2\\n\\nFixed #15\\nFixed #16\\nFixed #14\\nAdded a new translation system that supports languages not supported by the switch system\\nAdded a fix for loading images when there are none\\nImproved support for Pok\u00e9mon games\\nAdded an indication to know which page we are on.\\n\\n1.0.1\\n\\nFix for #1. This issue was caused by a path change in SimpleModManager.\\nAddition of Simplified Chinese translation (thanks JerryWn12).\\nAddition of Japanese translation (thanks iGlitch).\\nAddition of Romanian translation (thanks ExFabian).\\nAddition of Brazilian Portuguese translation (thanks pixeldeadlock).\\nAddition of a tab that allows updating the app directly from within it.\\nRemoved .rar format from the supported list as it is not supported.\\n\"/\" is now removed from the mod names during installation to avoid crashes.\\nAll games are now displayed in English to ensure compatibility with the GameBanana API search.\\nFixed a bug that caused the app to crash when the search query contained fewer than 3 characters.", 
            "screens": 0, 
            "extracted": 5537, 
            "version": "2.1.0", 
            "filesize": 2377, 
            "details": "An easy tool to download mods for your switch!\\nEver wish you didn't have to keep switching back and forth from your switch to your computer to download and install mods? Now you can download mods from your switch with this tool!\\n(SimpleModManager needs to be installed to install mods)", 
            "app_dls": 9163, 
            "md5": "40e767720887c6c0d76594fe1f3b010e"
        }, 
        {
            "category": "legacy", 
            "binary": "/switch/Doom/doom.nro", 
            "updated": "24/01/2020", 
            "name": "Doom", 
            "license": "n/a", 
            "title": "Chocolate Doom", 
            "url": "https://github.com/lantus/chocolate-doom-nx", 
            "description": "Doom engine", 
            "author": "lantus", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2108, 
            "version": "1.02", 
            "filesize": 1034, 
            "details": "THIS APP IS ONLY COMPATIBLE WITH FIRMWARE 8.1 AND BELOW.\\n\\n\\nChocolate Doom aims to accurately reproduce the original DOS version of Doom and other games based on the Doom engine in a form that can be run on modern computers.\\n\\nOriginally, Chocolate Doom was only a Doom source port. The project now includes ports of Heretic and Hexen, and Strife.\\n\\n Check the source for more info.\\n\\nYou need to supply a WAD file, which can be named doom.wad (or doom1.wad, doom2.wad or doom3.wad) and placed in sd:/switch/Doom/", 
            "app_dls": 1716, 
            "md5": "11f27e535bf7539a35f2021caf94393a"
        }, 
        {
            "category": "game", 
            "binary": "/switch/ChocolateDoomLauncher/ChocolateDoomNX.nro", 
            "updated": "07/02/2021", 
            "name": "Chocolate-Doom-Launcher", 
            "license": "GPLv2", 
            "title": "Chocolate-Doom-Launcher", 
            "url": "https://git.nicholemattera.com/NicholeMattera/Chocolate-Doom-Launcher/releases", 
            "description": "WAD Manager for Chocolate Doom", 
            "author": "NicholeMattera", 
            "changelog": "1.1.1\\n\\nNow uses the Github API directly to check for a new version instead of the Kosmos Build Server.\\n\\n1.1.0\\n\\nMain screen now lists both base games (IWADS) and mods (Defined by INI files).\\nBetter support for mods!\\nAll dehacked (DEH) files now go into the ./dehs folder.\\nAll WAD files including PWADS go into the ./wads folder.\\nAll INI files go into the ./mods folder. Examples of these INI files can be found in the Mods.zip file in the release. These INI files are text files that define the mod and the arguments that should be ran with Chocolate Doom NX. Supported arguments are: aa, af, as, deh, file, merge, and nwtmerge (More information about these arguments can be found here)\\nEach game (including mods) will now have it's own save game directory.\\nWill now pass the -launcher parameter to Chocolate Doom NX, so it will now quit back to Chocolate Doom Launcher.\\nAdded the ability to update both Chocolate Doom Launcher and Chocolate Doom NX from within the launcher. With an internet connection, open Chocolate Doom Launcher and press Y on the main screen to check for updates.\\nAdded Hacx to the list of detectable IWADS.\\nFixed a bug where Chocolate Doom NX was running with the root of the SD card as it's current working directory.\\nOld config files will be deleted from the root of the SD Card, and save games will be moved to the correct location.\\n\\n1.0.0\\n\\nInitial Release!\\nBuilt on top of @lantus awesome port of Chocolate DOOM to the Switch.\\nComes with a version of Chocolate DOOM built with 9.x support.\\nAbility to select an IWAD to play with support for:\\nDOOM Registered\\nDOOM Shareware\\nThe Ultimate DOOM\\nDOOM 2: Hell on Earth\\nDOOM 2: Plutonia\\nDOOM 2: TNT - Evilution\\nFreedoom: Phase 1\\nFreedoom: Phase 2\\nFreeDM\\nAlso include the ability to select a PWAD for mods. If the PWAD comes with a DEH file it will automatically apply it if it has the same name as the PWAD.", 
            "screens": 0, 
            "extracted": 22024, 
            "version": "1.1.1", 
            "filesize": 8984, 
            "details": "Built on top of MVG's port of Chocolate DOOM this will manage all of your DOOM games in one place. Also allows for the ability to run mods on top of your games. Simply drop the release on to your SD card and place all your IWADs and PWADs into the \"wads\" directory. (I've included a copy of DOOM Shareware with it.)\\n\\nIncludes Chocolate Doom NX", 
            "app_dls": 8446, 
            "md5": "666da4dc08d7510f128365cfe66d54b0"
        }, 
        {
            "category": "game", 
            "binary": "/switch/CenaNX/cena.nro", 
            "updated": "21/03/2022", 
            "name": "CenaNX", 
            "license": "MIT", 
            "title": "CenaNX", 
            "url": "n/a", 
            "description": "Port of John Cena dating sim.", 
            "author": "faithvoid", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 80177, 
            "version": "1.0.0", 
            "filesize": 54991, 
            "details": "Unofficial port of the Ren'Py visual novel \"John Cena's Sexy High School Adventure!!!\" by Lazlo319, using the Ren'Py Switch SDK.\\n\\n", 
            "app_dls": 4249, 
            "md5": "923dba336d1b05a358c88a40a95cb0f9"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/NX-Update-Checker/NX-Update-Checker.nro", 
            "updated": "05/10/2021", 
            "name": "NX-Update-Checker", 
            "license": "MIT", 
            "title": "NX-Update-Checker", 
            "url": "https://github.com/16BitWonder/NX-Update-Checker/releases", 
            "description": "Content Checker", 
            "author": "16BitWonder", 
            "changelog": "1.5.4\\n\\nA small QOL update that adds cartridge version DB functionality\\n\\nInserted cartridges' bundled version will now be stored and read from a local cartridge version database, in order to prevent informing users of updates already on the cartridge while they aren't inserted.\\n\\n1.5.3\\n\\nAnother bug-fix update that allows all entries under a title to be parsed\\n\\nFixed an issue that prevented more than 10 entries being loaded for a title, making games with many DLC that were installed appear as though they were not\\n\\n1.5.2\\n\\nYet another bug-fix update that corrects an issue that had been introduced in v1.0.0\\n\\nFixed an issue present in all versions v1.0.0 - v1.5.1 where the first local title parsed would be ignored during update/DLC checking\\n\\n1.4.1\\n\\nSmall update today that points NX-Update-Checker towards a new repository instead of titledb.\\n\\nThe application now points towards nx-versions for versions.txt\\nAdopted similar printing scheme from versions.txt parser into installed title parser for a slight speed-up\\n\\n1.4.0\\n\\nYet another release that brings some much needed QoL improvements, this time from the talented aedalzotto!\\n\\nThe application will now first attempt to grab the latest versions.txt over the internet, then fallback to any versions.txt that may already be within the nro's directory should connection fail\\nThe versions.txt parsing code has been dramatically improved, now taking seconds to completely parse instead of minutes\\n\\n1.3.0\\n\\nIt has come to my attention that kind folks over at Reswitched's Discord Server didn't like that this application was pointing there, and didn't figure to ask me to change it.\\nHaving found out about this today and not wanting to create any friction over there, here is a new release \\n\\n1.2.0\\n\\nA time-stamp is now printed to Available-Updates.txt\\nUser now picks from (up to 40) json files within the nro's directory to use as the versionlist, removing the requirement that the versionlist must be named 'versionlist.json'\\nversionlist.json updated 2020-03-22 | 12:48\\n\\n1.1.0\\n\\nLocally installed titles will now display version strings in console and the produced txt", 
            "screens": 0, 
            "extracted": 1407, 
            "version": "1.5.4", 
            "filesize": 568, 
            "details": "A small console application that checks a Switch's installed contents against a provided versionlist for newer updates, and then writes the titles with newer updates and the latest version to sdmc:/Available-Updates.txt.\\n\\nUsage\\nReswitched versionlist.json format has been deprecated and will no longer function with this application\\nUsers must now download the latest versions.txt from the titledb Repository and place it within the same directory as the nro\\nHaving switched to titledb, this application can now additionally parse available updates for installed DLC\\nRun the nro with your favorite variation of the HBMenu\\nWatch the pretty text move across the screen\\nProfit(?)\\nNotice\\nThis app was specifically written to parse the versionlists posted in the ReSwitched Discord Server, if you provide a versionlist.json with even a slightly different format it is likely this application will not parse it correctly.\\n\\nKudos\\nBig thanks to the folks over at the Reswitched Discord that have set up the versionlist bot. Without a nice stream of updated versionlists this wouldn't be feasible.", 
            "app_dls": 36023, 
            "md5": "c5d210df7fb15f553a4d7559c1bef25b"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/RCMRebootInstant/RCMRebootInstant.nro", 
            "updated": "03/12/2018", 
            "name": "RCMRebootInstant", 
            "license": "n/a", 
            "title": "RCMRebootInstant", 
            "url": "https://gbatemp.net/download/rcmreboot.35294/", 
            "description": "Reboot into RCM", 
            "author": "hippydave", 
            "changelog": "v1.0f - Fixed release zip to get rid of hidden MacOS files. Actual files unchanged.\\nv1.0 - first version", 
            "screens": 0, 
            "extracted": 329, 
            "version": "1.0f", 
            "filesize": 165, 
            "details": "I do not condone using this app if your SD card is EXFAT formatted.\\nnatinusala & ctcaer pointed out that Atmosphere's method to reboot to RCM, and therefore the method used by this app, does not properly shutdown HOS so there is some unquantified risk of file corruption. Still use at your own risk on fat32, but just don't use it on exfat please.\\n\\nIntended for use on Switches that don't have AutoRCM installed.\\n\\nThis uses a new feature added to exosphere in Atmosphere 0.8.1, so it won't work in other CFWs unless they add it in a compatible way. Also Atmosphere 0.8.1 got a silent update with a bug fix to get this feature working, so if you already downloaded it before sometime on 1st Dec you might need to update it again (if it crashes with an orange screen instead of going to RCM, you need to update). There's a commit hash in the filename, make sure you have atmosphere-0.8.1-master-bd76e73 (or if you're living in the future, Atmosphere 0.8.2 or higher will be fine too). It sounds like it currently only works if you load Atmosphere using fusee-primary.bin, not if you use hekate to load Atmosphere as separate files (using hekate to load fusee-primary.bin is ok). This will likely be fixed when hekate is updated.\\n\\nThere are two versions included in the zip, each available as an .nro (put it in its folder inside the \"switch\" folder on the root of your sd card) and as an installable .nsp (install with the stupidly-named installer of your choice).\\n- RCMRebootInstant will reboot to RCM as soon as it loads.\\n- RCMReboot will give you a 5 second countdown with a chance to change your mind.\\n\\nThe reason RCMReboot is a much bigger file than the Instant version is that I used cpasjuste's cross2d library to put stuff on screen, mostly because I've been using it for the other project I'm working on and it saved me time. Sweet library, check it out.\\n\\nCredits to cpasjuste for the aforementioned cross2d, re.lax for nro2nsp (which uses hacbrewpack by the-4n), SciresM for Atmosphere, libnx, and for fixing the bugs in them I found while making this, and everyone else who worked on Atmosphere, libnx, devkitpro and all that good stuff.\\n\\nSource included for peace of mind, and in case of licence requirement. If I've got anything horribly wrong with licensing or credits just let me know. If you want to build it yourself you'll need libnx updated with the latest commit (which isn't in a release build at the time of writing), and to figure out the cross2d setup for the non-Instant version.", 
            "app_dls": 5503, 
            "md5": "48bbcebe10cb1ce971ff843a0266eceb"
        }, 
        {
            "category": "game", 
            "binary": "/switch/powder-nx/powder-nx_v1.0.nro", 
            "updated": "17/09/2019", 
            "name": "powder-nx", 
            "license": "GPLv3", 
            "title": "powder-nx", 
            "url": "https://github.com/VelocityRa/powder-nx", 
            "description": "Physics sandbox game with many elements", 
            "author": "VelocityRa", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 11334, 
            "version": "1.0", 
            "filesize": 4315, 
            "details": "Have you ever wanted to blow something up? Or maybe you always dreamt of operating an atomic power plant? Do you have a will to develop your own CPU? The Powder Toy lets you to do all of these, and even more!\\n\\nThe Powder Toy is a physics sandbox game, which simulates air pressure and velocity, heat, gravity and a countless number of interactions between different substances! The game provides you with various building materials, liquids, gases and electronic components which can be used to construct complex machines, guns, bombs, realistic terrains and almost anything else. You can then mine them and watch cool explosions, add intricate wirings, play with little stickmen or operate your machine.\\n", 
            "app_dls": 2568, 
            "md5": "740e6fbee10724ff1b97142a19c98560"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "31/03/2020", 
            "name": "snek", 
            "license": "GPLv2", 
            "title": "Snek", 
            "url": "https://github.com/d3st1nyh4x/snek/releases", 
            "description": "snek overlay for tesla launcher", 
            "author": "d3st1nyh4x", 
            "changelog": "0.8.0\\n\\nIntroducing High Scores and Saves!\\n\\nThis version is close to final, please make sure to send me any feedback.", 
            "screens": 1, 
            "extracted": 833, 
            "version": "0.8.0", 
            "filesize": 378, 
            "details": "A Snake like overlay for Tesla Launcher.\\n\\nbeta release, no saves or high score, probably bugs.", 
            "app_dls": 1373, 
            "md5": "03c685465ae1572eb0ced360024af2a6"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "31/05/2020", 
            "name": "ShareNX-Overlay", 
            "license": "GPLv2", 
            "title": "ShareNX-Overlay", 
            "url": "https://github.com/HookedBehemoth/ShareNX-Overlay/releases", 
            "description": "ShareNX as an overlay for the Nintendo Switch.", 
            "author": "HookedBehemoth", 
            "changelog": "1.1.3\\n\\nRecompiled with latest libtesla and libnx\\nReduces fs session usage\\n\\n1.1.2\\n\\nFix crash in remote error handling\\n\\n1.1.1\\n\\nFixes compatibility with newer nx-ovlloader.", 
            "screens": 0, 
            "extracted": 1421, 
            "version": "1.1.3", 
            "filesize": 563, 
            "details": "ShareNX Overlay\\n\\nShareNX as an overlay for the Nintendo Switch.\\n\\nShare your last screenshot while ingame.\\n\\nThis Homebrew runs under nx-ovlloader.", 
            "app_dls": 4528, 
            "md5": "a98e42b5812535eda820416329bc972c"
        }, 
        {
            "category": "game", 
            "binary": "/switch/xash3d-dmc.nro", 
            "updated": "16/09/2019", 
            "name": "xash3d-switch-dmc", 
            "license": "GPLv3", 
            "title": "xash3d-switch-dmc", 
            "url": "https://github.com/switchports/xash3d-switch/releases", 
            "description": "Xash3D FWGS Engine", 
            "author": "Datamats", 
            "changelog": "v1.0.1\\n\\nUpdate libnx so hid will work on 9.0.0+\\n\\nv1.0.0\\n\\nnwindow is used now instead of the deprecated gfx api\\nthe touchscreen should work now\\nmoved over to filesystem times for savefiles thanks to libnx\\nimplemented the console and various UI requiring text input using swkbd\\nadded options for overclocking, for the really care cases where you might benefit from it\\nmade cl_showfps default to 0 (you can always change it using the console)\\na dmc sdk branch has been ported and is available, additionally a decay port has been added that needs more testing\\n\\nv0.4.0\\n\\nAll the nro's have been renamed to ease the process of adding new games and making it easier to port new dlls, please delete all the half-life-*.nro's\\nThe game switching implementation should be a lot more flexible now and you should be able to keep the nro's where you want as long as you keep them together\\nMods should now work as expected as long as they do not contain custom entities / weapons or other specialized code put in a dll file\\nOpposing force should be fixed\\nVarious fixes and improvements to stability\\n\\nv0.3.0\\n\\nBlue Shift / Opposing Force builds has been ported and added to the build system\\nThe Custom Game menu should not crash anymore, but it will only work if all the nro's are in the /switch directory and are not renamed.\\n\\nv0.2.1\\n\\nThere should be no more crashes after quitting from the menu back to the hbmenu\\n\\nv0.2.0\\n\\nThe timestamp of saves are now saved into a own file as a temporarily workaround until libnx gains timestamps. (Now you will go back to the last autosave when you die instead of having to start over)\\nIncreased the buffer for file copies, this makes saving in some cases multiple times faster\\nFixed the screenshots for saves being broken due to the dynamic resolution system\\nMore work trying to fix crashes (hbmenu will still crash when you quit from the mainui, this is being worked on)\\nAdded a working icon", 
            "screens": 0, 
            "extracted": 13832, 
            "version": "1.0.1", 
            "filesize": 5501, 
            "details": "Xash3D Engine is a custom Gold Source engine rewritten from scratch. Xash3D is compatible with many of the Gold Source games and mods and should be able to run almost any existing singleplayer Half-Life mod without a hitch. The multiplayer part is not yet completed, multiplayer mods should work just fine, but bear in mind that some features may not work at all or work not exactly the way they do in Gold Source Engine.\\n\\nXash3D FWGS is a fork of Xash3D Engine, which aims on crossplatform and compatibility with original Xash3D and Gold Source.\\n\\n\\nThis packages already includes the extras.pak files from https://github.com/FWGS/xash-extras/releases in your valve directory ,\\n\\nGet a copy of half life that contains the 'valve' folder. and add to the valvev folder already within your appstore download.\\n\\nXash3D should now launch, it will take a couple seconds to load the assets needed for displaying the menu and you should be able to play!\\n\\nand problems please use the appstore feedback form, thanks..", 
            "app_dls": 488, 
            "md5": "aecf04448ef61015c40716f95a701ea5"
        }, 
        {
            "category": "game", 
            "binary": "/switch/jewelthief.nro", 
            "updated": "18/06/2022", 
            "name": "JewelThief", 
            "license": "GPLv3", 
            "title": "Jewel Thief", 
            "url": "https://github.com/TheLogicMaster/jewelthief", 
            "description": "Remake of the '90s classic, Jewel Thief", 
            "author": "TheLogicMaster", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 39335, 
            "version": "2.0", 
            "filesize": 24095, 
            "details": "This game is a remake of the legendary Jewel Thief game made by Paul Ligeski from ServantWare in 1991. Ported to Switch using SwitchGDX.\\n\\nThe National Museum is in a tissy. The country's jewel collection has been stolen and scattered all over creation. Your mission is to travel to far away places and steal back the jewels from their unrightful owners. As you leave your mother wishes you well and reminds you to be careful...\\n\\nPort by TheLogicMaster\\nRemake by Christian DeTamble\\nOriginal Game: Paul Ligeski", 
            "app_dls": 183, 
            "md5": "93a4addde7be15e53bb6d5f4b7866d6b"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/sys-clk-Editor/sys-clk-Editor.nro", 
            "updated": "10/02/2020", 
            "name": "sys-clk-Editor", 
            "license": "GPLv2", 
            "title": "sys-clk-Editor", 
            "url": "https://github.com/SunTheCourier/sys-clk-Editor/releases", 
            "description": "Editor for your sys-clk configuration!", 
            "author": "SunTheCourier", 
            "changelog": "2.0.1\\n\\nImproved writes to Configuration which show make it look much nicer :)\\nUpdated Libraries\\n\\n2\\n\\nThe app has been completely written thanks to @cathery (#18)\\nThe app will now tell you when something is wrong wit sys-clk when you try to launch it\\nController inputs now act more like official Nintendo applications\\nOverall should be more stable\\n.elf file is only included for debugging purposes and as such is not needed on the SD to run the application\\n\\n1.3\\n\\nUpdated to use libnx v3.0.0\\nUpdated to support AMS v0.10.0 and greater\\n\\n1.2.5\\n\\nGeneral Fixes\\n\\n1.2.4\\n\\nThe name of the game is now put under the TID (in the section)\\n\\n1.2.3\\n\\nFixed an edge case where if a title was improperly installed and has no name the editor would crash\\nRefactor lots of code, made error screens faster, etc\\nCompiled with latest LibNX for fw 9.0.0 compatibility\\nNames at the top of a section have been disabled due to a bug in the ini parser library\\n\\n1.2.2\\n\\nChanged the version correctly\\nFixed an issue where file handles were not freed correctly\\n\\n1.2.1\\n\\nAdded a proper Icon thanks to @cucholix\\nRemoved unused code, should load 0.01x faster :P\\n\\n1.2.0\\n\\nAdded comments from the sys-clk clock table (#8)\\nChanged RAM to MEM for consistency\\nFurther improvements to overall application stability and other minor adjustments have been made to enhance the user experience.\\n\\n\\n1.1.1\\n\\nFixed application missing some configurations due to casing of letters in Title ID\\nFurther improvements to overall application stability and other minor adjustments have been made to enhance the user experience.", 
            "screens": 0, 
            "extracted": 940, 
            "version": "2.0.1", 
            "filesize": 370, 
            "details": "Edit your sys-clk configuration!\\nThe icon is mostly a placeholder, suggestions for a proper icon are appreciated!\\n\\n", 
            "app_dls": 19404, 
            "md5": "dc1f8f6ec779ea6c2a8391e50dd42b20"
        }, 
        {
            "category": "game", 
            "binary": "/switch/CheezitTheGame/CheezitTheGame.nro", 
            "updated": "08/10/2023", 
            "name": "CheezitTheGame", 
            "license": "GPLv3", 
            "title": "Cheez-itTheGame", 
            "url": "https://github.com/Diflic/CheezitTheGame", 
            "description": "You Win or You Lose", 
            "author": "Diflic", 
            "changelog": "Game\\n\\nWhen downloading the Nro there was no icon making it hard to find", 
            "screens": 0, 
            "extracted": 29081, 
            "version": "Game", 
            "filesize": 22987, 
            "details": "Recognized by the official Cheez-it. Cheez-it The Game is silly and quite funny. Just a silly little game created to entertain. After all, the creator \"Diflic\" is infatuated with Cheez-its he was dying to make some sort of project.\\n\\nInspiring Millions , and Changing lives.", 
            "app_dls": 1670, 
            "md5": "f090ff1987080bab7bf2a19cd9546b6a"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Moonlight-Switch/Moonlight-Switch.nro", 
            "updated": "15/12/2024", 
            "name": "Moonlight-Switch", 
            "license": "GPLv3", 
            "title": "Moonlight-Switch", 
            "url": "https://github.com/XITRIX/Moonlight-Switch/releases", 
            "description": "Moonlight port for Nintendo Switch", 
            "author": "XITRIX", 
            "changelog": "1.2.3\\n\\nBug fix:\\n\\nManual pairing not worked if port was specified\\nImprovements:\\n\\nKorean localization\\nChinese localization\\nBetter organized FPS options\\n\\n1.2.2\\n\\nReplace Screenshot or Home button with Guide button functionality\\nReplace Screenshot or Home button with InGame overlay functionality\\nCustom port support added #93\\nSetting to change amount of taps to open onscreen keyboard #192\\n\\n1.2.1\\n\\nHot fix #181:\\n\\nFixed distorted audio from SDL2 audio driver\\nReverted all DevKitPro packages back to v1.1.0 app version\\nFull Changelog: v1.2.0...v1.2.1\\n\\n1.2.0\\n\\nImprovements:\\n\\nResolution checks was removed as part of mandatory change for newer Sunshine server versions\\nAdded more resolution and FPS options\\nMinor input improvements\\nLibNX version updated (HOS 18 support)\\nMoonlight-Common-C updated\\n\\n1.1.0\\n\\nWhat's new:\\n\\nFast Host auto search\\nNative resolution - universal resolution which will start stream with current screen settings\\nOpen overlay by left corner swipe to be able to use app in tablet mode (no joycons)\\nRefreshed logos\\nImprovements:\\n\\nRumble force setting added\\nMultitouch support improvements\\nFixes:\\n\\nGyro input fixed\\nAudren driver volume setting fixed\\nUSB keyboard buttons fixed\\nUSB mouse input fixed\\nMiscellaneous:\\n\\niOS initial support\\niOS HW decoding\\nAnalog triggers for supported devices\\n\\n1.0.0\\n\\nWhat's new:\\n\\nSixAxis input support\\nTouch input mode\\nNSP forwarder support\\nImprovements:\\n\\nBetter rumbling forces\\nApp stability\\nBlocker screen for app launched in Applet Mode\\nMoonlight-Common-C updated to the latest version\\n\\n0.13.4\\n\\nImprovements:\\n\\nMoonlight-Core version updated\\n\\n0.13.3\\n\\nWhat's new:\\n\\nNVDEC - Hardware acceleration is finally here!\\nHEVC is playable and not experimental anymore\\nSetting to enable\\disable HW decoding\\nNative Audren audio driver was implemented\\nSetting to choose between SDL2 and Audren audio drivers (both could work better then each other in different situations)\\nSetting to map Stick to DPad in split Joycon mode (needed in games like Tekken 7, stick just don't work to navigate in menu)\\nImprovements:\\n\\nMoonlight-Core version updated\\nFixes:\\n\\nTouchscreen input finally works (looks like)\\n\\n0.13.1\\n\\nWhat's new:\\n\\nNVDEC - Hardware acceleration is finally here!\\nHEVC is playable and not experimental anymore\\nNative Audren audio driver was implemented instead of SDL's one (later will add an option to choose ... maybe)\\nKeep in mind, that you still could need to overclock CPU to be able to use higher streaming settings\\n\\n0.13\\n\\nWhat's new:\\nAV1 Experimental support (looks like it works ... maybe)\\nTouchscreen-like mouse control support\\nImprovements:\\nMoonlight-Core version updated\\nIn-app explanation for higher graphical settings\\n\\n0.12.1\\n\\nAdded Korean localization\\nFixed Chinese localication\\n\\n0.12\\n\\nMoonlight-Core version updated\\nApp recompiled with latest versions of NXKit toolkits\\n\\n0.11\\n\\n- Multiply controller support\\n- Key combo for Mouse input mode\\n- Chinese simplified localization\\n- About app page\\n- New touch to mouse gestures (tap as left click, 2 finger scroll)\\n- Reduced memory leaks\\n- Minor bugs fixed\\n\\n0.10\\n\\n- Keys mapping layouts\\n- Also minor improvements and bugfixes", 
            "screens": 5, 
            "extracted": 25694, 
            "version": "1.2.3", 
            "filesize": 10671, 
            "details": "Moonlight-Switch is a port of Moonlight Game Streaming Project for Nintendo Switch.\\n\\nControls:\\n- Mouse\\nWith touch screen you can move your coursor, tap to left click, scroll 2 fingers to scroll.\\n\\nWhile touching screen ZR and ZL buttons will work like left and right mouse buttons.\\n\\nAlso While touching screen L and R sticks will work like scrolling wheel.\\n\\nUSB mouse working as well.\\n\\n- Keyboard\\nYou can use onscreen keyboard, tap 3 fingers on screen to show it.\\n\\nUSB keyboard working as well.\\n\\n- Gamepad\\nBy default Switch gamepad configured as X360 gamepad (A/B and X/Y swapped). Key mapping availale in application settings.\\n\\nUp to 5 gamepads (includes handheld mode) supported. Half of joycons are also supported.\\n\\n- Ingame overlay\\nTo open overlay, press - and + key simultaneously by default or Hold ESC on keyboard.\\n\\nKey combination and holding time are configurable in settings.", 
            "app_dls": 48612, 
            "md5": "fff08cf10dc4256de255bb20d4272b00"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/ipswitch/ipswitch.nro", 
            "updated": "24/02/2020", 
            "name": "ipswitch", 
            "license": "GPLv3", 
            "title": "ipswitch", 
            "url": "https://github.com/3096/ipswitch/releases", 
            "description": "Use text to generate `.ips` patches to use with Atmosphere.", 
            "author": "3096", 
            "changelog": "0.2.2\\n\\nBuild with newer libnx: 9.0.0+ HID works again\\nIncreased line buffer used in pchtxt parsing to 4096 bytes\\nAdded a more comprehensive message when build id is not found in pchtxt\\nAdded a check for Atmosphere directory\\nGeneral software stability improvements to enhance the user's experience", 
            "screens": 0, 
            "extracted": 405, 
            "version": "0.2.2", 
            "filesize": 194, 
            "details": "Pronounced as IPS-witch.\\n\\nUse text to generate .ips patches to use with Atmosphere.\\n\\n\\nHow to use\\n\\nThis program reads .pchtxt (patch text) files and can create .ips patches. .pchtxt is a in-house text file format to represent patches. You can find the specs for .pchtxt below.\\n\\nThe program looks for .pchtxt files with the path sdmc:/switch/ipswitch/{patch_description}/{whatever_name}.pchtxt. The dir {patch_description}/{whatever_name}.pchtxt is used for display purpose and help user to identify the patch. The {patch_description} folder name is used as the folder name in atmosphere/exefs_patches/{patch_description}.\\n\\nRun the homebrew and it will let you select a .pchtxt file to generate .ips patch with.\\n\\nStructure of .pchtxt File\\n\\n.pchtxt will be a text file. See the splat310.pchtxt for some simple Splatoon 2 3.1.0 edit I provided for example.", 
            "app_dls": 4854, 
            "md5": "83946a92ceb45c2fae8f4d825a4db741"
        }, 
        {
            "category": "game", 
            "binary": "/switch/tripeaks-gdx.nro", 
            "updated": "16/06/2022", 
            "name": "TriPeaks", 
            "license": "GPLv3", 
            "title": "TriPeaks", 
            "url": "https://github.com/TheLogicMaster/tripeaks-switchgdx", 
            "description": "A simple tri-peaks solitaire game", 
            "author": "TheLogicMaster", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 34135, 
            "version": "1.0.1", 
            "filesize": 10195, 
            "details": "This is a simple tri-peaks solitaire game using the Java game framework, LibGDX. It was ported to Switch using the SwitchGDX backend.", 
            "app_dls": 218, 
            "md5": "cc65033a1f55b6685f971e9aa01baac6"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "16/11/2024", 
            "name": "sys-ftpd-light", 
            "license": "GPLv3", 
            "title": "sys ftpd light", 
            "url": "https://github.com/cathery/sys-ftpd-light/releases", 
            "description": "Re-work of the original sys-ftpd", 
            "author": "cathery", 
            "changelog": "1.0.5\\n\\nUpdated to work with latest Atmosphere/FW (19.0.0)\\n\\n1.0.4\\n\\nAnonymous login is now disabled by default\\nUser credentials are now empty by default\\nThe server will now reject any connections until both the user and password fields are set.\\nThis update might annoy some people who get their configs overriden by downloader apps like hbstore.\\nIt is released in response to claims of people getting their consoles hacked through local networks created through ldn_mitm.\\n\\n1.0.3\\n\\nReduced FS sessions used by the sysmodule from 3 to 1\\nThis might have caused FS to run out of sessions and crash the system if you had too many sysmodules enabled.\\nFixed LED lights staying enabled permanently on controllers with old firmware.\\nLED now only lights up for the main player only.\\nWhen pressing the pause button combo to pause the server, the LED will light up in a \"double click\" pattern.\\nWhen doing the same to unpause the server, the LED will light up in a single long \"resume\" pattern.\\nThis is to make up for the fact that there was no indication if the server gets actually paused or not.\\nChanged the response format for PASV command for compatibility with some FTP clients.\\n\\n1.0.2\\n\\nMultiple config options have been added:\\nThe key combination to pause the ftpd server can now be changed. (#2)\\nThe key combination to pause the ftpd server can be disabled altogether. (#2)\\nThe Joy-Con LED notification when connecting to the server can now be disabled.\\nIt will also no longer light up on unsuccessful connections. (thanks @aveao #3)\\nSee config.ini for details on each of the options.\\nAdded toolbox.json for Kosmos Toolbox support.", 
            "screens": 0, 
            "extracted": 172, 
            "version": "1.0.5", 
            "filesize": 129, 
            "details": "This is a nintendo-switch sysmodule which runs an ftpd-server in the background (on port 5000 with no auth).\\n\\nThe ftpd is basically copy paste from this ftpd-fork.\\n\\nPut the contents of the sd_card folder in the root of your sd-card or else the sound effects won't work!\\n\\nHotkeys: To help with security while there is are no login credentials, debugging, or otherwise, you can toggle the state of the server using the (+) + (-) + (X) button combination.\\n\\nSound effects from: https://freesound.org/people/jens.enk/sounds/434610/\\nhttps://freesound.org/people/jens.enk/sounds/434611/\\nhttps://freesound.org/people/rhodesmas/sounds/322897/ https://freesound.org/people/rhodesmas/sounds/322895/\\n\\n", 
            "app_dls": 15235, 
            "md5": "10bc91c7765ce099ba0dac0d28aedfe0"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/emummc-toggle/emummc-toggle.nro", 
            "updated": "04/07/2019", 
            "name": "emummc-toggle", 
            "license": "n/a", 
            "title": "emummc-toggle", 
            "url": "https://github.com/LittlestCube/emummc-toggle/releases", 
            "description": "emummc-toggle", 
            "author": "LittlestCube", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 368, 
            "version": "0.0.1", 
            "filesize": 163, 
            "details": "Finished this right before I saw the hekate 5.0.0 update. :(\\n\\nNot to mention the worst code ever written, completely threw DRY out the window.", 
            "app_dls": 427, 
            "md5": "d48b214c4508fa21e45a7affbc6648ca"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/GameLad/GameLad.nro", 
            "updated": "02/05/2021", 
            "name": "GameLad", 
            "license": "MIT", 
            "title": "GameLad", 
            "url": "https://github.com/darkxex/GameLad-for-Nintendo-Switch/releases", 
            "description": "An (almost) fully featured Game Boy emulator", 
            "author": "darkxex", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 8304, 
            "version": "1.0", 
            "filesize": 3322, 
            "details": "Simple port for Nintendo Switch. Put your roms in \"gbroms\" folder in your SD, Press L3 + R3 for exit with SRAM Save.\\n\\nIt supports Tetris and some other games with a few minor issues. The emulator passes all CPU instruction tests, as well as the instruction timing tests.\\n\\n", 
            "app_dls": 3756, 
            "md5": "3e1f9abcbb8a48a0cea9d3fa19b641f0"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Trogdor-RB/Trogdor-Reburninated.nro", 
            "updated": "15/08/2024", 
            "name": "Trogdor-Reburninated", 
            "license": "MIT", 
            "title": "Trogdor-Reburninated", 
            "url": "https://github.com/Mips96/Trogdor-Reburninated/releases", 
            "description": "Burninate the countryside!", 
            "author": "Mips96", 
            "changelog": "2.21\\n\\n\u266a Let's not make a big deal outta this... it's just a little Trogdor update \u266a\\n\\nJust fixing a few things that have been bugging me:\\n\\nQuality of Life Improvements\\nYou can now exit a game by pressing Select instead of A+Select\\nThe original combination was intentionally complicated to prevent players from accidentally quitting and losing their progress, but with autosave, that's no longer necessary\\nOverlay setting is now saved, and it has a new menu option in Cosmetic settings\\nYou can still change it via button input, as well\\nFixed a very small menu bug\\nMinor text polish\\n[PC] Fullscreen setting is now saved\\n[Wii U] Resolution increased from 720p to 1080p\\nBy extension, this means an additional scaling option has been added\\n[Wii] Minor Gamecube controller polish for consistency with Gamecube version\\nTechnical Changes\\n[PC] DLLs are now statically linked so they no longer bloat the game directory; it's just an EXE and audio\\nAdditionally, the non-Visual Studio Windows makefile actually works now, and there's a new x86 makefile to go with it\\nIf you want to compile it yourself, Visual Studio is still an option\\n[Other] Scaling options are now frozen/unfrozen based on display resolution instead of being hardcoded per-system\\nThis doesn't affect current releases, but it does make scaling options one less thing to worry about when porting to other systems\\nPC still allows all options regardless of display because of windowed mode\\nEnjoy!\\n\\n2.2\\n\\nBefore the update notes, an important message:\\nThis is probably the final update! I could keep adding new features and making minor tweaks forever, but I have to call it some day, and that day is today. I may make another update if a bug needs to be fixed, and I'm not ruling out the possibility of ports to additional systems (those would be added to this release after the fact), but consider Trogdor: Reburninated to be complete!\\n\\nWith that out of the way, here's what's been added this time. Mostly polish, but also some new features:\\n\\nNew Versions:\\nPorted to Linux!\\nNew Additions:\\nUpgraded Sound Test menu to Theater menu. In addition to listening to sounds, you can now watch the game's cutscenes.\\nAdded two new overlays. In addition to Strong Bad's basement, you can now play Trogdor on your Compy, or from the land of Strong Badia!\\nFixes + Polish:\\nAdded Uncapped FPS option. This replaces the 90/120/144 FPS options from earlier versions.\\nAdded VSync and fixed a frame pacing bug at max FPS. Earlier versions ran slightly faster than intended depending on the frame rate. This issue should now be fixed when running the game at your screen's refresh rate (probably 60, or just choose Uncapped to be safe), and should be somewhat remedied for frame rates lower than max.\\nRemade+upscaled overlay and menu graphics from 240p to 480p on supported systems\\nCheats are now allowed in all difficulty presets; however, enabling a cheat disables high scores\\nCheats are no longer immediately enabled upon unlock\\nRearranged some menu settings; most notably, Other Settings has been moved up and renamed to Gameplay Settings\\nFixed text on main screen remaining small after changing scaling\\nMinor text changes\\nPolish and code cleanup\\n[PC] Key to toggle fullscreen has been changed from ESC or F to ESC, F11, or R3 on controller\\n[WII] Added analog input for Classic Controller\\n[3DS] Changed the .cia version's icon to match the .3dsx version\\nEnjoy!\\n\\n2.1\\n\\nNew Features:\\nAdded Knight Movement option: \"Original\" retains the Flash version's behavior, while \"New\" (default) is similar to how knights move in the HTML5 version (reworked some code from Trogba for this one)\\nAdded Chance preset: Enemy speeds and behaviors are shuffled at the start of each level, and level order is also shuffled! Do you feel lucky?\\nAdded Sound Test: Listen to songs, sound effects, and Strong Bad whenever you want!\\nBug Fixes:\\nFixed level 31 being unbeatable due to the player spawning inside a cottage\\nFixed a bug where high scores wouldn't always save\\nFixed autosave not happening under specific circumstances\\nFixed the Level Beaten smoke animation replaying for a single frame\\nFonts and graphics are now packaged into the executable for neatness (audio is still separate). More importantly, startup load times are greatly improved on consoles\\n[PSP] Fixed console crash, meaning the game now works on real PSP hardware again (sorry for the wait on this one)\\nOther minor bug fixes\\nOther:\\n[GAMECUBE] Added beta Gamecube build (file I/O is still not implemented, so no audio or save data)\\nUpdated SDL2 libraries on most, if not all, systems\\nRenamed \"Mips's Choice\" preset to \"Mode 8\" to reflect my new username\\nRenamed \"Knight Behavior\" option to \"Respawn Behavior\"\\nOther minor text changes\\n\\n2.0\\n\\nAdded Frame Rate setting; you can now play at higher frame rates instead of being limited to the original game's 16 FPS!\\nPC goes up to 144 FPS, consoles go up to 60, and 3DS goes up to 30\\nAdded save data support for settings, high scores, unlocked cheats, and mid-game progress (the idea for that last one is shamelessly stolen from inspired by Trogba)\\nAdded the following options:\\nArrow Speed: Self-explanatory\\nKnight Speed: Self-explanatory\\nKnight Behavior: Makes knights continue moving in a constant pattern after you lose a life, similar to the HTML5 port\\nShuffle Levels: Shuffles the level order so it's different every time you play\\nLevel Transition: Lets you leave the Level Beaten screen by pressing the Confirm button instead of waiting for it to happen automatically (thanks again, Trogba!)\\nSpeedy Mode (cheat): Lets you move up to 2x as fast\\nDifficulty Presets: Too many settings to dig through? Just choose one of the five new presets! Your high score is saved for each preset.\\nRestructured menu into multiple sub-menus instead of everything being lumped together\\nAdded \"Reset to Default\" menu button that resets all settings to default except screen scaling\\nAdded Doom-style Quit confirmation screen\\nYou can now press Start at the title screen to skip it\\nBig Head Mode is now a normal setting instead of a cheat\\nChanged several menu text strings\\nAssorted polish, optimizations, and minor bug fixes\\n\\n1.1\\n\\nAdded Treasure Hut Behavior settings\\nChanged Archer Frequency settings\\nChanged Commentary Frequency settings\\nFixed sprite bugs that occurred when changing scaling mid-game\\nPolished cutscenes\\nAdjusted opening screen text\\n\\n1.0\\n\\nJust in time for Halloween, v1.0 is here! Enjoy!\\n\\nHOTFIX 11/1/22: Removed error handling from Wii and Gamecube because they were breaking Dolphin.", 
            "screens": 0, 
            "extracted": 26031, 
            "version": "2.21", 
            "filesize": 15166, 
            "details": "An enhanced recreation of the Homestar Runner Flash game, \"Trogdor\", expanded with new features.\\n- New Options menu to customize your game\\n- Level select\\n- New cheats\\n- Optional soundtrack from Stinkoman 20X6, another Homestar Runner game\\n- Multiple screen scaling options\\n- Bugs from the original game have been fixed", 
            "app_dls": 1889, 
            "md5": "4ff98452efc29e62b8c7855bc05153b4"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/lennytube/lennytube.nro", 
            "updated": "16/09/2019", 
            "name": "lennytube", 
            "license": "Affero GPLv3", 
            "title": "lennytube", 
            "url": "https://github.com/noirscape/lennytube/releases", 
            "description": "Youtube on the Nintendo Switch", 
            "author": "noirscape", 
            "changelog": "1.0.2\\n\\nThis is a rebuild done on the latest libnx. This is to make sure controller inputs keep working.", 
            "screens": 0, 
            "extracted": 312, 
            "version": "1.0.2", 
            "filesize": 139, 
            "details": "Youtube on the Nintendo Switch (NRO format).\\n\\nRationale\\nThe YouTube title on the Switch is only usable if one is not banned, since the title in question logs in on Nintendo Network. Whilst it's possible to bypass this by patching the YouTube app, this is far from ideal as the resulting file is not allowed to be shared.\\n\\nThis application aims to circumvent that last problem by launching it's own WifiApplet, meaning no copyrighted data is ever involved.\\n\\nLimitations\\nDesktop mode only (TV mode is inaccessible, Mobile doesn't play videos properly).\\nWorks only from APPLICATION mode (it will display a warning and instructions how to do this if you're still running from APPLET).", 
            "app_dls": 28002, 
            "md5": "3f04b2ad102835743d5f3fd19310d93a"
        }, 
        {
            "category": "game", 
            "binary": "/switch/wiiero/wiiero.nro", 
            "updated": "16/07/2018", 
            "name": "wiiero", 
            "license": ".", 
            "title": "Wiiero", 
            "url": "https://github.com/KeeganatorP/wiiero-switch", 
            "description": "Port of wiiero (Liero for Wii)", 
            "author": "KeeganatorP", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 22750, 
            "version": "0.9", 
            "filesize": 19643, 
            "details": "Port of wiiero (Liero for Wii) to Nintendo Switch\\n\\nSound is currently broken.", 
            "app_dls": 1092, 
            "md5": "78503a06d2904273a973abd030e5040f"
        }, 
        {
            "category": "game", 
            "binary": "/switch/VoyagerNX/VoyagerNX.nro", 
            "updated": "29/06/2023", 
            "name": "VoyagerNX", 
            "license": "GPLv2", 
            "title": "VoyagerNX", 
            "url": "https://github.com/faithvoid/VoyagerNX", 
            "description": "Star Trek Voyager: EF Holomatch (Port)", 
            "author": "faithvoid", 
            "changelog": "v0.8.5.1 - Hotfix\\n\\nRe-compiled with the new libNX for newer firmwares!\\n\\nv0.8.5 - Renderer Upgrade\\n\\nAll builds now compile with renderergl2 as default. In my experience this makes a few things look a bit better, might(?) smooth out performance, and futureproofs everything a touch (in case someone wanted to implement a newer renderer engine later down the line).\\n\\nIf upgrading from a previous build, all you need to replace is VoyagerNX.nro.\\n\\nv0.8.4 - Better Gyro Support\\n\\nGyro now automatically detects whether the user's controller is in handheld or wireless mode and adjusts the axis accordingly. Haven't tested with a pro controller, but would imagine it should work fine, as the fix specifically targets handheld mode. This means apart from finding slightly more natural gyro defaults for both handheld and wireless mode, the end user can enjoy seamless gyro controls between input methods. (Note you'll still have to enable gyro manually by typing \"in_gyromouse 1\" in the console or copying the hmconfig.cfg settings from the GitHub readme, as there's still no menu prompt for it). Also, properly switched to \"main\" branch as the, well, main branch (hello Tulip Voyager!)\\n\\nIf updating an older version, extract to the original folder and replace all files when prompted.\\n\\nv0.8.3 - Basic Gyro Support\\n\\nIncluded is a build with basic gyro support that I'd consider stable still incomplete (no menu options, gyro code doesn't automatically detect controller and switch the yaw axis between yaw/roll), so it's being moved up to v0.8.3\\n\\nTo enable gyro support, you have to open the console menu in-game, type \"/in_gyromouse 1\". The stock gyro configuration is meant for handheld use, so if you're using a pro/wireless controller you'll have to also type \"/in_gyromouse_yaw_axis 1\" (and if you want to go back to handheld type the last command with a 0 instead of 1). Gyro speed can be adjusted by adjusting the mouse speed.", 
            "screens": 0, 
            "extracted": 10632, 
            "version": "0.8.5.1", 
            "filesize": 4266, 
            "details": "A port of Star Trek Voyager: Elite Force Holomatch to the Nintendo Switch, using the Lilium Voyager engine.\\n\\n(You must have a copy of Star Trek Voyager: Elite Forces Holomatch to play this, since you'll need to copy the baseEF folder from an existing installation to the VoyagerNX folder).", 
            "app_dls": 567, 
            "md5": "8f35962c40d7942eca0af671bfdb773c"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Kens-Labyrinth/Kens-Labyrinth.nro", 
            "updated": "13/05/2024", 
            "name": "Kens-Labyrinth", 
            "license": "n/a", 
            "title": " Ken's Labyrinth", 
            "url": "https://github.com/sacredbanana/lab3d-sdl/releases", 
            "description": " Ken's Labyrinth Port", 
            "author": "sacredbanana", 
            "changelog": "4.1.8\\n\\nFix MIDI music (Windows and Linux) #6\\nSwitch build now built without debug symbols\\n\\n4.1.5\\n\\nFix the broken input configuration menu #2\\nNew setting for enabling/disabling vertical movement with the mouse. Disabled by default. #3\\n\\n4.1.4\\n\\n4.1.4: 2023-08-27\\n\\nUpdate SDL\\n\\n4.1.3\\n\\nNew version for Apple Silicon/Intel Macs\\nNintendo Switch version built with latest devkitPro\\nResamples sounds in realtime if audio device sample rate is not 44.1khz\\nCompiles for ARM based Linux machines\\n\\n4.1.2\\n\\nMemory errors caused by bug in the welcome screen for each level in Ken 1.x has now been fixed\\nDouble buffering used everywhere to fix display errors with Nvidia cards on Windows\\nNintendo Switch: 9.0.0 firmware compatibility\\n\\n\\n4.1.1\\n\\nFix crash on Nintendo Switch\\n\\n4.1.0\\n\\nother system changes\\n\\n4.0.1\\n\\nAdd CMake build system\\nLimit sound channels to 2 to avoid super fast sound and music\\n\\n\\n4.0.0\\n\\nBrand new game launcher menu allowing you to launch any version of the game\\nKen's Labyrinth 1.0/1.1 graphical bug fixes\\nStereoscopic 3D added as an option in setup menu\\n\\n3.2.2\\n\\nUSB keyboard and mouse support\\n\\n3.2.1\\n\\nAdded anisotropic texture filtering support for Nintendo Switch\\n\\n3.1.0\\n\\nCreate port for Nintendo Switch", 
            "screens": 0, 
            "extracted": 12212, 
            "version": "4.1.8", 
            "filesize": 6553, 
            "details": "Enhanced version of the MS-DOS classic 3D shooter Ken's Labyrinth.\\n\\nLAB3D/SDL is a port of Ken's Labyrinth to modern operating systems, using\\nOpenGL for graphics output and the SDL library to provide user input, sound\\noutput, threading, and some graphics support functions. Music output is\\nthrough Adlib emulation or MIDI (MIDI only on Windows, Linux and other\\noperating systems with OSS-compatible sound APIs).\\n\\nThis code has been tested on Windows 98, Windows ME, Windows XP,\\nSuSE Linux 7.2 and 8.1, Debian Linux 2.2, SunOS 5.8 (Solaris 8) and\\nFreeBSD 4.7.\\n\\nImprovements over the original Ken's Labyrinth:\\n\\n- Runs natively on 32-bit Windows or Unix.\\n- Supports big-endian CPUs.\\n- Uses OpenGL to provide hardware accelerated, anti-aliased graphics with\\n  trilinear interpolation in true colour (where available).\\n- Hi-res texture support.\\n- Multiple simultaneous sound effects.\\n- Improved General MIDI music.\\n- Adlib emulation.\\n- Game controller support.\\n- Many bug fixes.\\n\\n", 
            "app_dls": 1654, 
            "md5": "add59cff9352749608d332a2cc398923"
        }, 
        {
            "category": "advanced", 
            "binary": "/switch/SysDVR-conf.nro", 
            "updated": "13/05/2024", 
            "name": "SysDVR", 
            "license": "GPLv2", 
            "title": "SysDVR", 
            "url": "https://github.com/exelix11/SysDVR/releases", 
            "description": "Capture switch games directly on your PC via network", 
            "author": "exelix11", 
            "changelog": "6.1.1\\n\\nThis release is only a visual update and does not modify any feature, as such it is 100% compatible with version 6.1\\nFor more information check out the changelog for v6.1\\n\\nChanges:\\n\\nAdded French translation by @Charpy\\nFix some internationalization glitches\\n\\n6.0\\n\\nSysDVR Client now comes with a completely rewritten cross-platform GUI, no matter what operating system you're using you will get the new user interface, there is no more need to use the command line\\nHowever, the command line interface is still available and mostly compatible with the previous syntax. Note that some features were dropped, you can run SysDVR-Client --help to see the new commands.\\nSysDVR Client is now available for Android\\nThe android version only supports Android 10 and later only on devices with a 64-bit version of Android. This limits compatibility with older smart TVs and chromecasts but it's an unfortunate limitation of dotnet.\\nAs of 6.0, SysDVR Client is only distributed on this GitHub page, any reupload on the play store or other stores is not official and you should not download it.\\nThe new GUI supports capturing video clips and screenshots in real-time\\nIntroduced support for local network discovery\\nThe client is able to detect consoles in your local network and connect to them, no more typing IP addresses !\\nThe protocol is also completely documented on this repo in case you want to build your own client\\nSysDVR Client is now built as a native app, this means it will just work\u2122 without the need of installing dotnet\\nStarting with this update you will need to download the exact release for your operating system and CPU architecture\\nFor architectures not covered here (most notably raspberry pi and windows on arm) you can download the old-style cross platform build called SysDVR-Client-dotnet.7z and configure dotnet 8 and the needed native libraries on your own, refer to the manual install section of the guide.\\nSome client features were dropped during the rewrite, depending on requests from users they may be rentintroduced in future updates, in particular, the following features are no longer available:\\nStreaming to other players using the --stdout and --mpv options\\nRelaying the stream with the --rtsp option on the client. The on-console RTSP server \"Simple network mode\" is still available.\\nCommand line video recording with the --file option\\nMultiple fixes for bugs reported by users:\\nFixed video recording not working on linux\\nFixed audio not working on mac os\\nAdded an alternative audio output option for Windows computers where audio would not work\\n\\n5.5.6\\n\\nFix discord screenshare crashing SysDVR-Client #235\\nAuto reconnect when streaming in USB mode even if the console is unplugged\\nThis will try to find the same console by serial number, if you modified it with prodinfo editing tools and attach multiple consoles at the same time it may not work as expected.\\nThis is a client-only update, the sysmodule is the same as version 5.5.5\\n\\n5.5.5\\n\\nFix network mode disconnection issue #226\\nThis issue requried increasing the socket buffer sizes so SysDVR now uses more memory than v5.5, unfortunately i couldn't find any way around it, it's still better than 5.4 and previous version but not as good as 5.5.\\nAdded a splash screen to replace the white screen shown while connecting\\nIntroduce audio/video stream synchronization in the built-in player: SysDVR will automatically attempt to sync the streams to avoid delays\\nThe correction delay scales over the number of errors detected, in bad network condition you may feel some delay because the player gives up synchronization to avoid stuttering, opening the home menu at any time will resync the streams.\\nIf you encounter stuttering this feature can be disabled in the advanced settings of the GUI or with the command line argument --debug nosync\\nIntroduce duplicate keyframe dropping: When SysDVR on the console detects many duplicated packets in a short period of time it will stop sending them to save bandwidth and reduce delay.\\nThe effectiveness of this feature depends on the game, since it may cause visual artifacts this feature can be disabled in the advanced settings of the SysDVR-Settings homebrew.\\nImproved scheduling of the video frames in the built-in player: reduces occasional stuttering that was not related to the channel bandwidth.\\nImproved handling of .bat launcher files created by the GUI, now they can be placed everywhere and properly check that the needed paths exist\\nSome command line arguments have changed, in particular the --print-stats option has been renamed to --debug stats\\n\\n5.5\\n\\nCompletely fixed USB mode crashes and stuck in \"switching modes\" issues, for real this time.\\nThe communication protocol changed, make sure to update both the client on your pc and the sysmodule on your console.\\nAfter copying the sysmodule reboot your console.\\nOn Windows now we use a new WinUSB driver signed by Google.\\nSysDVR will appear as an android device using standard ADB drivers\\nIn practice this won't change anything except that now installing drivers is much more streamlined and they come from a more trusted source.\\nMemory usage of the full version of SysDVR has been substantially reduced.\\nIn general this means SysDVR should cause less crashes when used with other sysmodules\\nIf you were using the usb only version due to memory concerns give the full version another chance.\\nNow SysDVR-Client is also distributed as a flatpak, this should make installing it on linux much easier solving all dependency issues\\nFor the time being flatpak support is considered experimental due to limited testing, let me know of any issues\\nInstructions to install the flatpak version have been added to the guide\\nFix connection issues when in TCP Bridge mode\\nFix libusb errors on arm macs\\nMinor bug fixes\\n\\n5.4\\n\\nSysDVR-settings can now update dvr-patches from github releases automatically\\nThis feature works for USB-Only versions too however the USB-Only builds don't come with the settings app, you can get the NRO manually from the regular release\\nMost \"mode switching\" errors should have been solved\\nFix rtsp mode which has been broken probably since update 5.0 and no one noticed\\nOther minor fixes\\n\\n5.3.1\\n\\nAutomatic driver installation with libwdi on Windows\\nIf this is the first time you use SysDVR just open the GUI and you will be prompted to install the driver when you try to stream, if you already installed it with zadig nothing changes.\\nThis means that zadig is not needed anymore, if you're following a guide that requires it is outdated\\nThe official guide in the wiki has been updated to reflect this\\nLinux and mac users: ffmpeg (libavcodec) has been updated to version 59, if you still have the old 58 version update it with you package manager\\nBetter native dependency handling on MacOS and linux\\nFor MacOS all the dylib loading problems should be fixed now, you just need to install the libraries with brew\\n\\n5.3\\n\\nSysDVR-Client is now built with .NET 6, if you're still using .NET 5 you must update.\\n    Remember to choose the x64 version if your windows install is 64-bits or it won't work.\\n    If after installing it SysDVR can't find it manually fix your PATH environment variable\\nArm \"apple silicon\" macs are now supported and should work as expected #166\\n    If you previously used SysDVR over rosetta you must install native arm .NET and native arm dependencies with brew, refer to the guide for more info.\\nThe USB protocol has been improved, stuttering should be gone now.\\n    This means that latest client is not compatible with older sysdvr versions and vice versa, make sure to update the sysmodule on your console and reboot afterwards.\\nImprovements of the video decoding process, the client should use less CPU now.\\nNow it's possible to set the video player title with the --title command line option #170\\nOther minor improvements\\n\\n5.2\\n\\nCompatibility with dotnet 6, you won't have to download an outdated version to run SysDVR-client anymore. (dotnet 5 still works)\\nSupport for streaming from multiple consoles over USB\\n    By default SysDVR-client will connect to the first available console it finds, the serial is shown in the command window\\n    You can specify which console to connect to by adding --usb-serial your_serial to the command line, partial serials are matched by the last digits, for example --usb-serial 123 will connect to any console whoose serial ends with 123\\n    This feature won't work if sysdvr can't find the console serial, this can happen if you used prodinfo editing tools.\\nWhen using the built-in player you can add the --fullscreen option to the command line to automatically switch to full screen #138\\nFix a bug where sysdvr would get stuck on switching modes and required a reboot #132\\nWhen in full screen mode the window shouldn't disappear when it loses focus #161\\nWhen in full screen mode the mouse cursor is hidden #133\\nThe SysDVR-settings homebrew shouldn't crash anymore when SysDVR isn't running #165\\n\\n5.1\\n\\nFixed random image corruption in certain games, used to happen especially on still images #91\\nFixed USB errors on linux #106\\nExport recordings as mp4 files #104\\nThe recorded data is not processed to keep the cpu usage low, the output file may be big and not all video players may be able to play it. It's recommended to remux/re-encode the file after recording, an easy way of doing that is with ffmpeg: ffmpeg -i video.mp4 -c:v h264 -c:a aac output.mp4\\nWhile this seems to work well enough i didn't thoroughly test it with long recordings, please let me know of any issues.\\nReduced stuttering in the built-in video player\\nThe \"simple network mode\" RTSP server should now be more reliable and works in most video players\\n\\n\\n5.0.2\\n\\nFix USB on 11.0\\nFix scaling for the built-in player when using a monitor that's not 16:9\\n\\n5.0.1\\n\\nThis updates adds minor features and fixes issues reported by users.\\nOnly the client app was updated the sysmodule still shows version 5.0 but it has been reuploaded for convenience.\\n\\nChanges:\\n\\nAdded full screen mode for the built-in player, press F11 to toggle it (#98).\\nAdded scale filters for the built-in player, now the streaming should look better on high resolution screens.\\nShow a warning when running on Windows with an unsupported (x86) .NET runtime (#97).\\nFix a crash when using an audio device with more than two channels (#94).\\nShow current PID in the player titlebar to allow streaming software to distinguish between multiple instances.\\nMinor fixes.\\n\\n5.0\\n\\nSysDVR-Client was upgraded to the just released .NET 5.0 so we match numbers. Make sure to download it before trying this update.\\nCustom built-in video player to ensure best performances, brings down latency to about 100ms or less, literally can't get better than this.\\nThe built-in player uses ffmpeg and SDL2. Dlls are included for windows 64-bit, on mac and linux you can install them from your package managers, i added example commands in the guide.\\nAs for 32 bit Windows ffmpeg officially doesn't provide 32 bit builds anymore. If you're still using a 32 bit PC you can get unofficial builds from third parties and extract them to the SysDVR-Client folder, this should work but i'm not providing support for it, you should upgrade your PC.\\nThe implementation is still pretty rough and there's room for improvement but it's already a major step up from mpv, looking forward to user feedback.\\nAll the previous streaming modes are still avalilable, you can see them with the --help option\\nNew settings app with a proper GUI, explainations and links to the guide.\\nSysDVR-Client GUI has been updated to be simpler to use: only select USB or type the IP and click launch to stream.\\nTweaked some timing and threading priorities that should improve performances on the console side\\nDue to the limited testing i can do on my own i don't know if these changes have any negative side effects, i didn't notice anything wrong but in case of problems like lag in games or degraded performances let me know and i'll revert it if it's necessary.\\nAdded support for 32 bit arm in SysDVR-Client, now it can run on many single board computers like the raspberry pi\\nDepends on .NET support for your board. Raspberry pi zero and 1 are not supported due to older arm version.\\nWill most likely need manual configuration of hardware accelerated decoding to run smoothly, there's an explaination here\\nDue to the changes to SysDVR-Client the command line arguments have slightly changed as well, this will likely break launch scripts generated by the GUI, make sure to delete them and create new ones with the latest version.\\nThe guide has been updated with all the new features, check it out.\\n\\n4.0.1\\n\\nGeneral system stability improvements to enhance the user's experience:\\nReduced the number of FS sessions used by the sysmodule, should fix crashes when running alongside other sysmodules.\\nFix a possible crash on windows versions that don't use the english alphabet.\\n\\n4.0\\n\\nLow latency streaming is now supported.\\nStdin mpv streaming mode has been revamped to support low latency video streaming.\\nUnfortunately the console produces audio with a slight delay, this means that real-time streaming audio and video is not possible. This is not a bandwidth problem and even streaming just audio will be slightly delayed.\\nStreaming both audio and video is possible only via RTSP as stdin mode only supports one channel. Read the advanced section of the guide to find out how to launch mpv in low-latency mode.\\nUSB streaming protocol has been updated to improve performances.\\nOn windows the driver has been changed to WinUsb, if you previously installed the libusb driver you will have to replace it with zadig. The guide has been updated to explain how.\\nIf you wish to keep on streaming with libusb add --no-winusb to the command line or enable Force LibUsb backend in the GUI.\\nOn linux libusb is still used and nothing changes.\\nTCPBridge protocol has been changed as well to improve performances.\\nReduced the memory usage of SysDVR from 3MB to ~1.1MB if you previously used the USB-only build due to memory concerns check if this solves your problems.\\nThis may also fix SXOS compatibility but i haven't tested, will update once someone lets me know.\\nEdit: from early user reports SXOS seems to work fine, please comment in issue #39 if you still experience crashes.\\nAll legacy args for SysDVR-Client have been replaced with a new syntax, less used functions have been removed, if you're using bat files from the GUI delete them and create new ones.\\nDue to the protocol changes you can't use previous versions of the client and clientGUI with the new sysmodule\\nNow it's possible to stream to stdout so you can pipe the raw data to any video player (one channel only)\\nFix #30 #33 and several other bugs and crashes.\\n\\n3.0\\n\\nUsbStream has been renamed to SysDVR-Client, if you have the old version on your pc, delete it before extracting the new zip.\\nRTSP Streaming has been implemented in both SysDVR and SysDVR-Client, this implies the following:\\nAudio and video are finally properly synchronized.\\nRandom stream desyncronization (lag) should be finally solved, it can still happen depending on the player and connection stability but pausing and unpausing the stream is enough to fix it.\\nNative support for many more players and other software such as OBS, live streaming from SysDVR has never been easier.\\nAs now streaming requires a single player instance the GoLive feature on discord works as expected.\\nUnfortunately due to RTSP caching latency may have slightly increased, some players allow to disable it but not all, in the end is a stability/syncronization vs delay compromise (if you prefer less delay most of the previous modes are still available but not recommended)\\nWhile RTSP works fine mostly, some players like vlc don't really play nice with it, mpv is still the recommended player\\nThe following streaming modes have been added:\\nDirect RTSP from SysDVR: it's possible to connect a player to the switch in the local network without any extra setup. This means you don't even need SysDVR-client, just type your switch ip address in mpv on your phone/pc and you're good to go !\\nTCP Bridge: video and audio data is sent via network to UsbStream and it's relayed over RTSP (this has a few advantages over Direct RTSP as explained in the guide)\\nRTSP mode in UsbStream: video and audio data are sent over USB and streamed via RTSP on the local pc\\nThe old TCP streaming mode has been removed in favor of TCP bridge, it had major syncronization issues, in case you still need it it's still available in older versions.\\nFixed a few issues reported on GitHub\\nSince there have been some major changes the guide in the readme has been rewritten, please be sure to read it again to use the new modes\\n\\n2.0\\n\\nThis update addresses most of the issues reported since the first release, in particular:\\n\\nThe Network and USB versions have been merged in a single sysmodule, the zip includes an homebrew to set the streaming mode without having to reboot.\\nThis also allows to temporarily disable the USB stream so you can launch other homebrews like nxmtp or GoldLeaf (solves #5)\\nAs low memory usage is important to some users an USB-Only version is still provided, this however does not support the settings app and you have to manually remove it and reboot to use an homebrew requiring USB access.\\nFixed the annoying \"10 minutes bug\" #2\\nAdded UsbStreamGUI (Windows only), a graphical launcher for UsbStream for less experienced users\\nMinor changes to UsbStream to help troubleshoot issues\\nThe guide in readme has been updated to include latest chages, be sure to check it out.", 
            "screens": 0, 
            "extracted": 8049, 
            "version": "6.1.1", 
            "filesize": 3253, 
            "details": "This is an experimental sysmodule that allows capturing the running game output to a pc via USB or network connection.\\nTwo versions are provided:\\n\\nSysDVR.zip is the \"full\" version, can stream using both modes and comes with an homebrew app to switch between them\\nSysDVR-USB-Only.zip(not included in this download) will only stream via USB but uses less memory and should run alongside multiple sysmodules.\\nYou should use the full version unless you have specific requirements.\\n\\nTo play the stream mpv player is recommended as it's the most straight forward to set up, any other player that supports raw h264 streams via tcp or stdin should work but you may have to configure it manually.\\n\\nLimitations\\nVideo quality is fixed to 720p @ 30fps with h264 compression (hardware limit)\\nAudio quality is fixed to 16bit PCM @ 48kHz stereo. Not compressed\\nOnly works on games that have video recording enabled (aka you can long-press the capture button to save a video)\\nVideo and audio are two different streams, they're likely to desync as they require two different player instances. Vlc does support a secondary audio stream but i didn't manage to get it working properly.\\nOnly captures game output. System UI, home menu and homebrews running as applet won't be captured\\nVideo feed is not realtime, there will always be a minimum of ~1 second of delay.\\nStream quality depends heavily on the environment, bad usb wires or low wifi signal can affect it significantly.\\nUSB streaming is not available when docked\\nRequires firmware >= 6.0.0\\nClearly with these limitations this sysmodule doesn't allow \"remote play\" and does not replace a capture card.\\n\\nUsage\\nSetting up the sysmodule\\nThe provided builds already contain the correct file structure, you should just be able to extract them to your sd card.\\nCFWs other than atmosphere should work but I won't provide support for them.\\n\\nBy default SysDVR will stream over network, to switch between modes and set the default one you can use the SysDVR Settings homebrew included in the zip.\\n\\nNetwork streaming\\nThis is the easiest way to stream, In this mode the sysmodule is completely standalone, you should be able to play the video stream just by running mpv tcp://<switch ip address>:6666 --no-correct-pts --fps=30 and mpv tcp://<switch ip addr>:6667 --no-video --demuxer=rawaudio --demuxer-rawaudio-rate=48000 for audio.\\nWhen using network streaming it's not recommended to stream both audio and video at the same time as it may cause slowdowns. In general network streaming has more lag and delay compared to USB, it is worth the time to set it up, especially for gameplay recording.\\n\\nUSB streaming\\nTo stream via usb you need the UsbStream program, it's built using .NET core and is compatible with linux as well.\\nFirst of all you should make sure to install .NET core 3 on your pc, then proceed to setup the drivers, this step is needed only the first time:\\n\\nDriver setup on windows\\nOn windows you may get the device not found or platform not supported errors or very bad performance on the stream, in this case you may have the wrong driver set up.\\nPlug your switch in the computer while running SysDVR in USB mode and launch zadig install the libusb-win32 driver for the \"Nintendo Switch\" device. Before installing make sure the target device USB ID is 057e 3006, if it's different the sysmodule may not be running, try waiting a bit (it should start around 20 seconds after the console boot) or check again your setup.\\nThis won't interfere with other applications that communicate with the switch via usb as this sysmodule uses a different product id.\\n\\nDriver setup on linux\\nOn linux you may have errors about loading the libusb-1.0 library, this happens when the file name is different than the one expected by dotnet, you can make a symlink as described on the LibUsbDotNet repo:\\nsudo find / -name \"libusb-1.0*.so*\" and then\\n\\ncd /lib/x86_64-linux-gnu\\nsudo ln -s libusb-1.0.so.0 libusb-1.0.so\\n(Example commands, change the paths with the one you find on your pc)\\n\\nStreaming\\nMost Windows users can simply use UsbStreamGUI, it will allow you to select the streaming mode and launch UsbStream directly.\\n\\nLinux users will have to use the UsbStream command line interface (Note that this is available on windows too and provides a few more options compared to UsbStreamGUI)\\nLaunch UsbStream like this: UsbStream video <streaming mode> <arg> audio <streaming mode> <arg>\\nThese are valid streaming modes:\\n\\nstdin : pipes the received data directly to a video player via stdin, this will use no caching so you'll have low delay but it may lag. This will likely require you to provide the args to pass to the player, you can do so like this: video stdin <player executable> args \"<args list>\"\\nmpv : same as stdin but will automatically set up the args for mpv so it just requires the path\\ntcp : opens a tcp server so players can connect to it and use their own caching mechanism to remove or reduce lag (at the price of an higher delay)\\nfile : writes the received data directly to a file so it can be converted to a common format later.\\nWhen using mpv the arg is the path of mpv on your pc (use the .com file on windows), you have to repeat it twice if using both streams.\\nThe tcp option requires a free port number and the file option the output file path.\\nTo disable a stream just omit the name and its fields.\\n\\nExample commands:\\n\\nUsbStream audio mpv C:/programs/mpv/mpv : Plays audio via mpv located at C:/programs/mpv/mpv, video is ignored\\nUsbStream video mpv ./mpv audio mpv ./mpv : Plays video and audio via mpv (path has to be specified twice)\\nUsbStream video tcp 1337 audio file C:/audio.raw : Streams video over port 1337 while saving audio to disk\\nLaunching UsbStream without any parameter will display more options and examples.\\nTo connect to the tcp streams you can use: mpv tcp://localhost:<video port> --no-correct-pts --fps=30 for video and mpv tcp://localhost:<audio port> --no-video --demuxer=rawaudio --demuxer-rawaudio-rate=48000 for audio\\n\\nTips\\nTo get the most out of this sysmodule you will have to do some testing to find configuration that works best for you, here are some tips and useful information:\\n\\nIf the video stream doesn't start immediately try moving the camera around in the game, to display something the video player needs to acquire a video keyframe first.\\nAn usb 3 wire is slightly better than usb 2, but both should work.\\nQuality also depends on the cpu utilization of the game you're running, OC can improve performances.\\nUsing cache will reduce lags at the cost of an higher delay, for mpv it's on by default (except when using usb stream with mpv mode), if you want to try without it the command line arg for mpv is --cache=no --cache-secs=0. There's a lot of room for experimenting here, try different values to find the combination that works best for you.\\nIf using no caching when the screen goes full black or white (eg loading screens) it may cause some desync and the stream will start to drop frames, eventually it will fix by itself but it could take some time, the fastest solution is to open the home menu for a few seconds and then resume the game, for usb stream you can try setting the --desync-fix flag (this will introduce glitches).\\nCommon issues\\nAfter copying the sysmodule to the sd atmosphere won't boot anymore\\nThis happens if you have too many sysmodules or ones particulary heavy like sysftpd, remove them to launch SysDVR.\\nIf you really need other sysmodules at the same time you can try using the USB-Only version as it uses less memory (512K vs 3MB)\\nTo remove SysDVR delete the /atmosphere/titles/00FF0000A53BB665 folder, to remove other sysmodules if you're not sure about the right ID delete the whole /atmosphere folder and download a fresh copy of atmosphere.\\n\\nHomebrews using USB like GoldLeaf or nxmtp won't launch anymore\\nThis is because the USB interface is being used by SysDVR, if you're using the full version you can swith streaming modes using the SysDVR Settings homebrew included in the zip.\\n\\nWhen using network stream there's a lot of delay or it increses over time\\nMpv will use a cache buffer to avoid lag when the connection drops some packets but this increases delay, you can disable it by using --cache=no --cache-secs=0\\n\\nThe video is laggy or there are a lot of glitches\\nMake sure the connection between the console and your pc is good enough, if streaming via network move both closer to the router or switch to LAN, for USB try using an higher quality wire.", 
            "app_dls": 44562, 
            "md5": "68ba951d430ec1a8dc26c9d8d3639062"
        }, 
        {
            "category": "game", 
            "binary": "/switch/d1x-switch/d1x-switch.nro", 
            "updated": "28/10/2018", 
            "name": "d1x-switch", 
            "license": "none", 
            "title": "dx1-switch", 
            "url": "https://github.com/aagallag/DXX-Switch/releases", 
            "description": "source port of Descent.", 
            "author": "aagallag", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 1633, 
            "version": "0.58.6", 
            "filesize": 651, 
            "details": "A Nintendo Switch port of Descent I. This is a fork of DXX-Retro, which is a fork of DXX-Rebirth, which is a fork of the original engine source code created by Parallax Software Corporation.\\n\\nCopy descent.hog and descent.pig to the switch/d1x-switch directory. These files are included with a purchase of the game. Tested with Descent I from Steam.\\n\\n\\nKnown issues and missing features\\nMultiple save files don't work (currently hardcoded to player.plr)\\nDoesn't support the joysticks\\nNo music\\nOnly tested with the Descent files from Steam; GOG and CD-ROM releases have not been tested\\nDoesn't utilize 1080p resolution when docked\\nNeed an icon\\nResize the text for larger resolutions (Bug only on D1X Switch)\\nEnable the original HUD\\nNetwork/Multiplayer is not enabled\\nLevel Selection menu doesn't work (no way to input a different level)\\n\\nDXX Retro is released under the D1X-Rebirth License ", 
            "app_dls": 1156, 
            "md5": "ce90ab4846da8d0e75978b42383800fe"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "02/05/2020", 
            "name": "sys-screenuploader", 
            "license": "Lesser GPLv3", 
            "title": "sys-screenuploader", 
            "url": "https://github.com/bakatrouble/sys-screenuploader/releases", 
            "description": "Screenshot uploader", 
            "author": "bakatrouble", 
            "changelog": "0.0.10\\n\\nLogging was remade completely: added an option to clear logs on launch; format was changed; log file is now readable even while the sysmodule is running (mostly)\\nhttps://screenuploader.baktrouble.me now supports placeholders for captions: {date}, {time} and {title}\\n\\n\\n0.0.9\\n\\nNow it's possible to add captions to your uploaded media (if you're using my service) or pass individual arbitrary url parameters for requests to your own server.\\nAlso fixed logging messages a bit.\\n\\n0.0.8\\n\\nAdded option to disable uploading of certain media types globally and on per-app basis\\nSysmodule version is now logged at start\\nA configuration builder tool was released at https://screenuploader.bakatrouble.me/cabinet/configuration/\\n\\n0.0.7\\n\\nDestinations are now configurable on per-application basis\\nAlbum directory detection was also improved (thanks @HookedBehemoth)\\nDefault configuration is now usable and uploads to the #default-destination channel on this project's Discord server\\nConfiguration file structure was changed, but should still be compatible with the old one\\n\\n0.0.6\\n\\nOld media are not reuploaded when the newest one is deleted\\n\\n0.0.5\\n\\nFix frequent segfaults when the file we try opening is still opened by another process\\n\\n0.0.4\\n\\nReduced memory footprint\\nHardcoded /Emutendo/Album album path for SX OS (just checking whether the path exists, is there any better way to either detect SX OS or retrieve path from system configuration?)\\nConfigurable album path (use album_path option if yours was detected incorrectly)\\nSkipping incorrect directory names\\n\\n0.0.3\\n\\nI've finaly made libcurl work, now we support arbitrary server URLs and HTTPS.\\nAlso a toolbox.json was added for integration with Kosmos Toolbox.", 
            "screens": 0, 
            "extracted": 1001, 
            "version": "0.0.10", 
            "filesize": 757, 
            "details": "Homebrew Nintendo Switch NSP sysmodule for automatic upload of screen captures to remote server.\\n\\nFor instructions see https://screenuploader.bakatrouble.me\\n\\nWebsite repo", 
            "app_dls": 5580, 
            "md5": "ea7ecb554488a80be473b130b9093725"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Bomberman_libGdx.nro", 
            "updated": "28/08/2022", 
            "name": "Bomberman-SwitchGDX", 
            "license": "MIT", 
            "title": "BombermanGDX", 
            "url": "https://github.com/TheLogicMaster/Bomberman-SwitchGDX", 
            "description": "A Bomberman game made with LibGDX and ported to Switch", 
            "author": "TheLogicMaster", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 30194, 
            "version": "2.2", 
            "filesize": 14424, 
            "details": "This is a Bomberman game made with the LibGDX Java game framework and ported to the Switch using the SwitchGDX project.\\n\\nDeveloper: Eugene Huang\\nBackend and port: Justin Marentette", 
            "app_dls": 3457, 
            "md5": "1cfa6cd95ab5b75cd15e1e548f564929"
        }, 
        {
            "category": "tool", 
            "binary": "/atmosphere/contents/01006A800016E000/romfs/skyline/plugins/libnro_hook.nro", 
            "updated": "02/11/2024", 
            "name": "UltimateTrainingModpack", 
            "license": "n/a", 
            "title": "UltimateTrainingModpack", 
            "url": "https://github.com/jugeeya/UltimateTrainingModpack/releases", 
            "description": "An application to drastically improve the training mode in Super Smash Bros Ultimate", 
            "author": "jugeeya", 
            "changelog": "6.2.0\\n\\nAdded support for SSBU v13.0.3 - @asimon-1\\nIf the \"Combo\" box is hidden in the vanilla menu, also hide modpack notifications - @asimon-1\\nIf nothing is selected in the \"Playback Button Slots\" submenu, pressing the recording playback button combo no longer crashes the game - @asimon-1\\nWhile either the vanilla or modpack menu is open, other button combinations (e.g. save states, input recording) no longer can be triggered - @asimon-1\\nHero no longer casts extra spells when loading a save state with certain buffs selected in the menu - @asimon-1\\nSave states now remember if Robin had bronze or levin sword equipped - @GradualSyrup\\n\\n6.0.1\\n\\nBugfixes\\nFix a bug where the auto-updater would continually prompt for updates - @asimon-1\\nAdjustments\\nHighlight No by default when prompting for auto-update - @GradualSyrup\\n\\n6.0.0\\n\\nFeatures\\nInput Recording: Trigger a recording and play it back (default binds: R+DPad Down, R+DPad Up respectively)! These recordings can be customized in terms of length between 60 and 600 frames, looping, and more! They can be configured to run in familiar situations like Mash or Ledge options and more - @GradualSyrup, @jugeeya\\nInput Display: Show inputs in a per-status, frame counted log-style viewer! Choose between raw controller inputs and \"Smash\"-style inputs, being what the game actually understands and passes to fighters - @jugeeya, @xhudaman\\nAuto-Updater: Allow the modpack to automatically update itself when updates are available. Users can choose which update track they'd like from the Stable or Beta track in the menu - @asimon-1\\nCustom Stages: The Custom Stage Tab is now visible in Training Mode, allowing for labbing on Custom Stages - @GradualSyrup, @Raytwo\\nMash Overrides: Specify which mash options to perform in specific scenarios - @GradualSyrup, @asimon-1\\nHide Tech Animations: Animations and the CPU cursor are are hidden (character model/effects are invisible) during when the CPU is teching-- use this to practice true reaction tech chasing! The fixed camera is also modified on legal stages to aid this practice. - @GradualSyrup\\nCustomizable Button Configs: Configure button combinations for save states and input recording in the menu itself. Please note that we now use raw inputs rather than Smash inputs, and save state save/load binds have moved to L+DPad Down, L+DPad Up respectively - @jugeeya\\nPress Start/Select to Open Menu: You can now open the menu with start hold; pressing start for < 10 frames gives the original menu. On controllers with the minus button, minus can also be used to open the menu. This behavior can be toggled, and the old default B+DPad Up will always work. This change allows for much more seamless opening and closing of the modpack's menu - @jugeeya\\nDodge Staling: Control whether the CPU is affected by the game's default dodge (roll, airdodge, etc.) staling mechanism. - @GradualSyrup\\nBugfixes\\nKeep Duck Hunt's Reticle, Luma, Mii Fighter hats, Mythra's sword, and Pikmin when loading save states - @GradualSyrup\\nFix Pokemon Trainer load on save state - @GradualSyrup\\nAllow Pokemon to be saved properly\\nSpeed up load to match other fighters\\nRemove effects as artifacts\\nFixed bug where the Dash Attack mash option would not properly trigger dash attack - @GradualSyrup\\nFixed Hero, Little Mac, WFT, Sephiroth, and other characters' SFX/VFX replaying on save state load - @GradualSyrup\\nFixed missed tech toggles not occurring when characters are jab locked - @GradualSyrup\\nFixed bugs with regard to menu inputs - @jugeeya\\nInput delay now works properly with the less delay mod - @jugeeya\\nAdjustments\\nAdded many new character features to the Buffs Menu - @GradualSyrup\\nShulk Monado Arts\\nMin Min Power Dragon\\nWario Waft - @saad-script\\nAutomatically save and load many new character features with save states - @GradualSyrup\\nOlimar's Pikmin line up\\nKirby's hats with save states\\nRobin's tomes and Levin Sword\\nIncineroar's Revenge\\nSora's Spell\\nMade menu larger and added more columns for increased visibility, especially on handheld - @jugeeya\\nUsers can close the menu immediately after opening it - @jugeeya\\nMenu exit inputs (B) no longer have effects in-game (B causing a Special input) - @jugeeya\\nDynamic help text in the menu, so users can quickly see their input binds for button configurations and more - @austintraver\\n\\n5.1.1\\n\\nFixed a bug where save state slots could cause the menu to crash when closing - @jugeeya\\nFixed a visual glitch where icons would obscure the digits when selecting random damage - @xhudaman\\n\\n5.1\\n\\nRandomize Save State Slots: Use Grab+DPad Left/Right to switch slots for saving and loading save states! - @jugeeya, @xhudaman\\nFixed a bug where an invalid save state load could cause some effects to disappear outside training mode (missed tech effects, angel platforms, and more) - @jugeeya\\nRevamped save state slots to use the menu, meaning misinputs with Next/Previous Save State slot can no longer occur - @jugeeya\\nAdjusted some help texts - @austintraver\\n\\n5.0\\n\\nSave State slots: Use Grab+DPad Left/Right to switch slots for saving and loading save states! - @jugeeya\\nFaster, Native, Smash-based UI: Greatly improved UI and speed for the quick menu - @jugeeya, @xhudaman, @austintraver\\nMash Triggers: Added Mash Triggers feature, allowing configuration of when the CPU performs mash options - @GradualSyrup\\nAdded ability to perform mash option after ledge trump, footstool, clatter, hitstun, tumble, and within certain distances - @asimon-1\\nCustomizable Button Configs: Allow configurable button combinations for save states and opening the menu - @asimon-1\\nRandom Damage Save States: Allow user to select random damage values on save state load - @asimon-1, @jugeeya\\nCrouch Option: Added option for CPU to crouch when grounded - @asimon-1\\nHUD Option: Added option to toggle off HUD - @jugeeya\\nNo Star KOs: Prevent Star KOs in training mode - @GradualSyrup\\nFrame Advantage as Textbox: Display frame advantage as a notification textbox - @jugeeya\\nWelcome Textbox: Display welcome notification with instructions on how to use the mod - @jugeeya\\nMenu Cursor Memory: Menu remembers which submenu was selected between openings - @jugeeya\\n\\n4.0.1\\n\\nRyujinx emulator support with a new quick menu that also works on console - @jugeeya\\n- Ryujinx works on versions >= 1.119\\nNew tabbed and visually overhauled web menu with proper submenu modals - @asimon-1 , @jugeeya\\nSave states features and QoL changes:\\n- Save state autoloading: choose to reload save states when any fighter dies! This is off by default, but I highly recommend using it. - @jugeeya\\n- Save states with character-specific items, including Peach turnip, Diddy banana, Link bomb, and many more! - @jugeeya , @GradualSyrup , @asimon-1\\n- Character specific buffs can be saved on save state reload! They can be toggled by using the Buff Options submenu. Includes Hero acceleratle, Arsene, and many more. - @GradualSyrup\\n- Special moves with charges are automatically saved on save state load. Also, steve's tool types and usages. - @GradualSyrup\\n- No screen shake or death audio anymore! - @GradualSyrup\\n- Players are no longer able to run through other fighters after save state reload during hitstun - @GradualSyrup\\nClatter strength, or in layman's terms setting the CPU to \"mash\" out of bury, freeze, grab, etc. - @asimon-1\\nStaling on by default in training mod - @GradualSyrup\\n\\nFixed issue where Quick Menu would not respect multiple selections - @jugeeya\\n\\n3.2\\n\\nSlip options: configure defensive options after trip animations - @asimon-1\\nConfigurable default menu: you can press R to save a version of the menu as a new default, and it'll persist across boots. - @asimon-1\\nThrow options: configure throw direction once the CPU grabs you - @GradualSyrup\\nBoth Pokemon Trainer AND Ice Climbers now function properly with save states! This was a huge bug that made the feature unusable for mains of these characters, or those labbing against them. - @asimon-1 @GradualSyrup\\nDI directions are now randomly chosen properly during subsequent hits of a combo. A bug was recently introduced where the direction would only be chosen on the first hit. - @asimon-1\\n\\n3.1\\n\\nSave states toggle: turn them on and off - @jugeeya\\nCompatibility with at least the latest Atmosphere/Switch firmwares (1.2.1, 13.1.0 respectively)\\n\\n3.0\\n\\nNew Features\\nOpen the menu in training mode only by holding Special and presing Up Taunt!\\nConstant shield toggle - sidschingis\\nAttack angle toggles - sidschingis\\nSave state damage toggle - sidschingis\\n\"Do nothing\" ledge option - sidschingis\\nSDI strength toggle - sidschingis\\nTech options apply to wall/ceiling techs - sidschingis\\nReplace Tesla menu framework with Web framework - @jugeeya, @asimon-1 , sidschingis\\nUses native switch styling - @jugeeya\\nIncludes help text - @asimon-1\\nIncludes option to reset open menus- @asimon-1\\nIncludes option to reset all menus - @asimon-1\\nSelections persist across game loads - @jugeeya\\nLeft / Right toggles for direction inputs (DI, SDI, airdodge, etc) - @asimon-1\\nLengthen ledge delay options to 0-300 frames - @asimon-1\\nSave state mirroring toggles - @asimon-1\\nFrame advantage now works on hit - @jugeeya\\nVersion check on plugin load - @asimon-1\\nBugfixes\\nCPU no longer always wall techs - sidschingis\\nLaunch indicator no longer jitters randomly when multiple DI options are selected - @asimon-1\\nMenu no longer fails to display in docked mode when screen size is not set to 100% - @jugeeya\\nFixed the issues where the game would crash after a couple of hours of playing before entering/after leaving a match. The modpack is now very stable inside and outside of training mode! - @jugeeya\\n\\n2.6\\n\\nNew features\\nStage Hazards Toggle. Set stage hazards on or off in Training Mode! Use this to practice on tournament legal stages with hazards. - @blu-dev\\nInput Delay. Practice with emulated extra input delay, in frames. This should help a lot by allowing practice with online's default delay. - @jugeeya\\nShield Tilt. Set the CPU to tilt their shield in a direction while set to Hold or Infinite shield. - @sidschingis\\nMissed Tech Options. Set the getup option selected by a CPU after missing a tech. - @jugeeya\\nLedge/Aerial Delay. Set the CPU to delay getting up from the ledge, or performing an aerial. - @sidschingis\\nFixes\\nFixed a bug where the CPU would SDI far more than once per 4 frames when a mash option was set.\\n\\n2.5\\n\\nNew features\\nFrame Advantage. *Currently only works on shield. Practice moves on shield to find out the frame advantage of the moves performed. Best used with Infinite Shield. - @jugeeya\\nAny submenu that allows you to toggle multiple options will randomize between only those options. This is the vast majority of items in the menu, and it's a huge change that allows for really deep practice. - @astraycat\\nSDI: Works the same way as the DI toggle, but choose a direction for the CPU to SDI every 4 frames of hitlag. - @sidschingis / @jugeeya\\nFollowups: Set a mash option to perform directly after the one specified with Mash Toggles. - @sidschingis\\nDirectional Airdodge. Choose one or many (random) direction(s) and select mash airdodge out of hitstun - @sidschingis\\nAerial Options: Edit how the CPU performs aerials: toggle fast falls, full hops, falling aerials, and fast fall delay - @sidschingis\\nSet a CPU to mash an option in neutral/idle state - @sidschingis\\nTilts added to Mash options - @sidschingis\\nOOS Offset, which allows the CPU to delay until the specified number of hits to perform an OoS option - @sidschingis\\nOOS Reaction Time, which forces the CPU to delay a specified number of frames before performing an OoS option - @sidschingis\\nChoose between forwards/backwards rolls - @sidschingis\\nFixes / Changes\\nSave states now work in all positions (including platforms) and also reset staling with Staling On - @jugeeya\\nHold Shield toggle won't decrease shield until hit once - @sidschingis\\nDI fixes (crossup DI used to switch up/down angles) - @jugeeya\\nCPUs will perform ground bounce, ceiling, and wall techs when possible - @jugeeya\\nRearranged the menu/added sections - @jugeeya", 
            "screens": 3, 
            "extracted": 6856, 
            "version": "6.2.0", 
            "filesize": 1562, 
            "details": "A Skyline plugin using cargo-skyline for adding features to the training mode. It interfaces with skyline-web to provide a menu for customizing training options.\\n\\nFrame Advantage.\\nCurrently only works on shield. Practice moves on shield to find out the frame advantage of the moves performed. Best used with Infinite Shield.\\n\\nSave States\\nAt any time in Training Mode, you can press Grab + Down Taunt to save the state of training mode. This will save the position, state, and damage of each fighter, which can then be reverted to at any time with Grab + Up Taunt. Use this instead of the built-in training mode reset!\\n\\nHitbox Visualization\\nCurrently, hitboxes and grabboxes are supported. When visualization is active, other move effects are temporarily turned off for easier visualization.\\n\\nSelecting Multiple Options\\nAny submenu that allows you to toggle multiple options will randomize between only those options. This is the vast majority of items in the menu detailed below, and it's a huge change that allows for really deep practice.\\n\\nMash Section\\nMash Toggles\\nNote: Combine this with the shield toggles to force the CPU to perform options OoS when their shield is damaged!\\n\\nCPUs will mash an option on the first frame possible out of hitstun.\\n\\nAirdodge has specific logic that the CPU will also flash shield when landing.\\n\\nFollowup Toggles\\nSet a mash option to perform directly after the one specified with Mash Toggles.\\n\\nMash in Neutral\\nSet a CPU to mash specified option in neutral/idle state.\\n\\nLeft Stick Section\\nDI\\nCPUs DI in the direction specified, relative to the player's facing position.\\n\\nSDI\\nWorks the same way as the DI toggle, but choose a direction for the CPU to SDI every 4 frames of hitlag.\\n\\nAirdodge Direction\\nWhen a CPU is set to mash airdodge, it will use this direction as its airdodge direction.\\n\\nChase Section\\nLedge Option\\nCPUs will perform a random ledge option among the selected options.\\n\\nCPUs will also perform a defensive option after getting up.\\n\\nTech Option\\nCPUs will perform a random tech option among the selected options.\\n\\nCPUs will also perform a defensive option after getting up.\\n\\nDefensive Option\\nCPUs will perform the defensive option a CPU will perform after teching or getting up from the ledge, among the selected options.\\n\\nShield Section\\nShield Options\\nInfinite: CPUs will hold a shield that does not deteriorate over time or by damage.\\nHold: CPUs will hold a shield that does not deteriorate over time until hit for the first time.\\nOOS Offset\\nThe CPU will delay until the specified number of hits to perform an OoS option.\\n\\nOOS Reaction Time\\nThe CPU will delay a specified number of frames before performing an OoS option.\\n\\nAerials Section\\nEdit how the CPU performs aerials.\\n\\nFast Fall\\nFull Hops\\nFalling Aerials\\nFast Fall Delay\\nSpecified in frames (from apex of CPU's jump).\\n\\n\\n\\n", 
            "app_dls": 16222, 
            "md5": "dc1b7a295768db560dad3e85af77839e"
        }, 
        {
            "category": "game", 
            "binary": "/switch/game-example/game-example.nro", 
            "updated": "11/09/2018", 
            "name": "game-example", 
            "license": "N/A", 
            "title": "Game-example", 
            "url": "https://github.com/Dontwait00/game-example/releases", 
            "description": "(wip) game-example", 
            "author": "Dontwait00", 
            "changelog": "1.0\\n\\nfinished adding walls;\\nfixed walls printf not accurate;\\nfixed Makefile;", 
            "screens": 0, 
            "extracted": 262, 
            "version": "1.0.0", 
            "filesize": 111, 
            "details": "(wip) game-example\\n\\nreally very basic game-example homebrew for switch", 
            "app_dls": 178, 
            "md5": "1ca19d7253525af756c01ff64205739d"
        }, 
        {
            "category": "game", 
            "binary": "/switch/xash3d-decay.nro", 
            "updated": "16/09/2019", 
            "name": "xash3d-switch-decay", 
            "license": "GPLv3", 
            "title": "xash3d-switch-decay", 
            "url": "https://github.com/switchports/xash3d-switch/releases", 
            "description": "Xash3D FWGS Engine", 
            "author": "Datamats", 
            "changelog": "v1.0.1\\n\\nUpdate libnx so hid will work on 9.0.0+\\n\\nv1.0.0\\n\\nnwindow is used now instead of the deprecated gfx api\\nthe touchscreen should work now\\nmoved over to filesystem times for savefiles thanks to libnx\\nimplemented the console and various UI requiring text input using swkbd\\nadded options for overclocking, for the really care cases where you might benefit from it\\nmade cl_showfps default to 0 (you can always change it using the console)\\na dmc sdk branch has been ported and is available, additionally a decay port has been added that needs more testing\\n\\nv0.4.0\\n\\nAll the nro's have been renamed to ease the process of adding new games and making it easier to port new dlls, please delete all the half-life-*.nro's\\nThe game switching implementation should be a lot more flexible now and you should be able to keep the nro's where you want as long as you keep them together\\nMods should now work as expected as long as they do not contain custom entities / weapons or other specialized code put in a dll file\\nOpposing force should be fixed\\nVarious fixes and improvements to stability\\n\\nv0.3.0\\n\\nBlue Shift / Opposing Force builds has been ported and added to the build system\\nThe Custom Game menu should not crash anymore, but it will only work if all the nro's are in the /switch directory and are not renamed.\\n\\nv0.2.1\\n\\nThere should be no more crashes after quitting from the menu back to the hbmenu\\n\\nv0.2.0\\n\\nThe timestamp of saves are now saved into a own file as a temporarily workaround until libnx gains timestamps. (Now you will go back to the last autosave when you die instead of having to start over)\\nIncreased the buffer for file copies, this makes saving in some cases multiple times faster\\nFixed the screenshots for saves being broken due to the dynamic resolution system\\nMore work trying to fix crashes (hbmenu will still crash when you quit from the mainui, this is being worked on)\\nAdded a working icon", 
            "screens": 0, 
            "extracted": 14912, 
            "version": "1.0.1", 
            "filesize": 5855, 
            "details": "Xash3D Engine is a custom Gold Source engine rewritten from scratch. Xash3D is compatible with many of the Gold Source games and mods and should be able to run almost any existing singleplayer Half-Life mod without a hitch. The multiplayer part is not yet completed, multiplayer mods should work just fine, but bear in mind that some features may not work at all or work not exactly the way they do in Gold Source Engine.\\n\\nXash3D FWGS is a fork of Xash3D Engine, which aims on crossplatform and compatibility with original Xash3D and Gold Source.\\n\\n\\nThis packages already includes the extras.pak files from https://github.com/FWGS/xash-extras/releases in your valve directory ,\\n\\nGet a copy of half life that contains the 'valve' folder. and add to the valvev folder already within your appstore download.\\n\\nXash3D should now launch, it will take a couple seconds to load the assets needed for displaying the menu and you should be able to play!\\n\\nand problems please use the appstore feedback form, thanks..", 
            "app_dls": 409, 
            "md5": "f85737a86afe9376873ede3471f51c0a"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/reboottopayloadswitch/Reboot.nro", 
            "updated": "07/05/2020", 
            "name": "reboottopayloadswitch", 
            "license": "GPLv2", 
            "title": "reboottopayloadswitch", 
            "url": "https://github.com/metehankaygsz/reboottopayloadswitch/releases", 
            "description": "Allows to boot payload file from hbmenu", 
            "author": "metehankaygsz", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 298, 
            "version": "1.0", 
            "filesize": 132, 
            "details": "(SXOS,Atmosphere,ReiNX,Hekate) You must rename payload file as 'payload.ini' and copy it to the SD card Atmosphere's Reboot to Payload, modified to boot payload.bin\\n\\nThis is Atmosphere's reboot to payload code, modified to change the directory is looks for the reboot payload in.\\n\\nThe original files can be found in GitHub here: https://github.com/Atmosphere-NX/Atmosphere https://github.com/Adran-Marit/Reboot-to-Payload", 
            "app_dls": 5749, 
            "md5": "6618a54fa22ed9a5583b9427dce03d89"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "15/12/2024", 
            "name": "SaltyNX", 
            "license": "n/a", 
            "title": "SaltyNX", 
            "url": "https://github.com/masagrator/SaltyNX/releases", 
            "description": "Background process for the Nintendo Switch for file/code modification", 
            "author": "masagrator", 
            "changelog": "1.1.1\\n\\nReverseNX-RT\\nFix issue with The Legend of Zelda: Echoes of Wisdom compatibility\\nFix issue with Unravel Two compatibility\\n\\n1.0.6\\n\\nFix a bug introduced in 1.0.0 release that blocked FPSLocker patches from working in games utilizing Vulkan\\nFix a bug where if 32-bit game was using skyline plugin next to SaltyNX Core, Core was patching SVCs inside skyline plugin instead of nnSDK (this doesn't prevent crash in mods like CTGPDX, from this release it's purely skyline plugin's fault that must be fixed by their devs. More: #60 (comment))\\n\\n1.0.0\\n\\nAdd support for 32-bit games (this includes NX-FPS and ReverseNX, it excludes external plugins)\\nFix issue with asm patches memory overflowing\\nFix bug in FPS lock not working properly in EGL and Vulkan games\\nThanks to all people who helped me testing this on as many 32-bit games as possible.\\n\\n0.9.3\\n\\nDisable ReverseNX-RT in The Legend of Zelda: Echoes of Wisdom, fixing game crashing when exiting.\\n\\n0.9.2\\n\\nFix resolution grabbing compability with Skyrim by changing accepted ratios from <1.3, 1.9) to <1.2, 1.9)\\n\\n0.9.1\\n\\nExtended grabbed resolutions accepted ratios from <1.7, 1.9) to <1.3, 1.9). Fixes dynamic resolution detection issue with games using Id Tech engine like DOOM 2016, Doom Eternal, Wolfenstein 2.\\n\\n0.9.0\\n\\nAdd support for new iteration of Vulkan (fixes issues with Star Wars Bounty Hunter detection)\\nAdd support for dumping resolutions from games using NVN\\nREMEMBER TO REMOVE NX-FPS.elf and ReverseNX-RT.elf FROM SaltySD/plugins FOLDER, otherwise there will be dragons!\\n\\n0.8.1\\n\\nUpdated display refresh rate change function which now sets it perfectly instead of \"very close\" (thanks to Cooler3D for sharing how to fix it).\\nFix improperly implemented gatekeeping OLED model from using Display Sync via IPC\\nREMEMBER TO REMOVE NX-FPS.elf and ReverseNX-RT.elf FROM SaltySD/plugins FOLDER, otherwise there will be dragons!\\n\\n0.7.4\\n\\nReapply custom NVN interval in case if game avoids using NVN API to set it (fixes an issue with Call of Juarez: Gunslinger reapplying 30 FPS lock)\\n\\n0.7.3\\n\\nFix shared memory not being cleaned up upon going into hbmenu in title override (this caused ReverseNX-RT overlay to show that ReverseNX was active while it was not)\\n\\n0.7.2\\n\\nFix compability issues with updated rtld's ModuleObject struct (fixes crash in Tomb Raider I-III Remastered)\\nAdd Donkey Kong Country: Tropical Freeze to exceptions (heap issues from second level)\\n\\n0.7.1\\n\\nApply hacky solution for not working replace imports in retail games using RELR.\\nReduce size of Core by half\\n\\n0.7.0\\n\\nSupport replacing imports in NROs (f.e. EA SPORTS FC 24)\\nIntegrate NX-FPS and ReverseNX-RT plugins into Core source code, allows importing them to 64-bit games that have issues with plugins. In case of using plugins that replace imports for the same functions as those two are using, plugins have priority except for nn::ro::LoadModule.\\n\\n0.6.1\\n\\nFix compability issues with Atmosphere 1.5.5 by adding 128kB to fake heap\\n\\n0.6.0\\n\\nReduce size of sysmodule executable by 2/3 and memory footprint of sysmodule by ~45%\\nAdd new flag for exceptions.txt - R.\\nR flag will abort loading SaltyNX to game if game has romfs mod installed. This is to prevent collisions in case of Atmosphere taking memory from game when game has big number of romfs files and could prevent game with injected SaltyNX from booting because of memory exhaustion. For now such a game doesn't exist, but Zelda Tears of The Kingdom is pretty close. This is futureproofing for possibility.\\n\\n0.5.2\\n\\nFix RTLD detection for getBID() in older games like LA Noire\\n\\n0.5.1\\n\\nAdd function SaltySD_GetBID() to use with plugins to retrieve buildID of running game\\nFix bug that was causing SharedMemory to not clean up upon detection of game that is 32-bit or in exceptions.txt (fixes bug in homebrew reading SharedMemory, f.e. Status Monitor Overlay, FPSLocker and ReverseNX-RT). Thanks to ~cucholix for finding this bug and testing fix.\\n\\n0.5.0\\n\\nAdd SharedMemory 4096B block to use with plugins.\\n\\nSaltyNX is reserving 4096 byte block to use with any app. Default purpose is to allow exchanging data in real time between homebrew and plugins without using dmnt:cht/svcDebug\\n\\n0.4.0a-hotfix\\n\\nFixed sm compability issues with Atmosphere 0.19.0+\\n\\n0.4.0a\\n\\nResolves issue with nonconsistent heap reserving.\\nFIFA 18-21 and Darksiders 2 are now working properly.\\n\\nEDIT: It doesn't work correctly with M.16.2 (0.16.2 EXPERIMENTAL). Works on standard 0.16.2\\n\\n0.3.2a\\n\\nFix loading plugins from titleid folders ef8ff67\\nIt should now fix bug introduced from 0.3.0a with crashing plugins in Smash Bros and other games while using title specific plugins\\n\\ninclude another exception - abort loading plugins if:\\ntitleid & 0x1F00 != 0\\n\\n0.3.1a\\n\\nFixed rare case of crashing game when trying to load hbloader in title replacement mode by disabling bootstrap in this case\\n2MB fix reverted, as this was crashing Zelda BoTW\\n\\n0.3.0\\n\\nAdd support for patches (more in readme)\\n** Thanks to this it's possible to omit crashes with code injection if it doesn't need heap to work.\\n\\n0.2.1a\\n\\nReduced RAM usage by 320kB.\\n\\n0.2.0a\\n\\nDitched Spawner\\nRewrited Proc to be independent and now it's booted directly from CFW as sysmodule\\n** Thanks to this I could lower memory usage by 60 kB\\nAdded option to disable log writing (writing is enabled by default)\\nAdded toolbox.json to bring correct support for sysmodules managers\\nBecause of ditching Spawner, KIP is not possible to use anymore. That's why we have now only one package using exefs.\\n\\nsaltysd_proc.elf from SaltySD folder is not used anymore, you can delete it.\\n\\nNSP-0.2\\n\\nUpdate solving compability issues with FW 10.0.0 for people using NSP.zip\\nIssue is not existing for KIP, so you don't need to update anything if you are using it (appstore is using NSP.zip)\\n\\n0.1.2a\\n\\nImplement hack to resolve issues with cheats in Atmosphere.", 
            "screens": 0, 
            "extracted": 636, 
            "version": "1.1.1", 
            "filesize": 252, 
            "details": "Background process for the Nintendo Switch for file/code modification\\n\\nCreated by: https://github.com/shinyquagsire23\\n\\nThis fork includes many QoL improvements\\n\\n\\nFor additional functions you need SaltyNX-Tool.\\n\\n", 
            "app_dls": 31176, 
            "md5": "3c349b2038bd019503a9071bae971767"
        }, 
        {
            "category": "game", 
            "binary": "/switch/wolf3d/Wolf4SDL.nro", 
            "updated": "03/11/2018", 
            "name": "Wolf4SDL-Switch", 
            "license": "none", 
            "title": "Wolf4SDL", 
            "url": "https://github.com/keeganatorr/Wolf4SDL-Switch/releases", 
            "description": "port of Wolfenstein 3D", 
            "author": "keeganatorr", 
            "changelog": "v1.0\\n\\nAdded joystick support, sound still has issues", 
            "screens": 0, 
            "extracted": 1387, 
            "version": "1.0", 
            "filesize": 527, 
            "details": "NOTICE: Requires a wolf3d folder from your Wolfenstein 3d install (Activision/GT version) copied to sd:/switch/wolf4sdl/ folder, and will crash without this.\\n\\n cross-platform port of Wolfenstein 3D with a number of changes and additions.\\n\\nControls\\n\\nKeys\t        Controls\\nD-Pad Up\tForward\\nD-Pad Down\tBack\\nD-Pad Left\tTurn Left\\nD-Pad Right\tTurn Right\\nMinus\t        Return to Menu/ESC\\nPlus\t        Pause\\nA / ZR\t        Fire/OK\\nB\t        Open\\nX\t        Strafe/Turn\\nY / ZL   \tRun\\nL\t        Previous Weapon\\nR\t        Next Weapon\\n\\nINSTALL\\n\\nwolf3d/audiohed.wl6\\nwolf3d/audiot.wl6\\nwolf3d/config.wl6\\nwolf3d/gamemaps.wl6\\nwolf3d/maphead.wl6\\nwolf3d/savegam0.wl6\\nwolf3d/vgadict.wl6\\nwolf3d/vgagraph.wl6\\nwolf3d/vgahead.wl6\\nwolf3d/vswap.wl6\\nTo /switch/wolf4sdl/ on SD Card", 
            "app_dls": 3099, 
            "md5": "3db880c17224f711c1c77106a00c07c3"
        }, 
        {
            "category": "advanced", 
            "binary": "/switch/sys-clk-manager.nro", 
            "updated": "02/11/2024", 
            "name": "sys-clk", 
            "license": "BEER WARE", 
            "title": "sys-clk", 
            "url": "https://github.com/retronx-team/sys-clk/", 
            "description": "Overclock and underclock your switch's clocks per-app", 
            "author": "RetroNX Team", 
            "changelog": "2.0.1\\n\\nFixes wake from sleep issue with HOS 19.0.0\\nQueries from the sensor via i2c for PCB and SOC temps\\n\\n2.0.0-rc\\n\\nsys-clk does not embed freq tables anymore, and will now get them from HOS at boot time\\nReal/instant frequencies, and battery power draw can now be printed in the overlay, manager, logs, and csv reports\\nNew GPU Max on handheld for Mariko: 614Mhz\\nSupport for HOS 17.0.0 has been added\\n\\n1.0.3\\n\\nThis minor update fixes the overlay not working on HOS >= 16.0.0 by upgrading libtesla and libnx to the latest version\\n\\nThanks to @alula for the PR\\n\\n1.0.2\\n\\nThis minor update mainly fixes a sysmodule crash that happens when trying to poll temperatures on HOS >= 14.0.0.\\n\\nBecause one of the method to get precise temperatures was removed, it also means that starting HOS 14 you will no longer have decimal precision on \"PCB\" and \"SOC\" temperatures.\\n\\n1.0.1\\n\\nMinor bugfix release to squash the issues that have been pending for a while, and allow sys-clk to be compiled on libnx 4.0.x\\n\\nFix skin temp not shown in the manager\\nFix Korean characters shown incorrectly in the manager\\nlibtesla upstream sync (libnx 4.0.x compat)\\n\\n1.0.0\\n\\nThis release marks the first 1.x version, and introduces 2 new ways to view and edit the config:\\n\\nHomebrew app: sys-clk manager, testing grounds of borealis, a new hardware accelerated, Nintendo Switch inspired UI library for PC and Nintendo Switch\\nTesla overlay: sys-clk-overlay, powered by libtesla\\nFeatures\\nEnable/disable sys-clk\\nDisplay the frequencies, thermals, and profile retrieved from the sysmodule\\nList and edit application profiles for either:\\nYour installed apps on the manager\\nThe currently running app directly in the overlay\\nEdit advanced settings such as timings and temporary frequencies overrides\\n\\n0.13.1\\n\\nThis hotfix update aims to address the shortage of time sessions that could trigger fatals from using Homebrew if too many sysmodules were running.\\n\\nChanges:\\n\\nDon't keep the time session open (only used at init)\\nMisc changes from the develop branch (libnx compat, etc) that does not affect features\\n\\n0.13.0\\n\\nTemperature monitoring (SoC; PCB and Skin at customizable interval)\\nLogging refactor:\\nLogs can now be enabled or disabled at runtime\\nPrettier logs (clock hz format, shorter text)\\nMilliseconds in timestamp\\nCSV export (timestamp, titleId, profile, clocks, temps at customizable interval)\\nFW 9.0.0 fixes\\nHB and crashed apps fixes\\nCheck the readme on how to setup the new config options.\\n\\n\\n\\n0.12.3\\n\\nThis is a minor update that changed polling timings to accommodate actively scaling titles (ex: BOTW, DOOM...)\\n\\n0.12.2\\n\\nThis release adds support for 8.0.0.\\n\\n0.12.1\\n\\nThis hotfix was made to correct the capping logic that was incorrectly applied to the CPU, consequently underclocking on defined profiles.\\n\\n0.12.0\\n\\nConfig loading has been refactored to permit more profile storage, and serve as the groundwork for what's to come\\nThe kip target (which had become irrelevant) and the code required to support it has been removed, consequently enabling pm late loading with no side-effect\\n\\n0.11.1\\n\\nfixes some games running slower than they should be\\n\\n0.11\\n\\nAdds timestamp and version to logs\\nGames and profile changes now always trigger a reset to stock values, even for games that would not change clocks on their own\\n\\n0.10\\n\\n-Added charging profiles\\n-General fixes", 
            "screens": 0, 
            "extracted": 8412, 
            "version": "2.0.1", 
            "filesize": 3351, 
            "details": "NOTE: This package currently requires editing files via an external app or PC to function\\n\\nSwitch sysmodule allowing you to set cpu/gpu/mem clocks according to the running application and docked state.\\n\\nPresets can be customized by adding them to the ini config file located at /config/sys-clk/config.ini, using the following template for each app:\\n\\n[Application Title ID]\\ndocked_cpu=\\ndocked_gpu=\\ndocked_mem=\\nhandheld_cpu=\\nhandheld_gpu=\\nhandheld_mem=\\n\\nReplace Application Title ID with the title id of the game/application you're interested in customizing. A list of games title id can be found in Switchbrew wiki.\\n\\nFrequencies are expressed in mhz, and will be scaled to the nearest possible values, described in the clock table below.\\n\\nIf any key is omitted, value is empty or set to 0, it will be ignored.", 
            "app_dls": 106036, 
            "md5": "020d319e3ac9b1daf5ee166ef229df7c"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "05/06/2020", 
            "name": "sys-clk-Overlay", 
            "license": "GPLv2", 
            "title": "sys-clk-Overlay", 
            "url": "https://github.com/Sun-Research-University/sys-clk-Overlay/releases", 
            "description": "Editor for your sys-clk configuration using ovl-loader", 
            "author": "Sun-Research-University", 
            "changelog": "1.1\\n\\nUpdated to the most recent libtesla\\nYou can now go to the previous value using X or dpad left and well as going to the next value with dpad right\\nBetter transitions between games\\nLots of bug fixes", 
            "screens": 0, 
            "extracted": 880, 
            "version": "1.1", 
            "filesize": 349, 
            "details": "Edit your sys-clk configuration using a Tesla Overlay.", 
            "app_dls": 27505, 
            "md5": "f3d2390b779724bc4dc96d1d63e69306"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/reset_parental_controls/reset_parental_controls.nro", 
            "updated": "25/01/2020", 
            "name": "Reset-Parental-Controls-NX", 
            "license": "GPLv3", 
            "title": "Reset-Parental-Controls-NX", 
            "url": "https://github.com/ITotalJustice/Reset-Parental-Controls-NX/releases", 
            "description": "Reset the pin for Parental Controls!", 
            "author": "ITotalJustice", 
            "changelog": "1.1.1\\n\\nA quick update that fixes crashing on fw 9.1.0 when trying to change the pin.\\n\\nThe crash (and the fix) is explained in the fix crash on fw 9.1.0 commit.", 
            "screens": 0, 
            "extracted": 277, 
            "version": "1.1.1", 
            "filesize": 118, 
            "details": "An easy way to change the pin for parental controls for the Nintendo Switch! (cfw required)\\n\\nFeatures:\\n- Pressing (A) will launch the applet for changing the pin for parental controls.\\n- This can be used as a way to remove parental controls for those that have forgotten their pin.\\n- If you don't have parental controls enabled, then pressing (A) will enable them once you enter a pin.\\n\\nHow to remove parental controls (after changing the pin in this app):\\n\\n1. Go to system settings.\\n\\n2. Parental Controls.\\n\\n3. Change Settings (it will ask for the pin that you set using my app).\\n\\n4. Once the pin is entered, press (X) to remove parental controls!", 
            "app_dls": 3776, 
            "md5": "b97a480317ec6838ac536f01ff352a41"
        }, 
        {
            "category": "game", 
            "binary": "/switch/supertux-switch/supertux-switch.nro", 
            "updated": "29/03/2022", 
            "name": "SuperTuxMilestone1", 
            "license": "GPLv2", 
            "title": "SuperTux Milestone 1", 
            "url": "https://github.com/headshot2017/supertux-switch", 
            "description": "Super Mario clone ported from PC", 
            "author": "Headshotnoby", 
            "changelog": "0.1.1b\\n\\nFixed issue with DPad movement where: moving with the left stick first, then pressing left/right on the DPad would move Tux on the opposite direction until you also press that direction.\\nChanged controls to be more comfortable: X and Y to run/fire, A and B to jump.\\n\\n0.1.1a\\n\\nDPad/Arrows can now be used to move Tux ingame\\nAdded \"Stretched\" video setting to toggle 4:3 aspect ratio stretching to 16:9 (disabled by default)", 
            "screens": 0, 
            "extracted": 23468, 
            "version": "0.1.1b", 
            "filesize": 11959, 
            "details": "SuperTux is a jump'n run like game, with strong inspiration from the Super Mario Bros games for Nintendo.\\n\\nRun and jump through multiple worlds, fighting off enemies by jumping on them or bumping them from below.\\nGrab power-ups and other stuff on the way.\\n\\n\\nStory:\\n- Penny gets captured! -\\n\\nTux and Penny were out having a nice picnic on the ice fields of Antarctica.\\nSuddenly, a creature jumped from behind an ice bush, there was a flash, and Tux fell asleep!\\n\\nWhen Tux wakes up, he finds that Penny is missing. Where she lay before now lies a letter. \"Tux, my arch enemy!\" says the letter. \"I have captured your beautiful Penny and have taken her to my fortress. The path to my fortress is littered with my minions. Give up on the thought of trying to reclaim her, you haven't a chance! -Nolok\"\\n\\nTux looks and see Nolok's fortress in the distance. Determined to save his beloved Penny, he begins his journey.", 
            "app_dls": 1546, 
            "md5": "9fbb0f65ff302393ebc6d44c40047c0d"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/moonlight-nx/moonlight.nro", 
            "updated": "18/04/2021", 
            "name": "moonlight-nx", 
            "license": "GPLv3", 
            "title": "moonlight-nx", 
            "url": "https://github.com/rock88/moonlight-nx/releases", 
            "description": "Moonlight port for Horizon OS", 
            "author": "rock88", 
            "changelog": "1.2.0\\n\\nUI fixes and improvements;\\nWake Up on Lan feature;\\nFind Host PC feature;\\nHID keyboard/mouse support.\\n\\n1.1.0\\n\\nFix \"Gray screen\" issue;\\nFix incorrect mouse movements;\\nWorking scroll in UI and on a streaming PC (just scroll with two fingers);\\nAdd combo for Guide button (default is Minus+Plus);\\nCustomizable button mapping and combo keys for each game;\\nAllow to close current game, also allow to run game when another game already running;\\nLots of UI fixes and improvements.\\n\\n1.0.9\\n\\nUI and gamepad input improvements;\\nResize screen support (for dock mode);\\nNew logger with write to file feature (enable in Settings, also you can view logs on a new Logs screen);\\nNew mouse input mode - click by tap (also moved cursor to tap position, enable in Settings).\\n\\n1.0.8\\n\\nPartial gamepad input in UI (Doesn't work with buttons on topbar and Settings, A - select, B - back);\\nFix issue with exit from Main screen by pressing PLUS button;\\nAdd Streaming Optimal Playable Settings (set desktop and game resolution same as a stream resolution);\\nAdd Play Audio on PC option (enable/disable audio on PC while streaming);\\nSetup GamePad on a stream start (some games don't recognise gamepad without this feature);\\nFix game quit on a exit from stream by press L+R+Down;\\nRemove ffmpeg decoder capabilities which can cause internal decoder corruption;\\nUI bugfix and improvements.\\n\\n1.0.7\\n\\nFix Audren audio renderer;\\nRemove Adout audio renderer and all audio settings;\\nVideo records allowed.\\n\\n1.0.6\\n\\nStart stream from main thread;\\nHandle few errors.", 
            "screens": 0, 
            "extracted": 18696, 
            "version": "1.2.0", 
            "filesize": 8658, 
            "details": "Moonlight-NX is a port of Moonlight Game Streaming Project for Nintendo Switch.\\n\\nLaunch hbmenu over Title Redirection (for FULL RAM access)\\n\\n\\nControls\\n\\nMove cursor with move finger on touch screen;\\nL/R + tap on screen - Left/Right mouse click (allow to move cursor);\\nZL/ZR + tap on screen - Left/Right mouse click (without move cursor);\\nL+R+Down - exit from stream (and close current app);\\nL+R+Up - exit from stream (without closing current app);\\nL+R+Left - Alt+Enter (for enable/disable fullscreen mode);\\nL+R+Right - ESC key;\\nZL+ZR+Left - show video decoder/render stats;\\nZL+ZR+Right - hide video decoder/render stats;", 
            "app_dls": 31764, 
            "md5": "70865d4e8a66c0f5266a2147002acdeb"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Super-Haxagon/SuperHaxagon.nro", 
            "updated": "21/02/2021", 
            "name": "Super-Haxagon", 
            "license": "MIT", 
            "title": "Super-Haxagon", 
            "url": "https://github.com/RedTopper/Super-Haxagon/releases", 
            "description": "A Super Hexagon Clone", 
            "author": "RedTopper", 
            "changelog": "3.4.0\\n\\nMost systems haven't significantly changed across platforms. All have been tested on hardware. This is primarily a release for the TI-Nspire but I'll upload new builds here to keep them up to date.\\n\\n3.3.0\\n\\nAdded a credits and a way to officially beat the game. You can watch the credits from the main menu (and be marked a cheater) or watch the credits by beating the HARDESTESTEST level of the game.", 
            "screens": 1, 
            "extracted": 27979, 
            "version": "3.4.0", 
            "filesize": 21179, 
            "details": "Super Haxagon is a cross platform, open source Super Hexagon clone for the Nintendo 3DS, Nintendo Switch, Windows, and Linux. It is developed in C++ and uses no additional libraries for the core logic, making it easy (in theory) to port to new platforms. It also has a GUI based level editor called Haxa Editor.\\n\\nFeatures\\n\\nCross Platform\\nWidescreen support\\nHigh Refresh Rate support\\nCustom Levels\\nOGG decoder for BGM\\nHigh Score Saving\\n", 
            "app_dls": 3759, 
            "md5": "aff0a0631236ccc3b38fdeaf02b6e5e5"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/EmuMmcConfig/EmuMmcConfig.nro", 
            "updated": "17/09/2019", 
            "name": "EmuMmcConfig", 
            "license": "GPLv3", 
            "title": "EmuMmcConfig", 
            "url": "https://github.com/KranKRival/EmuMmcConfig/releases", 
            "description": " Control Atmosphere's EmuMMC from the Horizon OS.", 
            "author": "KranKRival", 
            "changelog": "2.1.0\\n\\n1.Added Multi EmuMMC Support , Up to 2 RAW setups (will add 3rd later)\\n2.Few UI changes for the eye :)\\n3.Support for 9.0.0\\n4.minor unaddressed bug fixes\\n", 
            "screens": 0, 
            "extracted": 9668, 
            "version": "2.1.0", 
            "filesize": 3891, 
            "details": "This is a Homebrew app to Control Atmospher's EmuMMC from the Horizon OS.\\n\\ninstructions:\\n1.You must setup EmuMMC as \"Partition\" ^^ ,no files support in the tool for now\\n2.extract the contents of the release to root of the SD Card\\n3.Run the Application\\n4.Proffit ?!\\n\\nFeatures:\\n\\n1.Toogle EmuMMC On/OF\\n2.Switch Between Multi EmuMMC setups\\n3.Reboot to Payload atmosphere/reboot_payload.bin\\nmore soon !!!\\n\\n", 
            "app_dls": 2359, 
            "md5": "d3b930e931396e78f99c59db1b4b02e9"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/picodrive.nro", 
            "updated": "16/07/2018", 
            "name": "picodrive", 
            "license": "none listed", 
            "title": "Picodrive", 
            "url": "https://gbatemp.net/threads/retroarch-switch.492920/", 
            "description": "A SEGA Retroarch Core", 
            "author": "Retroarch", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2983, 
            "version": "1.1.0", 
            "filesize": 1077, 
            "details": "A very beta version of this core , games play from the SD card.\\nCurrent problems:\\nScreen settings\\nAnalog input.", 
            "app_dls": 11816, 
            "md5": "2b54e22281988a71e031430f81221aad"
        }, 
        {
            "category": "game", 
            "binary": "/switch/TIL-NX/TIL_NX.nro", 
            "updated": "30/12/2018", 
            "name": "TIL-NX", 
            "license": "GPLv3", 
            "title": "TIL NX", 
            "url": "https://github.com/Manurocker95/TIL_NX/releases", 
            "description": "TIL the game for Nintendo Switch", 
            "author": "Manurocker95", 
            "changelog": "v1.0\\n\\nFirst Release", 
            "screens": 0, 
            "extracted": 23556, 
            "version": "1.0", 
            "filesize": 16050, 
            "details": "TIL the game for nintendo switch\\n\\nThe Dev has very little info on the application.", 
            "app_dls": 311, 
            "md5": "82c195a337cb563cdc78dda6f6564828"
        }, 
        {
            "category": "game", 
            "binary": "/switch/CommanderGenius/CommanderGenius.nro", 
            "updated": "13/07/2020", 
            "name": "Commander-Keen", 
            "license": "GPLv2", 
            "title": "Commander Keen", 
            "url": "https://github.com/EliasOenal/Commander-Genius/releases", 
            "description": "Modern Interpreter for the Commander Keen Games", 
            "author": "EliasOenal", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 13918, 
            "version": "refs/pull/358/merge", 
            "filesize": 5562, 
            "details": "Over the last few weekends I have been porting the Commander Keen interpreter Commander Genius to the Nintendo Switch. I am quite happy with the current state of the port, which supports plenty of features. Most notably:\\n\\nMultiplayer co-op with up to four players\\nTouch screen support\\nIntegrated game downloader (Requires WiFi)\\nNative resolution (+ scaling options)\\n\\nAction\tButton\\nWalking directions (Left, Right, Up, Down) - Directional buttons (On left Joycon)\\nJump\tA\\nRun\tB\\nPogo\tX\\nShoot\tY\\nBack/Menu  Plus +\\nStatus\t   Minus \u2013\\nCamlead (Multiplayer)\tR\\nHelp\tL\\n\\nADDING THE GAMES\\nTo use the integrated downloader just select \u201c+ More\u201d after starting Commander Genius. Depending on the mirror the download sometimes takes up to ~30 seconds. If it still fails, just try again or download the games manually.\\n\\nIf the integrated downloader causes issues, or if one just wants to keep the Switch offline, the shareware titles can also be downloaded here and extracted to /switch/CommanderGenius/games/ on the SD card.\\n\\nNote: Besides the shareware episodes, Commander Genius also supports the commercial Commander Keen titles.\\n\\nSOURCE CODE\\nMy patches to the Switch port can be found on GitHub and were built using devkitPro. Big thanks to Gerhard Stein for Commander Genius and his support that made this port possible. We will also be working to upstream the changes so the Switch port can keep up with the latest development.", 
            "app_dls": 768, 
            "md5": "6c739e3877ca669a56b9e8fd219f4823"
        }, 
        {
            "category": "game", 
            "binary": "/switch/systemshock/systemshock.nro", 
            "updated": "23/12/2020", 
            "name": "SystemShock", 
            "license": "GPLv3", 
            "title": "Systemshock", 
            "url": "https://github.com/capsterx-switch/systemshock/releases", 
            "description": "Shockolate - Same great System Shock, new great taste", 
            "author": "capsterx-switch", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 9680, 
            "version": "0.8.2-r5", 
            "filesize": 4055, 
            "details": "Shockolate is a cross platform source port of System Shock, using SDL2. This runs well on OSX, Linux, and Windows right now, with some missing features that need reviving due to not being included in the source code that was released.\\n\\nThe end goal for this project is something like what Chocolate Doom is for Doom: an experience that closely mimics the original, but portable and with some quality of life improvements including an OpenGL renderer and mod support!\\n\\n", 
            "app_dls": 573, 
            "md5": "c196069b9848900dcf6f61611a16ecaa"
        }, 
        {
            "category": "tool", 
            "binary": "/hbmenu.nro", 
            "updated": "28/10/2023", 
            "name": "hbmenu", 
            "license": "n/a", 
            "title": "Homebrew Menu", 
            "url": "https://github.com/switchbrew/nx-hbmenu/", 
            "description": "Run and load other Homebrew apps", 
            "author": "yellows8, plutoo", 
            "changelog": "3.6.0\\n\\nUpdated temperature handling for [17.0.0+].\\nAdded ZL/ZR as additional tile skip buttons, same as DPad Down/Up. (#166)\\nFixed issue with Wi-Fi strength display.\\nBuilt with libnx stable v4.5.0.\\n\\n3.5.1\\n\\nFixed temperature display on [14.0.0+].\\nUpdated various (currently unused) language text.\\nBuilt with libnx stable v4.2.1.\\n\\n3.5.0\\n\\nAdded support for additionally using themes from a directory, or from a .zip.\\nFor .zip, it must directly contain the theme data, not a directory.\\nUpdated various (currently unused) language text.\\nBuilt with libnx stable v4.2.0.\\n\\n3.4.1\\n\\nBuilt with libnx stable v4.1.3\\nExtend French and Spanish translations.\\nPrevent crash when attempting to launch missing .nro.\\nSeveral issues were fixed, and usability and stability were improved.\\n\\n3.4.0\\n\\nBuilt with libnx stable v4.0.0.\\nHolding down directions now allows for quickly scrolling through the list.\\nGraphics performance improvements.\\nAdded momentum to touch drags (#124).\\nSeveral issues were fixed, and usability and stability were improved.\\n\\n3.3.0\\n\\nHID input is now accepted from all controllers including handheld when connected, instead of determining which controllers to use with hidGetHandheldMode().\\nFixed a crash in touch handling for star-button when the current directory is empty (no menu entries).\\nImplemented layouts which can optionally be loaded from theme config.\\nAdded support for using themes with extension '.romfs', which contains '/theme.cfg', optionally '/icon.jpg' for the menu-entry in Theme Menu, and any assets. Added 'assets' group to theme config, this is only used with .romfs themes.\\nAdded logoColor and highlightGradientEdgeColor to the theme config.\\nWhen entering Theme Menu, the initially selected menu-entry is now the currently configured theme.\\nUpdated the default highlightGradientEdgeColor.\\nFile-association entries without an icon are no longer ignored (such as when there's no embedded app-icon and no other icon is loaded).\\nAdded support for using file-associations with netloader, an error will now be thrown if the filename/file-extension used with netloader is not recognized.\\nErrors during netloader activation are now actually displayed.\\nNetloader now uses SO_REUSEADDR, this fixes netloader activation temporarily failing after a netloader error previously occurred.\\nAdded app_args config setting for file-associations.\\nBuilt with libnx stable v3.1.0. Hence, the local-time is now displayed correctly with certain timezones.\\nFurther improvements to overall system stability and other minor adjustments to enhance the user experience.\\n\\n3.2.0\\n\\nDisplay the system temperature.\\nHandle HID input for all connected controllers (handheld and 0-7).\\nFixed a bounds check for netloader cmd-line args.\\nBuilt with libnx stable v3.0.0.\\nFurther improvements to overall system stability and other minor adjustments to enhance the user experience.\\n\\n\\n3.1.1\\n\\nBuilt with libnx stable v2.5.0.\\n\\n3.1.0\\n\\nDisplay network status.\\nAdded support for loading {filename}.nacp similar to {filename}.jpg, when processing files for fileassoc.\\nAdded support for starring files/directories, these are displayed at the start of the menu listing.\\nDisplay \"Applet Mode\" indicator when running under an applet, in order to help users who are inadvertently running homebrew in applet mode and therefore experiencing otherwise hard to troubleshoot problems.\\nDisplay the hbloader version.\\nFixed slowdown due to drawing too many menu entries.\\nImproved netloader perf.\\nFixed a buffer overflow during netloader transfer due to not checking the chunksize (6c84575).\\nFixed netloader issue with large-chunksize, due to the chunksize field being partly uninitialized.\\nBuilt with libnx stable v2.4.0.\\nFurther improvements to overall system stability and other minor adjustments to enhance the user experience.\\n\\n\\nChangelog since v3.0.0:\\n\\nDisabled touch-controls horizontal swipe when it conflicts with the app-listing.\\nFixed root directory handling, which fixes root directory support on 1.0.0.\\nBuilt with libnx stable v1.6.0.\\nFurther improvements to overall system stability and other minor adjustments to enhance the user experience.\\n\\nChangelog since v2.0.0:\\n\\nFeatures\\n\\nAdded message boxes. The envGetLastLoadResult() output is now displayed during startup if needed (error returned by the application which ran last).\\nAdded nxlink support (netloader).\\nThe Switch IP address can automatically be determined via UDP broadcast.\\nNetloader is handled on a seperate thread with non-blocking sockets. UI drawing is not blocked during the transfer.\\nThe transfer can be aborted via 'Back' input.\\nIf the transfer stopped without finishing, the file is deleted.\\nWhen returning to the main-menu from netloader, the menu is reloaded since the netloader NRO may have been deleted due to the transfer stopping.\\nNetloader status is displayed in a message-box while netloader is active. This include transfer progress and a progress-bar.\\nFixed buffer overflow vuln with netloader args introduced with the original netloader commit (nothing useful which could cause a crash can be overwritten with an unmodifed nxlink). Fixed unrelated bounds check in launchAddArg() which broke once nxlink_host support was added.\\nUse system shared-font. Note that the system language is still not used.\\nAdded touch-controls.\\nAdded support for themes loaded from SD. If the system theme is not recognized, the used theme will default to the dark theme.\\nAdded Theme Menu for selecting the used theme, including the default theme.\\nEnabled time display, which uses local-time.\\nThe battery/charging status is now displayed.\\nAdded support for file-associations.\\nOther\\n\\nReplaced nanojpeg with libjpeg-turbo. See README regarding this.\\nThe switch/ directory is created if it doesn't exist. Config dirs on SD are now automatically created during startup if needed.\\nDisplay an error screen with print-console instead of using fatalSimple, for errors during startup. Display a message-box in launchFile() for app-launching when an error occurs instead of using fatalSimple.\\nUse applet exit-locking.\\nAssets are now loaded from a .zip in RomFS instead of embedding it in data/.\\nBuilt with libnx stable v1.5.0.\\nFurther improvements to overall system stability and other minor adjustments to enhance the user experience.", 
            "screens": 0, 
            "extracted": 1682, 
            "version": "3.6.0", 
            "filesize": 835, 
            "details": "Homebrew Launcher for Switch!\\nPlaces hbmenu.nro on the root of your SD card.\\nSee https://switchbrew.org/wiki/Homebrew_Menu for more usage instructions.\\nAfter the exploit, HBL is launched by visiting the Album from the home menu.", 
            "app_dls": 200538, 
            "md5": "cc6e2de2cc7e517bc4a6a1a0c1bbdd8e"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Switch-Play-Statistics-Viewer.nro", 
            "updated": "07/04/2023", 
            "name": "SPSV", 
            "license": "n/a", 
            "title": "SPSV", 
            "url": "https://github.com/m4st3rP/Switch-Play-Statistics-Viewer", 
            "description": "Displays playtime of all installed apps", 
            "author": "meesterP", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 306, 
            "version": "3", 
            "filesize": 132, 
            "details": "This is a Switch Application that shows a selected users play statistics, currently just the playtime, for all installed applications.\\nCompatible with HOS 16 (see GitHub for compatability with older versions).", 
            "app_dls": 1647, 
            "md5": "a99b4d9a6d618e0c37c2810fd0838016"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/MiiPort.nro", 
            "updated": "28/10/2021", 
            "name": "MiiPort", 
            "license": "n/a", 
            "title": "MiiPort", 
            "url": "https://github.com/Genwald/MiiPort", 
            "description": "A tool for importing and exporting Miis.", 
            "author": "Genwald", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 7916, 
            "version": "0.1.1", 
            "filesize": 3137, 
            "details": "Imports and exports Miis in multiple formats, including QR codes.\\nPlace Mii character files in \"sd:/MiiPort/Miis/\" with a file extension that corresponds to their format.\\nCurrently supported import formats include:\\n- jpeg images of Mii QR codes\\n-- requires the Mii QR key\\n- charinfo\\n-- can also use the .bin extension\\n- NFIF\\n-- can also use the .dat extension\\n- coredata\\n- storedata\\nNote: Only switch versions of these formats are supported. For importing from previous consoles, use a QR code.", 
            "app_dls": 1633, 
            "md5": "8f5cd3879ecb3a5e86e33070729236ba"
        }, 
        {
            "category": "game", 
            "binary": "/switch/eduke32/eduke32.nro", 
            "updated": "26/12/2019", 
            "name": "eduke32", 
            "license": "GPLv2", 
            "title": "eduke32", 
            "url": "https://github.com/fgsfdsfgs/eduke32/releases", 
            "description": "Duke Nukem 3D engine", 
            "author": "Cpasjuste fgsfdsfgs", 
            "changelog": "r8093_nx_2\\n\\nupdated source to svn r8093 (thanks, @parkerlreed);\\nrebuilt with libnx 2.5.0 or whatever is the latest one.\\n\\ncpasjuste changes :\\n\\nFixes launch crash from files being in wrong directory! Please feel free to use the \"Report Issue\" button above if there are any other problems.", 
            "screens": 0, 
            "extracted": 58612, 
            "version": "r8093_nx_2", 
            "filesize": 40542, 
            "details": "Here is a port of the excellent eduke32 engine to the switch.\\n\\nThis Download includes the Shareware version of the game.\\n\\nYou can however alter the game type by copying DUKE3D.GRP and DUKE.RTS to /switch/eduke32 folder\\n\\nFurther information on this can be found here : http://wiki.eduke32.com/wiki/Installation_and_configuration.", 
            "app_dls": 7671, 
            "md5": "73cd26feee5a82f5faed8bb10f70cb23"
        }, 
        {
            "category": "game", 
            "binary": "/switch/pixelwheels.nro", 
            "updated": "28/08/2022", 
            "name": "PixelWheels", 
            "license": "GPLv3", 
            "title": "Pixel Wheels", 
            "url": "https://github.com/TheLogicMaster/pixelwheels-switchgdx", 
            "description": "A top-down retro racing game", 
            "author": "TheLogicMaster", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 51216, 
            "version": "0.22.0", 
            "filesize": 31416, 
            "details": "Pixel Wheels is a top-down retro racing game made with LibGDX. It features multiple tracks and vehicles. And various bonus and weapons to help you get to the finish line first!\\n\\nRace for the first place on various tracks. Pick up bonuses to boost your position or slow down competitors!\\n\\nPorted by TheLogicMaster using SwitchGDX\\nGame Developer: Aur\u00e9lien G\u00e2teau", 
            "app_dls": 625, 
            "md5": "3833fba22cc6653f1403baf6533e69db"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Switchfin/Switchfin.nro", 
            "updated": "04/09/2024", 
            "name": "Switchfin", 
            "license": "Apache v2", 
            "title": "Switchfin", 
            "url": "https://github.com/dragonflylee/switchfin", 
            "description": "Nintendo Switch Jellyfin client", 
            "author": "dragonflylee", 
            "changelog": "0.5.2\\n\\ndisable update notify when user caneled\\ndecode danmaku failed\\nfilter missing when sync option off\\nauto selected external subtitles\\n\\n0.5.1\\n\\nAdd\\nupgrade ffmpeg 7.0.1\\nadd highlight for current play track\\nadd live tv support\\nadd webdav file browser\\nFixed\\nnetwork timeout for load video\\npanic after cancel login\\nabnormal focus when login after add server\\nserver list url display\\n\\n0.5.0\\n\\nAdded\\ndanmu plugin integration\\nvideo flip and subtitle sync support for player\\nvideo equalizer setting\\nadd episode selector on player view\\nadd new option Always on top for desktop platform\\nCzech localization\\nFixed\\nsupport MusicView and PlayList\\nforward nsp add startup logo\\n\\n0.4.5\\n\\nAdded\\nadd chapter point on progress bar\\ntouch gesture for volume/brightness\\nFixed\\ncollection display on new created user\\nScroll performance improvement @xfangfang\\n\\n0.4.1\\n\\nadd tap control for progress slider\\nadd volume control for video\\nadd play progress on more page\\nadd login disclaimer display\\nserver selection by joystick\\nfix home tab auto refresh\\n\\n0.3.2\\n\\nadd new option forceDirectPlay\\nsupport chapter select\\nsupport subtitle/audio track selection on transcode play\\nci: add mingw64 workflow\\nfix trancode codec type\\nfix crash on exit when playing media\\nswitch: sub fallback font", 
            "screens": 0, 
            "extracted": 26867, 
            "version": "0.5.2", 
            "filesize": 12749, 
            "details": "Switchfin is third-party PC player for Jellyfin that provides a native user interface to browse and play movies and series.\\nSupported media items: movies, series, seasons, episodes\\nDirect play and transcoding", 
            "app_dls": 6962, 
            "md5": "7e1295ab61abb21d35e3e3ca48dd7fc3"
        }, 
        {
            "category": "game", 
            "binary": "/switch/rocksndiamonds/rocksndiamonds.nro", 
            "updated": "12/06/2021", 
            "name": "rocksndiamonds", 
            "license": "GPLv2", 
            "title": "Rocks'n'Diamonds", 
            "url": "https://github.com/rsn8887/rocksndiamonds/", 
            "description": " a Boulderdash type game by Holger Schemel", 
            "author": "rsn8887", 
            "changelog": "1.15\\n\\n1.14\\n\\non Switch, add 9.0.0 support\\non Switch, fix .ogg audio playback\\non Switch, fix pointer getting stuck when controlled with physical USB mouse\\n\\n1.13\\n\\non Switch, fix automatically turning on/off VSync on selecting/deselecting Game Speed: 60 fps mode\\n\\n1.12\\n\\nfix crash when loading levelsets that change screenmode, such as \"Supaplex (Original)\"\\non Switch, fix slow-down when pressing home button\\non Switch, use 1080p resolution when docked\\n\\n1.11\\n\\nOn Switch, implement on-screen keyboard (only works when launching with nsp injection)\\n\\n1.10\\n\\nfixed problem on Switch with too-large screen in docked mode when loading saved config. The workaround was to change window size to 100% and save again. Now Fullscreen mode should be set to \"On\" and then this problem does not appear anymore.\\n\\n1.9switch\\n\\nsame as release 1.9, but added Switch executables to the downloads\\n1.9\\n\\nadd '60 fps' game speed setting for perfectly smooth motion in some levels on the Vita. It works well with the bundled Emerald Mine levelsets. This mode is 20% faster than the default setting 'normal.'\\n\\nremoved slow-down when playing levelsets that use the Emerald Mine engine with default graphics.", 
            "screens": 0, 
            "extracted": 13089, 
            "version": "1.15", 
            "filesize": 5747, 
            "details": "Rocks'n'Diamonds is a Boulderdash type game by Holger Schemel with many unique features, such as the ability to play remade levels from Boulderdash, Emerald Mine and Supaplex and many more levels.\\n\\nFor more information on how to play the game, or to load custom levels, view the source repo at github.com/rsn8887/rocksndiamonds/\\n\\nThanks:\\n- Thanks to my awesome supporters on Patreon, especially Andyways, CountDuckula, and Sean Ritzo.\\n- Thanks @FrangarCJ for help with optimizing the rendering.\\n- Thanks to Holger Schemel for making a great and portable game.\\n- Thanks to the many devs of VitaSDK for a great development environment.\\n\\n\\nVita/Switch-Exclusive Features:\\n\\n- game controller mapping including analog joystick mouse controls\\n- front touch controls with left/right mouse click and drag and drop gestures\\n- support for bluetooth keyboard and mouse\\n- the game runs smooth at the same speed as the desktop versions\\n- additional level package with thousands of levels as separate download (see 'More Levels')\\n- auto-hide mouse cursor when using the dpad\\n- easily switch player focus in multiplayer games using r+triangle and r+square\\n\\n\\nGamepad Controls (Switch):\\n\\nDpad or left stick = move player and navigate menus\\nright stick = move mouse pointer\\nB = primary button (+ direction for snap action or turning mirrors, also 'ok' in menu)\\nA = secondary button (drop dynamite)\\nY or L = left mouse button\\nX or R = right mouse button\\nMinus = quit (escape key, also cancels requesters)\\nPlus = pause (space key)\\nR+X = set focus to next player (ALL->1->2->3->4)\\nR+Y = set player focus to previous player (ALL<-1<-2<-3<-4)\\n\\n\\nTouch Controls:\\n\\nNote: for multi-touch gestures, the fingers have to be far enough apart from each other, so that the Vita will not erroneously recognize them as a single finger. Otherwise the pointer will jump around.\\n\\nSingle short tap = left mouse click\\nSingle short tap while holding a second finger down = right mouse click\\nSingle finger drag = move the mouse pointer\\nDual finger drag = drag'n'drop (left mouse button is held down)\\nThree finger drag = drag'n'drop (right mouse button is held down)", 
            "app_dls": 983, 
            "md5": "9d5270d36120a499cf6ca384b5a205f2"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/SwitchSlide/SwitchSlide.nro", 
            "updated": "24/11/2021", 
            "name": "SwitchSlide", 
            "license": "n/a", 
            "title": "SwitchSlide", 
            "url": "https://github.com/WompaStompa/SwitchSlide", 
            "description": "Like a slide rule, but for Switch.", 
            "author": "WompaStompa", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 5600, 
            "version": "0.1.1", 
            "filesize": 148, 
            "details": "Just a very basic edit of switchbrew's simplegfx example and touch-screen example.\\n\\nHow to use a slide rule. (https://www.sliderulemuseum.com/SR_Class/OS-ISRM_SlideRuleSeminar.pdf)\\n\\nIssues:\\nSlowly sliding your finger horizontally across the screen is kinda jittery and makes lining up your calculation a bit of a pain. To counter this, slide at a normal speed and a steep vertical angle. The vertical component of the slide will effectively just get ignored but the small horizontal component will always be accounted for.\\nThe scales won't line up perfectly when slid relative to one another because I only lined up the gradations with the nearest pixel. So for example, the 3.4 line would go at x position 1280*log\u2081\u2080(3.4) = 680.293, so I just put it at x coordinate 680. They should all be close enough to the true value that the power of estimation will give you accurate enough results.\\n\\nTake advantage of the power of iteration to get increasingly accurate results. For example, say you wanted to know 590\u00f7101.\\n\\n1. Estimate what the answer should be. 590 is about 600 and 101 is about 100, so 590\u00f7101 should be about 6.\\n2. Use the slide rule to get an answer of about 5.84.\\n3. 5.84\u00d7101 = 589.84. This means our error is (590-589.84)\u00f7101 = 0.16\u00f7101.\\n4. Use the slide rule to evaluate 0.16\u00f7101 to be about 0.001584.\\n5. Add the error correction to our first calculation to get 590\u00f7101 = 5.841584.\\n6. 5.841584\u00d7101 = 589.999984. If this still isn't accurate enough for what you're doing, iterate again. In this case though, you could just notice that the next iteration would be a power of 10 times a previous iteration, meaning you've already found the repeating decimal expansion.\\n\\nThe scales from top to bottom are:\\n\\n- Double Logarithmic (1 to 10 to 100)\\n- Folded Single Logarithmic with index at Pi (\u03c0 to 10, 10 = 1, 1 to \u03c0)\\n\\n- Blue line denoting boundary between slide and top stator\\n- Folded Single Logarithmic with index at Pi (\u03c0 to 10, 10 = 1, 1 to \u03c0)\\n- Red Inverse Single Logarithmic (10 to 1)\\n- Single Logarithmic (1 to 10)\\n\\n- Blue line denoting boundary between slide and botom stator\\n\\n- Single Logarithmic (1 to 10)\\n- Linear (0 to 1)\\n\\nFuck OpenGL and gpu compute, software render is all I need.\\n", 
            "app_dls": 309, 
            "md5": "e2402742c931926f4305b084e5263818"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/EmuNand-Swapper/emummc.nro", 
            "updated": "29/10/2019", 
            "name": "EmuNand-Swapper", 
            "license": "n/a", 
            "title": "EmuNand-Swapper", 
            "url": "https://github.com/Shmadul/EmuNand-Swapper/releases", 
            "description": "Swap Between 2 Raw Nand Partitions ", 
            "author": "Shmadul", 
            "changelog": "2.9\\n\\nUpdated for 9.x\\n\\nNow Displays Current Sector\\n\\nAdds the Ability to add titles to Configs by placing title= example in the config\\n\\nExample emummc.ini and emummc.disabled\\n\\n[emummc]\\nenabled=1\\nsector=0x1C7B9000\\npath=emuMMC/RAW1\\nnintendo_path=emuMMC/RAW1/Nintendo\\ntitle=Primary", 
            "screens": 0, 
            "extracted": 290, 
            "version": "2.9", 
            "filesize": 128, 
            "details": "Swap Between 2 Raw Nand Partitions (Via 2 emumnc configs)", 
            "app_dls": 547, 
            "md5": "69185e2860da2e1dd25470fd6157f7e7"
        }, 
        {
            "category": "game", 
            "binary": "/switch/rawgl/rawgl.nro", 
            "updated": "21/09/2018", 
            "name": "rawgl", 
            "license": ".", 
            "title": "rawgl", 
            "url": "https://github.com/usineur/rawgl/releases", 
            "description": "Another World game", 
            "author": "usineur", 
            "changelog": "2.0\\nMesa support\\n\\n1.1\\n\\nUpdate to latest modifications\\nAdd language detection\\n\\n1.2\\n\\nFix graphic glitches", 
            "screens": 0, 
            "extracted": 9928, 
            "version": "2.0", 
            "filesize": 4609, 
            "details": "rawgl is a re-implementation of the engine used in the game Another World.\\n\\n3DO version is also compatible. Replace datafiles of the DOS version if wanted.\\nAnniversaries editions are not supported in this release.\\n\\nSee Source page for more info and controls.", 
            "app_dls": 2972, 
            "md5": "2623b478d00adba01581ae2e0a048149"
        }, 
        {
            "category": "_misc", 
            "binary": "none", 
            "updated": "13/05/2024", 
            "name": "sysdvr-overlay", 
            "license": "GPLv2", 
            "title": "SysDVR Overlay", 
            "url": "https://github.com/Hartie95/sysdvr-overlay/releases", 
            "description": "Overlay to check and change the current mode of SysDVR.", 
            "author": "Hartie95", 
            "changelog": "1.0.11\\n\\nThis update just adds compatibility with the newest SysDVR version (6.1)\\n\\n1.0.10\\n\\nThis update just adds compatibility with the newest SysDVR version (6.0)\\n\\n1.0.9\\n\\nThis update just adds compatibility with the newest SysDVR version (5.5.5)\\n\\n1.0.8\\n\\nThis update adds compatibility with the newest SysDVR version (5.5).\\nIt also updates libtesla and libnx, so should also contain a fix for a crash that sometimes happens in docked mode.\\n\\n1.0.7\\n\\nThis updates libtelsa for compability with 16.0.0\\n\\n1.0.6\\n\\nThis update just adds compability with the newest SysDVR version (5.4)\\n\\n1.0.5\\n\\nThis update just adds compability with the newest SysDVR version (5.3.1) and updates libtesla to the latest version\\n\\n1.0.4\\n\\nThis update just adds compability with the newest SysDVR version (5.3.0) and updates libtesla to the latest version\\n\\n1.0.3\\n\\nThis update just adds compability with the newest SysDVR version (5.2.0)\\n\\n1.0.2\\n\\n- Fixed a bug causing a full tesla hang when sysdvr is not running\\n- updated to the newest libtesla\\n\\n1.0.1\\n\\nThis update just adds compability with the newest SysDVR version (5.1.0)", 
            "screens": 0, 
            "extracted": 349, 
            "version": "1.0.11", 
            "filesize": 142, 
            "details": "This is a simple Tesla overlay to check and change the current mode of SysDVR.\\n\\nSetup\\n\\nSetup the tesla menu and nx-ovlloader\\nSetup SysDVR\\n", 
            "app_dls": 25692, 
            "md5": "7831ff7edb70c78e0c13ca775e070394"
        }, 
        {
            "category": "game", 
            "binary": "/switch/nxquake/nxquake.nro", 
            "updated": "17/09/2018", 
            "name": "nxquake", 
            "license": "GPLv2", 
            "title": "nxquake", 
            "url": "https://github.com/fgsfdsfgs/nxquake/releases", 
            "description": "TyrQuake port", 
            "author": "fgsfdsfgs", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 27529, 
            "version": "0.2.0", 
            "filesize": 11895, 
            "details": "Switch port of TyrQuake (only the NetQuake part).\\n\\n If you have the full version, copy both pak0.pak and pak1.pak to /switch/nxquake/id1/.\\nIf you want to play Scourge of Armagon, copy pak0.pak from hipnotic to /switch/nxquake/hipnotic/. If you want to play Dissolution of Eternity, copy pak0.pak from rogue to /switch/nxquake/rogue/.\\nMake sure the pak files and the id1 directory have all-lowercase names, just in case.\\nYou can run NXQuake using Homebrew Launcher.\\nIf it crashes, look for console.log and error.log in /switch/nxquake/.\\nMission Packs and mods are supported. If you have more game folders than just id1 in /switch/nxquake/, a mod select menu will pop up when you launch NXQuake.\\n\\nTHIS DOWNLOAD INCLUDES THE SHAREWARE VERSION OF THE GAME.", 
            "app_dls": 3018, 
            "md5": "6bae3d2cd112bedc1c227635bbd29578"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "20/10/2018", 
            "name": "ebooks", 
            "license": "Gutenberg/Copyleft", 
            "title": "Ebooks Collection", 
            "url": "https://www.gutenberg.org", 
            "description": "62 Popular and public domain ebooks", 
            "author": "Various Authors", 
            "changelog": "Initial packaging", 
            "screens": 0, 
            "extracted": 71150, 
            "version": "1.0", 
            "filesize": 69880, 
            "details": "This package contains 62 ebooks from various popular authors that are either in the public domain or available under a copyleft license. A majority of the books are available under The Project Gutenberg License, which reads:\\n\\n\"This eBook is for the use of anyone anywhere at no cost and with almost no restrictions whatsoever. You may copy it, give it away or\\nre-use it under the terms of the Project Gutenberg License included with this eBook or online at www.gutenberg.org\".\\n\\nAlso included are books written by Cory Doctorow which are available under Creative Commons licenses. In particular, you should check out \"Little Brother\", written in 2008 it's still more relevant than ever today. For more information on a specific books license, see the first few pages of the epub.\\n\\nCurrently there is one app that is capable of displaying ebooks, and that's \"NX-Shell by Joel16\".\\n\\nList of Included Books (installed to sd:/ebooks):\\n\\nAlexander Hamilton John Jay and James Madison - The Federalist Papers\\nArthur Conan Doyle - A Study in Scarlet\\nArthur Conan Doyle - The Adventures of Sherlock Holmes\\nArthur Conan Doyle - The Hound of the Baskervilles\\nBram Stoker - Dracula\\nCharles Darwin - On the Origin of Species\\nCharles Dickens - A Christmas Carol\\nCharles Dickens - A Tale of Two Cities\\nCharles Dickens - Great Expectations\\nCharles Dickens - Hard Times\\nCharlotte Bronte - Jane Eyre\\nComplete Works of William Shakespeare\\nCory Doctorow - Content\\nCory Doctorow - For the Win\\nCory Doctorow - Homeland\\nCory Doctorow - Little Brother\\nCory Doctorow - Overclocked\\nCory Doctorow - Pirate Cinema\\nDante Alighieri - The Divine Domedy\\nDare Carnegie and J Berg Esenwein - The Art of Public Speaking\\nDr Jekyll and Mr Hyde\\nElsie Benedict and Ralph Benedict - How to Analyze People on Sight\\nEmily Bronte - Wuthering Heights\\nFranz Kafka - Metamorphosis\\nFrederick Douglass - Life of Frederick Douglass, an American Slave\\nFriedrich Nietzsche - Beyond Good and Evil\\nHenry David Thoreau - Walden\\nHerman Melville - Moby Dick\\nHG Wells - The Time Machine\\nHG Wells - The War of the Worlds\\nHomer - The Odyssey\\nHomer - The Illiad\\nHP Lovecraft - The Call of Cthulhu\\nJames M Barrie - Peter Pan\\nJane Austen - Emma\\nJane Austen - Persuasion\\nJane Austen - Pride and Prejudice\\nJonathan Swift - A Modest Proposal\\nJonathan Swift - Gulliver's Travels\\nJoseph Conrad - Heart of Darkness\\nKing James Bible\\nL Frank Baum - The Wonderful Wizard of Oz\\nLeo Tolstoy - War and Peace\\nLesslie Hall - Beowulf\\nLewis Carroll - Alices Adventures in Wonderland\\nLouisa May Alcott - Little Women\\nMark Twain - Huckleberry Finn\\nMark Twain - The Adventures of Tom Sawyer\\nMary Shelley - Frankenstein\\nMiguel de Cervantes - Don Quixote\\nNathaniel Hawthorne - The Scarlet Letter\\nRobert Louis Stevenson - Treasure Island\\nRudyard Kipling - The Jungle Book\\nSilvanus Thompso - Calculus Made Easy PDF\\nSt Augustine - Confessions\\nSun Tzu - The Art of War\\nThe Interesting Narrative of the Life of Olaudah Equiano The African\\nThe Kama Sutra\\nThomas Paine - Common Sense\\nVictor Hugo - Les Miserables\\nWorks of Edgar Allan Poe Vol I\\nWorks of Edgar Allan Poe Vol II", 
            "app_dls": 12929, 
            "md5": "d30a9660a1c4ae5f6e6a4b324594ac98"
        }, 
        {
            "category": "_misc", 
            "binary": "/switch/Kirikiri/krkrs_demo.nro", 
            "updated": "13/04/2020", 
            "name": "Kirikiri", 
            "license": "BSD v3", 
            "title": "Kirikiri - Demo", 
            "url": "https://github.com/uyjulian/krkrs/releases", 
            "description": "Kirikiri for Nintendo Switch", 
            "author": "uyjulian", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 36343, 
            "version": "1.1.0", 
            "filesize": 18033, 
            "details": "This download is a demo build of Kirikiri game development , provided to demonstate the functionality of the project.\\n\\nIf you follow the source link you will find the sdk package for developers to build their own projects.", 
            "app_dls": 240, 
            "md5": "0e4819bd97531999e75803124d91f13a"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/LoveStory_Demo/LoveStory_Demo.nro", 
            "updated": "15/02/2019", 
            "name": "LoveStory_Demo", 
            "license": "MIT", 
            "title": "Love Story (demo)", 
            "url": "https://gbatemp.net/threads/lovestory-a-visualnovel-library-for-lovepotion.509152/", 
            "description": "A VisualNovel Library for LovePotion", 
            "author": "Shrike", 
            "changelog": "1.2\\n\\nError messages warn you if pictures you want to load can not be found\\nYou can now add multiple Description_Texts with the new DescriptionTextImageIndex parameter\\nIf == -1 its the OLDWAY (Legacy: Your old code will still work.)\\nSecond Character Image is now Mirrored on the y axis.\\nA soundmanager is added, that will keep track of aktivated/deaktivated sound and music before playing\\nSmall Bugfix (Removed Debugsound \"WUFF\")\\nCharacterDescriptionScreen has now a \"Landscape\" TV-MODE (Activate/Deactivate: In lovestory.lua set variable tvMode = true/false)\\nNew Function: Character:clearCache()\\n-> Deletes all loaded Sounds/Images and forces the game to reload them when needed\\n-> This frees RAM (depending on your amount of loaded pictures/sounds)", 
            "screens": 0, 
            "extracted": 66942, 
            "version": "1.2a", 
            "filesize": 56426, 
            "details": "LoveStory is a VisualNovel library for LovePotion on the Nintendo Switch.\\n\\nLoveStory\u2019s purpose is to simplify the creation of VisualNovels as well as the integration of a simple to use DialogueSystem for story driven games for Nintendo Switch.\\nTo write your own VisualNovels I reccomend to download the demo-game and edit novel.lua to your needs.\\nYou can find a full documentation of how to use LoveStory in the LoveStory_Documentation.pdf attached to this download.\\n\\nFeatures of LoveStory:\\n\\nEasy to use dialogue implementation for the creation of VisualNovels or other story-driven games\\nNo fancy programming skills needed to create VisualNovels with the help of this library \\nChangeable character pictures for emotions and clothing-sets\\nDecision making for complex story-lines and multiple endings\\nTwo characters can be shown the same time\\nComplete touch-support for easy game control\\nDialogue boxes can be hidden with touch-swipe or joycon-input\\nSound and music support: You are able to create full dubbed versions of your in-game conversations\\nEasy managing of multiple characters thanks to character-classes\\nSpecial character-screen when holding the switch in portrait-mode, with a big picture and more character information shown (Currently not working: Use R-Button)\\nYou are able to show a background image with or without your characters in front and easily change it anytime\\nSkip all the current dialogue with only holding down the LZ-key (shoulder-button)\\nFuture Updates: If the community has wishes for future improvements or features I will try to implement them in one of the next versions", 
            "app_dls": 1114, 
            "md5": "1fdde1ddd0ba8893fc8e98af66811ae4"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/nxsh/nxsh.nro", 
            "updated": "03/02/2019", 
            "name": "nxsh", 
            "license": "BSD v3", 
            "title": "nxsh", 
            "url": "https://github.com/Cesura/nxsh/releases", 
            "description": "BusyBox-like remote shell for the Nintendo Switch over telnet", 
            "author": "Cesura", 
            "changelog": "v0.1.8-beta\\n\\nImplemented NAND browsing (see mount command). Big thanks to @friedkeenan for the contribution.\\n\\nv0.1.7-beta\\n\\nAdded JS scripting functionality via duktape. You can now write scripts and execute them, provided they are ECMAScript 5.1 compliant. See the examples/ directory for a bit more information.\\nAdded native print(), readFile(), and writeFile() functions ", 
            "screens": 0, 
            "extracted": 1112, 
            "version": "0.1.8-beta", 
            "filesize": 482, 
            "details": "About\\nI started this project as a convenient way to interact with the Switch over the network. Simply run the provided .nro file included and connect to your device via port 5050 to access a Unix-esque shell. A full list of currently-supported commands can be provided by typing 'help' at the prompt.\\n\\nFor more information, or to report a bug, check out the project on GitHub:\\nhttps://github.com/Cesura/nxsh\\n\\nConnecting \\nLinux/BSD/Mac OS\\nFirst ensure that you have the 'telnet' client installed on your local machine (it may or may not be bundled with your base distribution). For Mac users, I recommend installing the client via the Homebrew package manager. Then, connect in via:\\n\\n$ telnet [IP address] 5050\\n\\nWindows\\nThe built-in Windows telnet client does not play nicely with nxsh, so I recommend installing PuTTY. Note that connecting via a \"raw\" connection instead of a 'telnet' one will avoid a pesky 'command not found' message upon initialization of the shell. The telnet protocol sends some garbage text as it's negotiating the connection, so if you want a clean-looking shell, ditch that and go for a raw socket.", 
            "app_dls": 2275, 
            "md5": "4bad3156ef23d53218627edd0bc83464"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/switchident-GUI/SwitchIdent.nro", 
            "updated": "25/06/2023", 
            "name": "switchident-GUI", 
            "license": "GPLv3", 
            "title": "SwitchIdent", 
            "url": "https://github.com/joel16/SwitchIdent/releases", 
            "description": "Console information", 
            "author": "Joel16", 
            "changelog": "0.5\\n\\nUse 1080p resolution instead of 720p.\\nFix displaying battery percentage symbol '%'.\\nMerge battery and charger info back into one page. (We have more room now that we switched to 1080p res).\\nProperly display battery temperature (Internal - PCB, External - SoC temperatures can be found in the System Info page).\\nDisplay headphone port status in System Info page.\\nDisplay joy-con firmware of two P1 connected joy-cons. (Needs to be removed from the rail and used wirelessly).\\n\\n0.4\\n\\nAdd joycon menu for displaying joycon info.\\nDisplay left and right joycon battery.\\nDo not initialize wlan::inf if hosVersion >= 15.0.0 (since this service was removed).\\nSeparate battery and (new) charger menu.\\nDisplay battery age (in percentage and pcm).\\nDisplay battery internal and external temperature.\\nDisplay battery charger input and output current limit.\\nDisplay battery charging current limit.\\nDisplay battery charging voltage limit.\\nDisplay battery capacity (pcm) and age (pcm).\\nDisplay battery voltage avg.\\nDisplay battery charger type.\\nDisplay battery charger current limit.\\nDisplay battery charger voltage limit.\\n\\n0.3\\n\\nConsole version is no longer supported and the GUI has been somewhat rewritten and slightly redesigned (uses a dark UI rather than the old white).\\nProperly display CPU & GPU clocks and also EMC clock using PCV.\\nDisplay SD and game-card slot status.\\nProperly display voltage state.\\nApplied PSM changes to fix builds with latest libnx changes. (d3m3vilurr)\\nAdded missing DRAM descriptors and fix compatibility with libnx v4.2.0+ (shchmue)\\nDisplay missing regions (Randname666)\\nFixed EMC speed display (ZachyCatGames)\\nDisplay WiFi/bluetooth MAC address.\\nDisplay battery lot number.\\n\\n0.2\\n\\nBuilt using the latest version of DKA64 toolchain and libnx.\\nProperly display system region.\\nDisplays battery percentage and charging status.\\nDisplays battery charger type.\\nDisplays if battery charging is enabled.\\nDisplays if ample power is supplied.\\nDisplays Wireless RSSI signals and quality in percentage.\\n\\nNow uses SDL2 with GPU hardware acceleration.\\nNow uses shared font.\\nMinor UI changes. (Displays versions and icons for each field)\\n", 
            "screens": 0, 
            "extracted": 8826, 
            "version": "0.5", 
            "filesize": 3607, 
            "details": "Notice: The console interface version of SwitchIdent is no longer supported and is now considered legacy on the Homebrew Appstore. For future updates, please use this version!\\n\\nThis is yet another identity tool that is continuing the series of <device name here>ident. The tool allows users to get various bits of information from your device, hence the name 'ident' as in identifying your device.\\n\\nPlease see the Source link for further information and usage.", 
            "app_dls": 13274, 
            "md5": "5021247a7d2bb629095a087407938de7"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/nXDownload/nXDownload.nro", 
            "updated": "18/04/2019", 
            "name": "nXDownload", 
            "license": "n/a", 
            "title": "nXDownload", 
            "url": "https://github.com/Dontwait00/nXDownload/releases", 
            "description": "Download any file directly inside sdmc", 
            "author": "Dontwait00", 
            "changelog": "v1.1b\\n\\n[ADDED] https support\\n[FIX] lots of general system stability improvements to enhance the user's experience.\\n\\nv1.0b\\n\\n[ADDED] You can download files from private servers!\\n\\nfrom the main menu, choose Download tmp URL (with user & password); It will spawn the keyboard to insert Username (required), then, insert Password (if neccessary) (optional); After that, insert link i.e. ftp://server.c/hm.nsp\\n[ADDED] Now you can view how many Megabytes you reached!\\n\\n[FIX] old method caused to overwrite printf commands\\n[FIX] the entire source code now has been remapped!!\\n\\n[ADDED] Now nXDownload can create folders if not existed.\\n[ADDED] Debug added to source code! (uses nxlink)\\n[FIX] Fixed behaviors in general.\\n[FIX] New icon.jpg (just cleaned up)\\n[FIX] Now if file tmpfile.txt exist's, prints out the old link used, before choosing to overwrite.\\n[FIX] lots of general system stability improvements to enhance the user's experience.\\n\\nv0.9b\\n\\n[ADDED] Error codes are colored red, and warnings are colored yellow, and success colored as green!\\n\\n[ADDED] Now the function Write temporaly URL uses the software keyboard!\\n\\n[ADDED] Dangerous! Experimental software keyboard under Gallery applet by changing heap size.\\ndiscovered by XorTroll & jakibaki\\n\\n[FIX] Fixed (almost) everything on how the source behavies\\n\\n[FIX] Added few more comments inside source code!\\n\\nv0.8b\\n\\n[ADDED] Now files are named to original filename!\\n(Meaning that, most of the download links contains the filename of the file we are downloading right at the bottom path. This means that, as you are trying to download a file, make sure the link contains the filename! i.e. http://download.mediafire.com/../fcnw48f3/`example-v0-000100000000.nsp`)\\n\\n[ADDED] Now files bigger then 100mb can be downloaded!\\n\\n[ADDED] Now the homebrew has got a (horrible made) icon! Yay!\\n\\n[FIX] Now the source code is having problems do to libnx v1.5.0, so please, dont complain if its freezing for seconds/hours. Just give it the time to do his job untill is fixed from libnx or my source code. Im already annoied about it.\\n\\nv0.7b\\n\\n[ADDED] Write plain URL directly from the Switch! No need to turn off the console to inject 'input.txt'\\n[FIX] Minor fixes + changes inside source code\\n\\nv0.6b\\n\\nMinor bugs fix", 
            "screens": 0, 
            "extracted": 2009, 
            "version": "1.1b", 
            "filesize": 839, 
            "details": "Download any file directly inside sdmc:/ on the Nintendo Switch\\n\\nThis tool is pretty basic:\\n1 - Create a file .txt\\n2 - Add few lines with links\\n3 - Power on you're Switch, and start download you're file!\\nNOTE:\\nThis project uses my custom implementation of libcurl. You can use my own 'customCurl.h' header, without problems! Be sure at least to credit!\\n\\nuse command line \"pacman -S switch-curl\" inside Msys to be able to compile this program.\\nFeatures & ideas\\nAs this tool is pretty new, and lot of my freetime goes to debugging, probably will take much time before finishing it.\\nadd possibility to read a custom URL from sdmc:/switch/nXDownload/url.txt = Done!\\nadd pssibility to read multiple URL from 'url.txt'\\nadd support for plain URL's (meaning writing URL directly to the Switch!)\\nadd support for saving plain URL's (meaning written URL will be saved in a different file)\\nadd support for SDL2 projects!\\nfix major bugs!\\nAny idea you want i should add? Create a pull request: https://github.com/Dontwait00/nXDownload/pulls", 
            "app_dls": 22433, 
            "md5": "b097c57b09ecfbb5e781675872f871d0"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/ebookViewerNX/EbookViewerNX.nro", 
            "updated": "15/07/2021", 
            "name": "ebookViewerNX", 
            "license": "n/a", 
            "title": "ebookViewerNX", 
            "url": "https://github.com/SegFault42/ebookViewerNX/releases", 
            "description": "Ebook reader", 
            "author": "SegFault42", 
            "changelog": "0.2.0\\n\\nShow page number in reading mode\\nHorizontal progress bar in home menu\\n.cbz support\\n.cbr support", 
            "screens": 0, 
            "extracted": 45895, 
            "version": "0.2.0", 
            "filesize": 31094, 
            "details": "Ebook reader for nintendo switch using mupdf library\\n\\nUsage :\\n\\n\\nMove all ebooks in /switch/ebookViewerNX folder\\n\\nWarning : ebook title must not have '='\\nEnjoy !\\n\\n\\nControl :\\n\\n- Home menu :\\n- Launch ebook : A\\n- Next book : Right ( with Right joystick )\\n- Previous book : Left ( with Right joystick )\\n- Quit : Start button\\n- Help : X button\\n\t\\n- Reading :\\n\\n- Hide/Show bar : A\\n- Portrait/Landscape : ZR\\n- Next page : Right ( with Right joystick )\\n- Previous page : Left ( with Right joystick )\\n- Next 10 pages : Up ( with Right joystick )\\n- Previous 10 pages : Down ( with Right joystick )\\n- Quit : Start button\\n- Help : X button", 
            "app_dls": 2700, 
            "md5": "74afbe3bd737a12e6966f8597837238a"
        }, 
        {
            "category": "game", 
            "binary": "/switch/switch_sdl_pong/switch_sdl_pong.nro", 
            "updated": "20/07/2018", 
            "name": "sdl_pong", 
            "license": ".", 
            "title": "Sdl Pong", 
            "url": "https://github.com/I-EAT-CHEEZE-YO/switch_sdl_pong/releases", 
            "description": "Sdl Pong", 
            "author": "Cheeze", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 4790, 
            "version": "1.0", 
            "filesize": 2524, 
            "details": "This is my pretty basic attempt at implementing pong for the nintendo switch using c++ and sdl2. Im no expert at writing programs or nothing. It still needs a lot of work, anywho enjoy!", 
            "app_dls": 1168, 
            "md5": "9457158588b32f5596b194ccd24e4d3a"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/MAME-NX/mame.nro", 
            "updated": "18/04/2020", 
            "name": "MAME-NX", 
            "license": "none", 
            "title": "MAME-NX", 
            "url": "https://github.com/lantus/mame-nx/releases", 
            "description": "MAME 0.72 for the Nintendo Switch", 
            "author": "lantus", 
            "changelog": "v2.3\\n\\nUpdated to latest libnx.\\nJoystick is now enabled by default\\n\\nv2.2\\n\\nRemoved SDL2\\nVIDEO_DIRECT_RGB fixed (fixes many games)\\nFixes For The Power Instinct Games (arcadez)\\nUpdate Namco System 1 video to MAME 0.72.1b (arcadez)\\nSega 16 fixes (arcadez)\\n\\nv2.1\\n\\nROT90 fix", 
            "screens": 0, 
            "extracted": 38549, 
            "version": "2.3", 
            "filesize": 11214, 
            "details": "MAME 0.72 for the Nintendo Switch", 
            "app_dls": 21031, 
            "md5": "4bb5e9c38e74b06f2451b030be37cee0"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/totk-unexplored/totk-unexplored.nro", 
            "updated": "21/03/2024", 
            "name": "TotKUnexplored", 
            "license": "n/a", 
            "title": "TotK Unexplored", 
            "url": "https://github.com/lud99/totk-unexplored", 
            "description": "View all unfound collectibles in TotK", 
            "author": "lud99", 
            "changelog": "1.0.2\\n\\nAdded high resolution map images when using the app with title override (4500x4500 instead of 1500x1500)\\nRemoved 3 locations that are not required to be visited for 100% completion\\n\\n1.0.1\\n\\nFixed caves with multiple entrances not being marked correctly as found\\nFixed text overlap\\nDisabled Qr Codes-feature when running the app with title override. See issue #2 for more info", 
            "screens": 0, 
            "extracted": 58409, 
            "version": "1.0.2", 
            "filesize": 52572, 
            "details": "Easily view what hasn't been discovered in your Tears of the Kingdom savefile on your Nintendo Switch.\\n\\nMain Features\\n18 types of collectibles can be tracked\\nKoroks\\nShrines\\nLightroots\\nCaves\\nBubbuls\\nWells\\nChasms\\nLocations\\nHinoxes\\nTaluses\\nMoldugas\\nFlux Constructs\\nFroxes\\nGleeoks\\nSage's Wills\\nOld Maps\\nAddison Signs\\nSchema Stones\\nYiga Schematics\\n\\nLegend to easily toggle what collectibles to see and also to switch between showing missing, showing completed or showing all collectibles.\\nObject info about collectibles. Name, position, and other info.\\nScan a Qr Code with your phone to see an image of the map to look at while playing\\n\"Korok paths\" are drawn so it is easy to find koroks that involve flower trails, races and transporting a lonely korok back to its friend.\\nQuickly swap between the Depths, Surface and Sky layers", 
            "app_dls": 12460, 
            "md5": "df64107c96d4cd7adaebe258bdf22719"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/snes9x2010nx/snes9x2010nx.nro", 
            "updated": "16/07/2018", 
            "name": "snes9x_2010_nx", 
            "license": "none listed", 
            "title": "SNES9x_2010_NX", 
            "url": "https://gbatemp.net/threads/retroarch-switch.492920/", 
            "description": "A SNES Retroarch Core", 
            "author": "Retroarch", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 3061, 
            "version": "beta", 
            "filesize": 1214, 
            "details": "A very beta version of this core compiled with LibNX, games play from the SD card.\\n\\nScreen settings\\nGame Saves\\nButton Config\\nAnalog input.", 
            "app_dls": 23419, 
            "md5": "fe1f5149842d9aa36aa09b5784effd08"
        }, 
        {
            "category": "concept", 
            "binary": "/switch/FizzBuzz_NX.nro", 
            "updated": "21/07/2018", 
            "name": "FizzBuzz_NX", 
            "license": "n/a", 
            "title": "FizzBuzz_NX", 
            "url": "https://gbatemp.net/threads/opentyrian-port-for-switch.504650/", 
            "description": "Simple C++ Demo", 
            "author": "Foxofgrey", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 691, 
            "version": "1.0", 
            "filesize": 259, 
            "details": "A program to show off the potential of using c++ within DevKitA64, and to show off a terminal program within the Switch as well.", 
            "app_dls": 520, 
            "md5": "f8233af63d535d1771cfbb500dd7e756"
        }, 
        {
            "category": "game", 
            "binary": "/switch/SlitherlinkNX/SlitherlinkNX.nro", 
            "updated": "13/10/2019", 
            "name": "SlitherlinkNX", 
            "license": "none", 
            "title": "SlitherlinkNX", 
            "url": "https://github.com/Tardigrade-nx/SlitherlinkNX/releases", 
            "description": "A homebrew logic puzzle game", 
            "author": "Tardigrade-nx", 
            "changelog": "1.1\\n\\nRecompiled with latest libnx to fix the buttons\\nUndo = R/ZR, loop back = L/ZL\\n\\n1.0 Initial Release", 
            "screens": 0, 
            "extracted": 11579, 
            "version": "1.1", 
            "filesize": 5813, 
            "details": "Introduction\\nSlitherlink is a logic puzzle game created in 1989 by Japanese publisher Nikoli, famous for creating Sudoku, among many other puzzle games. See https://en.wikipedia.org/wiki/Slitherlink for more info.\\n\\nI discovered the game a few years ago on the Nintendo DS with 'Puzzle Series Vol. 5: Slitherlink', which was never released outside of Japan. It's such a good game I became addicted to it, just like with Picross and Nurikabe.\\n\\nThis is my version of the game for the Nintendo Switch. It's a rewrite of one of my previous projects for the Dingoo A320. It features 456 levels in four sizes: 5x5 (easy), 7x7, 10x10, 20x20 (hard). There's also a save state function, undo button, and more.\\n\\nRules\\nIn SlitherlinkNX, you draw lines on a grid to create a meandering path, following the rules:\\n\\nThe path must form a single loop, without crossing itself or branching.\\nThe numbers indicate how many lines surround each cell. Empty cells may be surrounded by any number of lines.\\nThere is one unique solution for each level. You can draw small x's on segments that cannot be connected. You should be able to find the solution by logical deduction only, without guessing.\\n\\nFor Slitherlink beginners, I strongly recommend to consult the Wikipedia page, especially chapter 'Solution methods', which is a big help at the start: https://en.wikipedia.org/wiki/Slitherlink#Solution_methods\\n\\nControls\\nd-pad: move cursor\\nX/A/B/Y: draw a line, then a cross, then nothing, in the corresponding direction\\nL + X/A/B/Y: draw a cross, then a line, then nothing, in the corresponding direction\\nR: undo previous action\\n+: open menu, allowing to: retry, save state, or quit\\n\\nCredits\\nDevelopment: Tardigrade (http://beyondds.free.fr/)\\nOriginal game: Nikoli (http://www.nikoli.com/)\\nPuzzles: Krazydad (http://www.krazydad.com/slitherlink/)\\nFont: Chopin Script\\nSounds: Junggle\\nBackground: aopsan", 
            "app_dls": 412, 
            "md5": "9b513cd1d979e01a8503cd956156481b"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Switch_90DNS_Tester/Switch_90DNS_tester.nro", 
            "updated": "15/11/2022", 
            "name": "Switch_90DNS_Tester", 
            "license": "Lesser GPLv3", 
            "title": "Switch 90DNS tester", 
            "url": "https://github.com/meganukebmp/Switch_90DNS_tester/releases", 
            "description": "test 90DNS on the switch", 
            "author": "meganukebmp", 
            "changelog": "1.0.4\\n\\nThis update adds a new icon by @DraconicNEO\\nIt also adds a new message for when the program is running in an offline state (disconnected or airplane mode) to avoid ambiguity.\\nProgram should now build against latest libnx HID changes. Thanks to @wolfmic\\n\\n1.0.3\\n\\nThis update adds new china specific domains to the checklist from PRs #1 and #2\\nIt also adds a better status display (coloring the domain name and showing \"in progress\" dots)\\nIt also expands the statuses reported by the resolver to include unresolved domains closing issue #3.\\nSome minor efficiency refactoring.\\n\\n1.0.2\\n\\nRecompiled with the latest libnx, input should work fine on 9.0.0+", 
            "screens": 0, 
            "extracted": 392, 
            "version": "1.0.4", 
            "filesize": 146, 
            "details": "A simple switch homebrew that does DNS resolution to see if we reach Nintendo's servers.", 
            "app_dls": 38510, 
            "md5": "23402546610e1dacea17781b3b644442"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/Amiigo/Amiigo.nro", 
            "updated": "14/06/2023", 
            "name": "Amiigo", 
            "license": "n/a", 
            "title": "Amiigo", 
            "url": "https://github.com/CompSciOrBust/Amiigo/releases", 
            "description": "GUI for Emuiibo", 
            "author": "CompSciOrBust", 
            "changelog": "2.3.2\\n\\nAdded support for Emuiibo 1.0\\nThe settings menu now has an option to toggle randomised UUIDs\\nUpdated included API cache\\nNOTE: Randomised UUIDs will only apply to Amiibos generated while the option is enabled.\\n\\n2.3.1\\n\\nAmiigo will now validate that the local API cache is valid before using it, this prevents Amiigo crashing at startup if connection was lost during first setup\\nFixed bug where function pointer was used as input to an if statement instead of the function's output during deinit. This function will likely never return false anyway\\n\\n2.2.0\\n\\nAdded extra category\\nUpdated Arriba\\nFixed minor bug in API caching code\\nCheck for the presence of /Atmosphere/contents when installing Emuiibo\\nChanged how Amiibos are categorized when making new Amiibos\\n\\n2.1.0\\n\\nUpdate manually, updating through Amiigo 2.0's built in updater will cause you to crash due to a bug\\n\\nChanges to Amiigo\\n- Fixed bug that would cause the console to fatal when updating through Amiigo\\n- Updated Arriba\\n- Added support for loading custom background shaders\\n- Automatically use outdated API cache if no internet connection within 5 seconds of first time setup\\n\\nChanges to Arriba\\n- Arriba will output the correct screen size when the console is docked / undocked\\n- Arriba now renders text in to a framebuffer to improve performance\\n- Fixed some text characters being incorrectly positioned\\n\\n2.0.0\\n\\nAmiigo was rewritten from scratch.\\nAmiigo will now automatically install the latest version of Emuiibo when launched for the first time if Emuiibo is not present.\\nAmiigo now uses a custom OpenGL based UI library called Arriba, note that I wrote Arriba so it's very bad and no one else should use it for their homebrew.\\nThanks to Arriba Amiigo now has much better touch support. The Amiibo lists now have inertia so you can scroll them like a phone menu, please mess with this it was hard to implement and probably not worth the time it took.\\nThe \"Check for updates\" button was replaced with a settings tab which has the options to switch between category modes, update the API cache, and update to the latest version of Amiigo when an update is detected.\\nAmiigo will now no longer update the API cache every time you open Amiigo Maker.\\nAmiigo should (hopefully) be idiot proof now. If you're unable to use it it has probably broken again and I haven't had time to update it.\\nSorry that this update took almost 2 years to release, I know that Amiigo has been broken for a long time but my console broke so I was unable to update it and a bunch of other stuff happened by the time I got a new one. I would tell you about it but I already sold exclusive rights for the story to Wololo in exchange for a pizza.\\n\\n1.6.0\\n\\nAmiigo now has images for Amiibos thanks to @Kronos2308\\nI added my file sort code that I wrote for N-Xplorer so now the Amiibos are sorted by their name.\\nExperimental support was added for theming by @Kronos2308 . This slows down the GUI a bit but I hope to speed this up for the next release.\\nI also created a discord server for my projects. You can join here: https://discord.gg/ZhRn3nn\\n\\n1.5.3\\n\\nThis version adds in a check for when Emuiibo isn't running (thank you to @Kronos2308 ), Changes the colors of the UI (this was done by me and @Kronos2308 ), and I also improved the updater code so that it no longer assumes Amiigo is in the /switch/ directory which makes updating better for people who downloaded Amiigo through 4tu's HB App Store and CFW packs.\\n\\n1.5.2\\nThis update uses the new 0.4.0 Emuiibo ipc and uses libnx 3.0.0. It should be functionally identical to 1.5.1.\\n\\n1.5.1\\n\\nWith this release when creating new virtual Amiibos using Amiigo Maker the new virtual Amiibo will be created in whatever folder the main UI is currently in.\\nThe main UI's header will now only display the virtual Amiibo's name instead of it's path.\\nEmuiibo is now properly exited when closing the app which previously caused Emuiibo to stop working when Amiigo was opened too many times.\\n\\n\\n\\n1.5.0\\n\\nThis release adds experimental support for categories and other minor changes.\\nTo use categories create a new folder in your Amiibo folder and put virtual Amiibos in it. Press A in Amiigo to enter the sub-folder and B to exit it.\\n\\n1.4.4\\n\\nThis release adds a temporary method to delete Amiibos. This can be done by pressing in on the left stick like a button. My original plan was to add an Amiibo Manager menu which would allow for deleting and renaming Amiibos but I have been busier than I anticipated lately so I haven't had time to implement it properly.\\n\\n1.4.3\\n\\nFixed bug that made the updater always fail\\n\\n1.4.2\\n\\nIn this release I added a check in the updater code to prevent fataling when Github API rate limiting is in effect. I also made changes to Amiigo Maker so if the AmiiboAPI goes down again it will load the offline version instead of crashing.\\n\\n1.4.1\\n\\nAmiibo API is down and if you try to connect to it it will overwrite the offline data with invalid data. This release will crash before that happens. I'll release a better fix soon.\\n\\n1.4.0\\n\\nThis release adds the ability to update Amiigo from within Amiigo and adds a slightly nicer UI (Thank you to shchmue for the border suggestion).\\n\\n1.3.1\\n\\nThis update fixes a crash caused when no Amiibos are available to Emuiibo and Amiigo tries to show their path in the header. Big thank you to Slluxx for both telling me about this bug and theorizing what caused it to happen.", 
            "screens": 0, 
            "extracted": 8284, 
            "version": "2.3.2", 
            "filesize": 3355, 
            "details": "Amiigo is a GUI for Emuiibo and a EmuGUIibo alternative that runs directly on the switch.\\n\\nControls\\nUp / Down on Dpad to move up and down the list.\\n\\nA to select a Amiibo from the list.\\n\\nX toggles emulation state.\\n\\nY moves on to the next Amiibo.\\n\\nB enters the Amiigo Maker. Press B again to go back to the Amiibo selection UI.\\n\\nYou can also use the touch screen to select an Amiibo by tapping on a item in the list, tapping the emulation status rectangle will toggle the emulation state, and tapping the currently selected Amiibo on the top rectangle will move on to the next Amiibo.\\n\\n", 
            "app_dls": 78961, 
            "md5": "4e3d29c1d5c5ece24c3470b1b2c159c4"
        }, 
        {
            "category": "game", 
            "binary": "/switch/SealedBite.nro", 
            "updated": "21/10/2022", 
            "name": "SealedBite", 
            "license": "GPLv2", 
            "title": "Sealed Bite", 
            "url": "https://github.com/faithvoid/GodotNXPorts/", 
            "description": "Sealed Bite (Godot Port)", 
            "author": "faithvoid", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 55236, 
            "version": "Untold", 
            "filesize": 28159, 
            "details": "What sort of trouble can you get into in the forest?\\n\\nA port of Sealed Bite by Securas to the Nintendo Switch.\\n\\nControls:\\n\\n- D-Pad or Analog: Move\\n- B: Jump / Confirm\\n- Y / R-Trigger: Attack\\n- Plus: Pause\\n\\nThis is version 1.0 of Sealed Bite .. the version is listed as Untold for accurate version tracking .. apologies for the confusion.", 
            "app_dls": 1675, 
            "md5": "4d12a23af33c01fb155298ef8367264e"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/tamatool-nx/tamatool-nx.nro", 
            "updated": "12/07/2024", 
            "name": "TamatoolNX", 
            "license": "GPLv2", 
            "title": "Tamatool-NX", 
            "url": "https://github.com/Avellea/tamatool-nx", 
            "description": "Tamagotchi P1 Emulator", 
            "author": "Avellea", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 9202, 
            "version": "1.0.0", 
            "filesize": 4058, 
            "details": "Tamagotchi P1 Emulator based on jcrona's tamatool project, and nn9dev's tamatool-vita port.\\n\\nFeatures basic saving and loading, as well as speeding up the emulator.", 
            "app_dls": 326, 
            "md5": "631d4d4132d96c657c02adec5848e94f"
        }, 
        {
            "category": "game", 
            "binary": "/switch/flare/flare.nro", 
            "updated": "30/01/2020", 
            "name": "Flare-Switch-port", 
            "license": "GPLv3", 
            "title": " Flare-Switch-port", 
            "url": "https://github.com/Riviera71/Flare-Switch-port", 
            "description": "Flare is a single-player 2D action RPG", 
            "author": "Riviera71", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 160093, 
            "version": "1.11", 
            "filesize": 133605, 
            "details": "Flare (Free Libre Action Roleplaying Engine) is a simple game engine built to handle a very specific kind of game: single-player 2D action RPGs. Flare is not a reimplementation of an existing game or engine. It is a tribute to and exploration of the action RPG genre.\\n\\nRather than building a very abstract, robust game engine, the goal of this project is to build several real games and harvest an engine from the common, reusable code.\\n\\nThe Flare engine, which is purely a runtime, is written in C++.\\n\\nFlare uses simple file formats (INI-style config files) for most of the game data, allowing anyone to easily modify game contents. Open formats are preferred (png, ogg). For creating maps, we also support Tiled with the Flare plugin.\\n\\nOriginally the first game to be developed using this engine was part of this repository. As the engine became mature, the game content was moved to an extra repository and is now called flare-game. (happened around sept. 2012)", 
            "app_dls": 556, 
            "md5": "0a83bdb1dcbcd119d8d1877fb8ac3e3c"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/retroarch_switch.nro", 
            "updated": "10/07/2024", 
            "name": "RetroNX", 
            "license": "GPLv3", 
            "title": "Retroarch", 
            "url": "https://github.com/libretro/RetroArch/releases", 
            "description": "Many Retroarch emulators all-in-one", 
            "author": "m4xw, libretro, and more", 
            "changelog": "1.19.1\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.17.0\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.16.0\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.15.0\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.14.0\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.13.0\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.12.0\\n\\nNETWORKING/WIIU: Fix socket_connect_with_timeout for WIIU\\nNETWORKING/WIIU: Fixes RetroAchievements login\\nNETWORKING/WIIU: Fixes other online updater functionality\\nWIIU: Add some missing default directories\\nWIIU: Get mkdir working on WiiU (directory creation)\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.11.1\\n\\nGENERAL: Fix DEFAULT_FILL_TITLE_MACRO\\nNETWORKING: Add the const qualifier to some function parameters\\nNETWORKING/NETPLAY/UPNP: Add a private or CGNAT address warning to UPnP\\nSAVESTATES/SCREENSHOTS: Avoid 'video_gpu_screenshot' with savestates\\nUWP: Better 'Save on quit' fix\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.11.0\\n\\nGENERAL: Don't bake in OpenAL and libcaca by default unless explicitly enabled with configure switch.\\nGENERAL: Reduce amount of strlen calls\\nGENERAL: Reduce or simply sin/cosf calls\\nSWITCH: Enable RWAV (WAV audio file) support\\nWIIU: Implement sysconf and __clear_cache\\nWIIU: Add OS memory mapping imports\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.10.3\\n\\nANDROID: Decouple Play Core dependency to bring app into compliance for F-Droid\\nAI/SERVICE: Disable AI Service setting by default\\nBLUETOOTH/LAKKA: bluetoothctl: add / modify pairing steps\\nCHEEVOS: Disallow manual frame delay setting in Hardcore Mode\\nDATABASE: Serial scanning for Wii now includes WBFS\\nINPUT/MAPPING: Fix offset + crash when clearing input port binds\\nINPUT/MAPPING: Fix saving of 'Analog to Digital Type' when configuration overrides are used\\nINPUT/MAPPING: Fix saving of 'Analog to Digital Type' when configuration overrides are used\\nLOCALIZATION: Add Valencian language option\\nLOCALIZATION: Updates\\nMENU/SETTINGS: Move 'Show Menu Bar' under 'Windowed Mode' settings\\nMENU/SETTINGS: Add sublabels for 'Subsystems' and 'Input Deadzone/Sensitivity'\\nMENU/SETTINGS: Move 'On-Screen Notifications' to top\\nMENU/XMB: Unified the shadow alpha value to a slightly darker one for better readability\\nMENU/XMB: Corrected the option label and sublabel for actual behavior\\nMIYOO: Enable ALSA audio driver and default to it\\nPSP: Take out extra languages/localization, adds about 4/5MB to the binary, and RAM is limited on PSP (32MB and 64MB RAM models)\\nSTATIC PLATFORMS: Populate all history list metadata when launching content from playlists\\nSTEAM: Introduce Steam Rich Presence\\nVIDEO: Fast-Forward Frameskip improvement\\nVIDEO/THREADED: Stability fixes\\nWINDOWS/WINRAW: Fix multiple light guns\\nWIIU: Fix USB get_device_name(), don't truncate to three chars\\n\\n1.9.14\\n\\nCHEEVOS: Disallow achievements when spectating netplay\\nCHEEVOS: Fix need-to-activate achievement logic for non-hardcore\\nCHEEVOS: Don't queue rewind re-init if already on main thread\\nCHEEVOS: Ignore unofficial achievements unless setting is enabled\\nINPUT/GYRO/ACCELEROMETER/ANDROID: Re-enable Gyroscope & Accelerometer when RetroArch resumes or regains focus\\nINPUT/HID: Fix gamepad disconnect on unrecognized HID device\\nLOGGING: Logging cleanups. A bunch of unifications and reformattings (capitalizations, dots, quotes, prefixes etc). Also added a few missing things, such as Run-Ahead error logging and LED interface init logging when it is enabled.\\nNETPLAY: Networking - should not print country for a local lobby\\nNETPLAY: Added setting to allow/disallow players other than the host from pausing the game.\\nNETPLAY: Added a sublabel for netplay max connections.\\nNETPLAY: Fixed port override macro from not being set immediately after the port setting.\\nNETPLAY: Show passworded rooms on lobby\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.9.13\\n\\nCHEEVOS/MSVC2010: Add Cheevos support\\nCRT/SWITCHRES: Fixes some issue where scaling is incorrect in some video modes for CRT output.\\nFRAMEDELAY: Add 'Automatic Frame Delay' option\\nINPUT: Add 'All users control the menu' setting - any gamepad can control the menu when this is enabled. Only limitation right now is that only player 1 can toggle the menu, but any set Menu Toggle Controller Combo will work fine for all users, so this should be acceptable for now\\nINPUT/UDEV: Fix Dolphin bar and safeguard against not adding devices with no mouse or touch buttons detected\\nNETPLAY/CLI: -C/--connect commandline fix\\nNETPLAY: Other improvements\\nNETPLAY: Remove forced disconnection on unknown netplay command - will be backwards compatible with any version that removed this disconnect. instead of disconnecting, we just read the data and ignore, like most network implementations do\\nTASKS/CHEEVOS: Replace coroutines with tasks/thread\\nTASKS/DATABASE/EXPLORE: Initialise 'Explore' menu on a background thread - no more stall when hovering over the Explore tab\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.9.12\\n\\nCOMMAND: Command interface should work again\\nINPUT/HID: Rewrote the HID deregistration algorithm; it should no longer cause issues when dealing with multiple pads of the same HID/VID combo\\nINPUT/HID: Fix initialization bug that caused wiimotes to fail to register without an accessory attached\\nINPUT/HID: Fix Wiimote regression\\nLIBRETRO: Enable SRAM for contentless cores\\nLIBRETRO: Add environment callback to get the rate retro_run is called - GET_THROTTLE_STATE and RETRO_THROTTLE_UNBLOCKED environment callback\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.9.11\\n\\nINPUT: Refactor menu toggle combo button logic to allow quit combo button\\nLIBRETRO: Add environment callback to enable cores to notify the frontend that a core option value has changed\\n\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.9.2\\n\\nCONFIG/FILE: Use hash map to optimise key/value lookups\\nCORE INFO: Performance optimisations + code clean-ups/refactors\\nCRT/SWITCHRES: Fixed CRTSwitchRes framebuffer bug\\nINPUT: Ensure that 'retro_set_controller_port_device' is called when updating 'Max Users'\\nINPUT/XEGL/MOUSE: Fix xegl_ctx.c mouse activation\\nINPUT/SDL: Fix crash in SDL input driver when analogs are bound.\\nINPUT/POINTER: Add scaling to pointer input.\\nINPUT REMAPPING: Fix regression on loading file\\nINPUT REMAPPING: Fix regression where disabling input remapping would disable input\\nMENU: Add optional menu screensaver\\nMENU: Add search filter support to cheats and overlays file browser menus\\nMENU/FILEBROWSER: Enhanced 'Load Content' file browser search functionality\\nMENU/INPUT: Block accidental diagonals in menu navigation\\nMENU/RGUI: Add option to disable menu transparency\\nMENU/RGUI: Fix display of 'Video > Scaling' menu when 'Lock Menu Aspect Ratio' is enabled\\nMENU/MATERIALUI: Add icon to 'Turbo Fire' menu entry\\nMENU/OZONE: Ozone Dracula theme\\nOPENDINGUX/BETA: Fix IPU scaling when running GBA-resolution content\\nOPENDINGUX/BETA: Add 50Hz support\\nOPENDINGUX: Enable 'SaveRAM Autosave Interval' by default\\nPATCHES: Added multi-softpatching support + OSD messages for patches\\n\\nhttps://github.com/libretro/RetroArch/blob/master/CHANGES.md\\n\\n1.9.0\\nAUTOCONFIG: Ensure correct directory is used when saving autoconfig profiles\\nCHEATS: Fix for wrong number of remaining cheat search matches on some machines\\nCORE OPTIONS: Pressing OK (or clicking/tapping) on a \u2018boolean toggle\u2019 core option no longer opens a drop-down list. The value now toggles directly, just like boolean options everywhere else in the menu\\nCORE OPTIONS: Toggling an option that changes the number of core options being displayed (i.e. things like `Show Advanced Audio/Video Settings) no longer resets the navigation pointer to the start of the list\\nCORE OPTIONS: Before, RetroArch would identify core option values as being \u2018boolean\u2019 if they had labels matching the specific strings enabled or disabled. Most core devs would abide by this, but not always\u2026 As a result, we sometimes would end up with misidentified values, with all kinds of Enabled, Off, True, etc. strings littering the menu, in place of proper toggle switches. All boolean-type value labels are now detected, and replaced with standard ON/OFF strings.\\nCRT: On the fly CRT porch adjuments \u2013 these changes allow a user to adjust how the porch algorithm generates the 15khz/31khz output. Giving the ability to change over/under scan.\\nCONFIG FILE: Optimise parsing of configuration files\\nDRIVERS: Implemented protection to avoid setting critical drivers to nothing thus preventing the user from locking him/herself out of the program\\nFILE I/O: VFS and NBIO interfaces will now use 64-bit fseek/ftell where possible, should allow for reading/writing to files bigger than 2GB\\nINPUT MAPPING/REMAPPING: Add input remap drop-down lists\\nLOCALIZATION: Updates for several languages (synchronized from Crowdin)\\nMENU/RGUI: Add optional \u2018toggle switch\u2019 icons\\nMENU/WIDGETS: Add optional widget-based \u2018load content\u2019 launch feedback animation\\nMENU/WIDGETS: Make notification font size option visible when graphics widgets are enabled\\nPLAYLISTS: Change playlists to use dynamic arrays. Instead of a fixed initial 12MB memory allocation (99999 * 128 byte (on 64bit arch)), use a dynamically growing array\\nPLAYLISTS: Playlist base content directory paths \u2013 portable playlists\\nPLAYLISTS/SEARCH: Enhanced playlist search functionality\\nPLAYLISTS/DATABASE: Add \u2018Explore\u2019 view\\nPLAYLISTS/DATABASE/EXPLORE: Show system icons in explore view\\n\\n1.8.9\\nAUTO SAVESTATES: Ensure save states are correctly flushed to disk when quitting RetroArch (fixes broken save states when exiting RetroArch - without first closing content - with 'Auto Save State' enabled)\\nCORE MANAGEMENT: Add 'core management' menu (Settings -> Core)\\nCORE MANAGEMENT: Add option to backup/restore installed cores\\nCORE MANAGEMENT: Improved core selection logic\\nCORE INFO: Search search optimisations\\nCORE DOWNLOADER: Rename 'Core Updater' to 'Core Downloader'\\nCORE DOWNLOADER: Add 'Show Experimental Cores' setting under Settings > Network > Updater\\nCORE DOWNLOADER: Core licenses are now shown for all entries in the Core Updater menu\\nCORE DOWNLOADER: Pressing RetroPad select on a Core Updater entry will now display any text in the description field of its info file\\nCORE DOWNLOADER: Installed cores are now highlighted via a [#] symbol\\nCORE DOWNLOADER: Pressing RetroPad start on a selected, installed entry opens the Core Information menu (when using Material UI, swiping left or right triggers the same action). This means we can now view bios info etc. - and more importantly delete cores - without jumping through all the hoops of loading a core first and navigating all over the place\\nCORE DOWNLOADER/UPDATER: Add option to automatically backup cores when updating\\nINPUT: Added a hotkey delay option to allow hotkey input to work properly when it is assigned to another action\\nINPUT: Remove 'All Users Control Menu' setting, was buggy and will be properly reintroduced after input overhaul\\nLOCALIZATION: Add Persian language\\nLOCALIZATION: Add Hebrew language\\nLOCALIZATION: Add Asturian language\\nMENU: Proper line wrapping for message dialog boxes\\nMENU/HOTKEYS: Add sublabels to all hotkey bind entries\\nMENU/QUICK MENU: Suppress the display of 'empty' quick menu listings when closing content\\nMENU/OZONE: Performance improvements\\n\\n1.8.5\\n\\nhttps://www.libretro.com/index.php/retroarch-1-8-5-released/\\n\\n1.8.4\\n\\nLIBNX/SWITCH: Updated libnx integration to v3.0.0. This also cherry-picks libnx commit 583d6bb92dcbb33b6bb4a0fa1a9df6e3725d6ef6, which should fix the requirement having to turn rumble off and on in the system settings once per reboot\\n\\n\\n1.8.3\\n\\nSWITCH/LIBNX/BUGFIX: Fix onscreen keyboard input regression\\n (XMB/OZONE) Fix quick menu detection. XMB would not display savestate thumbnails in the quick menu if it was accessed via the main menu\\n\\n1.8.2\\n\\nhttps://www.libretro.com/index.php/category/blog/\\n\\n1.8.0\\n\\nhttps://www.libretro.com/index.php/category/blog/\\n\\nLIBNX/SWITCH: Make audren threaded audio driver the new default\\n\\n1.7.9.2\\n\\nhttps://github.com/libretro/RetroArch/blob/v1.7.9.2/CHANGES.md\\n\\nSWITCH: Set default aspect ratio to core provided instead of 4:3\\n\\n1.7.8.4\\n\\nAdd \u2018AI Service\u2019 option to Switch (untested)\\nUpdate to newest libnx toolchain\\n\\n\\n1.7.8\\n\\nSWITCH :Add Audren audio driver.\\nSWITCH: Fix splitting and joining of joycon controllers. Before this fix, splitting and joining of joycons only ever worked sporadically\\nSWITCH: Proper x/y scaling for pointer devices, fixes touch lightgun\\n\\n\\n1.7.6\\nNew default theme: Ozone!\\nImprove touch scaling calculation.\\nProper button labels.\\n Add option to enable in-menu sound effects.\\n\\n1.0\\nUpstream Retroarch release! You can read more about the newly updated features at:\\nhttps://www.libretro.com/index.php/retroarch-1-7-5-introducing-libnx-switch-version/\\n\\n0.9.7b\\n\\nIncludes a mitigation for the Fuzzing, you can now enjoy docked!\\nPCSX is built using the updated unai renderer, meaning less glitches and performance seem to have gotten a boost too.", 
            "screens": 0, 
            "extracted": 231718, 
            "version": "1.19.1", 
            "filesize": 91081, 
            "details": "Notice: This is a fairly large package, so it may take some time to download! Therefore, in order to keep file sizes down, this package contains only four cores: mgba, gambatte, nestopia, snes9x. For other cores, use the built-in Online Updater. For more themes, use the built-in Online Updater.\\n\\nAdditionally, if you are seeing asset/icon issues with your theme, try: Main menu -> online updater -> update assets, and restarting.\\n\\nCourtesy of m4xw\\n----------------------------------------------------\\nFor more information regarding RetroArch, the location/names of BIOS files, and compatibility with ROMs, please refer to the official Libretro documentation at:\\nhttps://docs.libretro.com/\\nUse the sidebar under \"Core Documentation\" to read more about the core you're looking for.\\n\\nF.A.Q.\\n\\nQ: My Switch has crashed/softlocked, and RetroArch doesn't work properly!\\nA: First, make sure you are on a Horizon OS version (I.E. Nintendo's Switch OS) higher than 1.0.0. Second, no matter which firmware you are on, ALWAYS FORMAT YOUR SD CARD AS FAT32; NO EXCEPTIONS. If you continue to use RetroNX under the ExFAT filesystem, we cannot provide additional support beyond the previously elaborated-upon disclaimer.\\n\\nQ: I'm trying to save changes to the settings, but it doesn't commit!\\nA: Save the current configuration with no content loaded. You can do this from any core.\\n\\nQ: My question is not listed here/where can I go for additional support?\\nA: The fastest method for support and staying up-to-date on progress for RetroNX, you can join the Discord server with the following link:\\n  https://discord.gg/jTmfAEx\\nWhen you are posting about issues related to the cores (assuming you have read through this readme and identified your problem is uncommon/unrelated to the above), please list the following pieces of information in your report alongside the issue:\\n - Horizon OS version (I.E. Switch OS firmware version)\\n - Core used\\n - Whether core used is a Master/Stable or Nightly/Unstable; what is the builddate of said core?\\n - Version of the Hekate payload used\\nMake sure to post in the channel listed #retroarch-homebrew.\\n----------------------------------------------------\\nCredits:\\nm4wx - Primary developer of RetroNX/Libretro-NX.\\nlifajucejo, others - Supporting developers/contributers to the RetroNX project.\\nSwitchbrew - Developers/contributors for the LibNX project and API which RetroNX is built on.\\nOriginal Libretro Team - Primary developer of the Libretro/RetroArch project that RetroNX is built upon.\\nAll the testers and users that report notable issues.\\nAn Average Seong - Packaging the build in a convenient pack/writer of the very README you're reading! Thanks for reading to the end.", 
            "app_dls": 542584, 
            "md5": "143db3cf752c3deba4ce353f25eebf15"
        }, 
        {
            "category": "game", 
            "binary": "/switch/d1x-rebirth/d1x-rebirth.nro", 
            "updated": "23/12/2020", 
            "name": "dxxrebirth", 
            "license": "GPLv3", 
            "title": "dxxrebirth", 
            "url": "https://github.com/dimag0g/dxx-rebirth/releases", 
            "description": "Open-source engine for Descent 1 and 2", 
            "author": "dimag0g", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 115679, 
            "version": "0.61", 
            "filesize": 101398, 
            "details": "dxx-rebirth root directory is /switch/d1x-rebirth and /switch/d2x-rebirth for Descent 1 and 2, respectively. Put the release files there, then add the files from your copy of the game or the shareware files from https://www.dxx-rebirth.com/game-content/. The release already includes addons from https://www.dxx-rebirth.com/addons/ : the high resolution pack for D1 and OGG music for both D1 and D2.\\n\\nGame controls can be changed in the game options. Default configuration mimics the layout used by Sublevel Zero. There are 3 pre-configured profiles (cockpit/hudbar/maxview) corresponding to the 3 HUD modes. Currently hotkey-triggered HUD options can only be changed using a keyboard on a PC version, or by manually editing the config files.\\n\\nOriginal source code from Parallax Software is under Parallax license.\\nAdditional artwork is \u00a9 by Christian Beckhaeuser 2005 - 2019", 
            "app_dls": 613, 
            "md5": "ab37ad8d6eac4f8dbadee5629a907890"
        }, 
        {
            "category": "game", 
            "binary": "/switch/doom64ex/doom64ex.nro", 
            "updated": "24/10/2019", 
            "name": "doom64", 
            "license": "GPLv2", 
            "title": "Doom64EX", 
            "url": "https://github.com/fgsfdsfgs/Doom64EX/releases", 
            "description": "A recreation of DOOM 64", 
            "author": "fgsfdsfgs", 
            "changelog": "0.2.0-nx\\n\\nproper gamepad code backported from svkaiser/Doom64EX/rom branch;\\nrebuilt with latest libnx (9.0 support).", 
            "screens": 0, 
            "extracted": 9197, 
            "version": "0.2.0-nx", 
            "filesize": 3592, 
            "details": "NOTE THIS REQUIRES SOME ADDITIONAL FILES TO PLAY!!\\n\\nDoom 64 EX is a reverse-engineering project aimed to recreate Doom64 as close as possible with additional modding features.\\n\\nFeatures:\\nhardware accelerated rendering;\\nsound and music;\\nanalog controls;\\nall other features of Doom 64 EX probably work (except network games).\\n\\nTo install and run the game, follow these steps:\\nObtain a Doom 64 ROM in either n64, z64 or v64 format. I think region and version do not matter, as long as the ROM is unmodified.\\nExtract the wadgen folder from doom64ex_nx_v010.zip to somewhere on your PC.\\nRun wadgen/WadGen.exe and point it to your Doom 64 ROM. This should generate two files inside the wadgen folder: DOOM64.WAD and DOOMSND.SF2.\\nExtract the switch folder from doom64ex_nx_v010.zip to the root of your SD card.\\nCopy DOOM64.WAD and DOOMSND.SF2 you got in step 3 to /switch/doom64ex/ on your SD card.\\nIf you already have Doom 64 EX installed on your PC or something, you can just do steps 4 and 5 right away, using the files from your existing installation.\\n\\n\\nSome notes:\\nthe framerate is capped at 60 FPS by default, if you want framerates closer to what you would get on an actual N64, set Options -> Setup -> Framerate to Capped;\\nsometimes the music skips a little bit and/or channels go out of sync for a moment, this is most noticeable in the intro;\\nas usual, if you have exFAT, better quit the game using the 'Quit Game' option in the menu instead of just killing hbmenu;\\nI have only tested this on a US v1.1 Z64 ROM, not sure if every ROM out there works, but most should.\\n\\nCredits:\\nSamuel Villarreal (svkaiser) and others for Doom 64 EX;\\nfincs, Armada651, Subv and probably others for their work on the OpenGL/mesa/libdrm stuff;\\nMidway Games and Nintendo for Doom 64;\\nid Software for Doom.", 
            "app_dls": 13105, 
            "md5": "ac5603184b3090a769177c742323e7f5"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Pixel_Shuffle_NX/Pixel_Shuffle_NX.nro", 
            "updated": "01/10/2018", 
            "name": "Pixel_Shuffle_NX", 
            "license": "MIT", 
            "title": "Pixel Shuffle NX", 
            "url": "https://github.com/Cid2mizard/Pixel_Shuffle_NX/releases", 
            "description": "Puzzle game.", 
            "author": "Cid2mizard", 
            "changelog": "1.0\\n\\nInitial Release.", 
            "screens": 0, 
            "extracted": 9280, 
            "version": "1.0", 
            "filesize": 7048, 
            "details": "Pixel Shuffle NX is the adaptation of the puzzle game Pixel Shuffle http://www.gimme5games.com/play-game/pixelshuffle for Nintendo Switch.\\n\\nRearrange the columns to reveal the picture!\\n\\n81 Levels -\\n\\n- EASY - No time for view solution.\\n\\n- MEDIUM - Time limited for view solution.\\n\\n- HARD - No view solution.\\nControls -\\n\\nMenu -\\n\\n    - C-Pad / D-Pad / Touch - Choose level.\\n\\n    - L / R - Next / Previous page.\\n\\n    - A / Touch - Begin level.\\n\\nInGame -\\n\\n    - Touch - Shuffle.\\n\\n    - L / R - View solution.\\n\\n    - Y - Re-Shuffle.\\n\\n    - B - Return.\\n\\n    - Plus - Exit game.\\n\\nThanks -\\n\\n- devkitpro and switchbrew.\\n\\n- Eric Matyas (www.soundimage.org) for Music.\\n\\n- SavingCleo (savingcleo.deviantart.com) for Palette.", 
            "app_dls": 343, 
            "md5": "0c0cb80168e5a84c62f252539b2f7ef1"
        }, 
        {
            "category": "game", 
            "binary": "/switch/BomberManNX/BomberManNX.nro", 
            "updated": "29/09/2019", 
            "name": "BomberManNX", 
            "license": "MIT", 
            "title": "BomberManNX", 
            "url": "https://github.com/KranKRival/BomberManNX/releases", 
            "description": "Clone of Bomberman", 
            "author": "KranKRival", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 16620, 
            "version": "1.0.0", 
            "filesize": 5899, 
            "details": "Clone of Bomberman game in C++ using SDL2 for the nintendo switch\\n\\nAuthors:\\n* Aleksandar Miletic / developer\\n* Mirko Brkusanin / developer\\n* KranK / Port to the nintendo switch", 
            "app_dls": 4144, 
            "md5": "bc73a00c766d802ee5205f725e02ef30"
        }, 
        {
            "category": "game", 
            "binary": "/switch/openmw/openmw.nro", 
            "updated": "28/10/2019", 
            "name": "openmw", 
            "license": "GPLv3", 
            "title": "OpenMW", 
            "url": "https://github.com/fgsfdsfgs/openmw/releases", 
            "description": "Unofficial Nintendo Switch port of OpenMW.", 
            "author": "fgsfdsfgs", 
            "changelog": "0.46.0-nx2\\n\\nrebuilt with latest libnx;\\nnow pops up a user selection screen on startup;\\nfixed some stuff related to usernames (thanks terabyte25).\\n\\n0.46.0-nx1\\n\\nInitial Switch release, based on latest OpenMW source (0.46.0 git). Expect issues.", 
            "screens": 0, 
            "extracted": 38426, 
            "version": "0.46.0-nx2", 
            "filesize": 16032, 
            "details": "OpenMW is an open-source game engine that supports playing Morrowind by Bethesda Softworks. You need to own the game for OpenMW to play Morrowind.\\n\\nOpenMW also comes with OpenMW-CS, a replacement for Bethesda's Construction Set.\\n\\nInstallation and running\\n\\nIf you already have an OpenMW install on your PC:\\n\\nCopy your openmw.cfg into /switch/openmw/config/ (for Windows users: it's in Documents/My Games/OpenMW).\\nCopy your data files (esm, esp, bsa) into /switch/openmw/data/.\\nIf you don't, but you own Morrowind:\\n\\nInstall Morrowind.\\nCopy the Data Files folder and Morrowind.ini file from your Morrowind installation into /switch/openmw/data/.\\nThen run OpenMW from hbmenu.\\n\\nKnown issues\\n\\nExiting the game using the HOME button during a loading screen will crash it.\\nCursor sometimes displays when it shouldn't.\\nPerformance isn't very good.\\nUser accounts that have non-ASCII characters in the name will be treated as an absence of user account (i.e. your saves will go into global).\\n\\nNotes\\n\\nYou have to run this from either NSP hbmenu or from a game override. Applet mode does not offer enough memory.\\nPress MINUS to bring up the software keyboard when an input field is selected.\\nClick LSTICK to enable/disable gamepad cursor control.\\nThis has only been tested with the English release of Morrowind GOTY Edition. Mods should probably work, however you'll have to either edit your openmw.cfg manually or use openmw-launcher on PC, then copy the config file over.\\nIf you have a user account active when you run the game, your saves will go into /switch/openmw/data/USERNAME, otherwise they'll go into /switch/openmw/data/global.\\nIf the game crashes, check /switch/openmw/fatal.log and /switch/openmw/config/openmw.log.\\n\\n\\n\\n\\n\\n", 
            "app_dls": 4120, 
            "md5": "85f9383afd2c64dfcb9f38d9ad3b8f2d"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/noies/noies.nro", 
            "updated": "08/05/2019", 
            "name": "noies", 
            "license": "GPLv3", 
            "title": "NoiES", 
            "url": "https://github.com/Hydr8gon/NoiES/releases", 
            "description": "A noice NES emulator", 
            "author": "Hydr8gon", 
            "changelog": "v1.2\\n\\nGeneral:\\n-Fixed incorrect cycle timings on CPU instructions\\n-Implemented mappers 7 and 15\\n-Implemented all illegal CPU instructions\\n-Added crop overscan setting\\n\\nSwitch:\\n-Improved the UI font\\n-Added new UI selector, styled like the one from the Switch UI\\n-Added complete UI touch control, including scrolling and button presses when touching the labels in the corner\\n-Added support for mapping multiple controls to a single button, as well as clearing mappings\\n-Added support for player 2 input using a second controller\\n-Added aspect ratio setting\\n\\nv1.1\\n\\nGeneral:\\n-Added MMC2 mapper support\\n-More accurate PPU memory accesses\\n-Fixed audio crackles caused by the triangle channel\\n\\nSwitch:\\n-Automatically open the last visited directory on startup\\n-Added an icon\\n-Added file and folder icons for the file browser\\n-Fixed distorted sound in docked mode\\n\\nv1.0\\n\\nInitial Release", 
            "screens": 0, 
            "extracted": 7826, 
            "version": "1.2", 
            "filesize": 2572, 
            "details": "I present to you my own original NES emulator for the Switch, NoiES! This entire emulator was written from scratch by me. I started this project just to teach myself about how emulators are made so that I can work on larger projects in the future, but it went farther than I originally expected and is now pretty much a full-fledged emulator, apart from some minor inaccuracies and some missing mappers.\\n\\nBut there are already other NES emulators for the Switch, why use this one?\\nWell, no reason in particular. As I said before, this was more a learning experience for me, but I ported it to the Switch for the homebrew bounty and I might as well release it. I suppose the biggest advantage I can offer is that since I developed the entire emulator core myself I am very familiar with it and can easily dive in to fix bugs and add new features.\\n\\nMinor inaccuracies?\\nYes, well, I've yet to test my CPU timing for cycle accuracy so no promises there. There are also some minor timing issues with the PPU, particularly with the MMC3 IRQ counter, which can be seen in the slight vibration of the status bar in Kirby's Adventure. Another odd bug I found is that I can't seem to navigate the items menu in The Legend of Zelda. Oh, and the audio system is still kind of a work in progress, so you might notice crackles (especially in docked mode!), missing sounds, or things that sound slightly off. (Wow, doing a great job selling it here)\\n\\nMappers?\\nRight. Every ROM has a mapper; it's basically what loads different portions of the ROM memory into the CPU memory for execution. I've implemented mappers 1 through 4, which should cover a large portion of the NES library. If you have any particular games you want to play that aren't supported, tell me the mapper number (the emulator will tell you which one it is if it isn't supported) so I can place higher priority on implementing it.", 
            "app_dls": 1198, 
            "md5": "4b707e5bd5d789899af7acc0214d8179"
        }, 
        {
            "category": "game", 
            "binary": "/switch/hexgem/hexgem.nro", 
            "updated": "29/12/2018", 
            "name": "hexgem", 
            "license": "n/a", 
            "title": "Hexgem", 
            "url": "https://github.com/carstene1ns/hexgem", 
            "description": "A puzzlgame", 
            "author": "carstene1ns", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 17140, 
            "version": "1.0", 
            "filesize": 14061, 
            "details": "Hi, this is the first release of HEXGEM, a board game.\\n\\nSwitch gems to get 3 or more in a row. Get as much points as possible before the time runs out.\\n\\nControls\\n\\nTouch = Select gem\\nDrag = Switch gems\\nMINUS = Back, Close\\n\\nINFO : https://gbatemp.net/threads/hexgem-board-game.512540/", 
            "app_dls": 243, 
            "md5": "1e4b3ea4f35685faa2553b6a6342592d"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/switchXBOXcontroller/SwitchXBOXController_Client.nro", 
            "updated": "08/02/2020", 
            "name": "switchXBOXcontroller", 
            "license": "GPLv3", 
            "title": "SwitchXBOXController", 
            "url": "https://github.com/WerWolv98/SwitchXBOXController/releases", 
            "description": "Switch into an XBOX360 controller", 
            "author": "WerWolv", 
            "changelog": "1.2\\n\\nWhile the homebrew is running, the switch will be underclocked to 50MHz now\\nAdded a IP selection for people that can't use UDP broadcasting", 
            "screens": 0, 
            "extracted": 332, 
            "version": "1.2", 
            "filesize": 152, 
            "details": "Turn your Nintendo Switch into an XBOX360 controller to play on your Windows computer\\n\\nNOTE this package installs the client to your console , you need to follow the instructions below.\\n\\nHow to use\\nDownload the latest https://github.com/mogzol/ScpDriverInterface release and use the ScpDriverInstaller.exe in there to install the Scp drivers.\\nDownload the latest SwitchXBOXController release from the source link and execute SwitchXBOXController_Server.exe. You might have to allow network access in the firewall settings.\\nStart the homebrew application using the hbmenu", 
            "app_dls": 17321, 
            "md5": "3cefa0a7742b4c655d2c7215c4aacdbf"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "10/10/2024", 
            "name": "bitmap-printer", 
            "license": "n/a", 
            "title": "bitmap-printer", 
            "url": "https://github.com/HookedBehemoth/bitmap-printer/releases", 
            "description": "bitmap-printer", 
            "author": "HookedBehemoth", 
            "changelog": "1.3.0e\\n\\nPatch for 19.0.0.1080\\nFix warning about ptr arithmetic with void*\\n\\n1.3.0d\\n\\nadd 18.0.0.1060 patch by @CosmicCurator in #22\\n\\n1.3.0c\\n\\nadd 16.0.0.1040 patch in #16\\nadd 17.0.0.960 patch by @CosmicCurator in #18\\n\\n1.3.0b\\n\\nadd 15.0.0.1120 patch\\n\\n1.3.0\\n\\nImprove performance slightly\\n\\n1.2.0\\n\\nFix usage if launched with boot2 flag (lol)\\nCleanup to reduce memory footprint\\nThis now uses 0x1f000 (~130 000) bytes (last version 0x3f000 (~258 000) bytes)\\n\\n1.1.6\\n\\nadded the patch for firmware 11.0.0\\n\\n1.1.4\\n\\n-Reduced fs session usage by two\\n-This could have caused issues with users that used too many other sys-modules\\n\\n1.1.3\\n\\nNow renames files to time of creation ( YYYY-MM-DD_hh-mm-ss.bmp)\\n\\n1.1.2\\n\\nAll currently available system versions were tested and confirmed working.", 
            "screens": 0, 
            "extracted": 17, 
            "version": "1.3.0e", 
            "filesize": 19, 
            "details": "This system module captures the capture button event and instead of saving a compressed (jpeg) image on the sd card it stores an uncompressed RGB bitmap on the sd card.\\n\\nWhy does it need patches?\\n\\nThe IPC calls I use are caps:sc 1201-1203 that check a flag for debug mode. The patch makes the function call always return true.\\n\\nWorks on HOS versions 3.0.0-15.0.0 (2022.10.13).", 
            "app_dls": 1274, 
            "md5": "9a228548e66f0e0cf46174d4712e5ac0"
        }, 
        {
            "category": "game", 
            "binary": "/switch/CSE2/CSE2.nro", 
            "updated": "26/11/2020", 
            "name": "CSE2", 
            "license": "n/a", 
            "title": "Cave Story Engine 2", 
            "url": "https://apps.fortheusers.org/switch/CSE2", 
            "description": "Decompilation of Cave Story (v1.0.0.6)", 
            "author": "heyjoeway", 
            "changelog": "THIS APP HAS RECEIVED A DMCA TAKE DOWN NOTICE IT MAY NOT BE HERE FOR LONG\\n\\nhttps://github.com/heyjoeway/Cave-Story-Engine-2/releases\\n\\n2.0.1\\n\\nInitial release for Switch. Based off of the enhanced branch.\\n", 
            "screens": 0, 
            "extracted": 10073, 
            "version": "2.0.1", 
            "filesize": 4277, 
            "details": "Cave Story Engine 2 is a decompilation of Cave Story. This repository ports CSE2 to the Nintendo Switch.\\n\\nThis branch adds several enhancements including:\\n\\nPNG support\\nFull alpha blending support\\nFixed text blending, utilising the aforementioned alpha support\\nAll resource files moved to the data folder\\nBooster's Lab support (open 'data/mrmap.bin')\\n60FPS\\nWidescreen\\nVastly-improved fullscreen\\nAutomatic vsync (only enabled on 60hz monitors)\\nSmooth sprite movement, through the removal of the design choice that locks sprites to a 320x240 grid when drawn (can be re-enabled by disabling SMOOTH_SPRITE_MOVEMENT)\\nBugfixes enabled by default\\nPixtone sounds split to .pxt files\\nSupport for Ogg Vorbis, FLAC, .it, .xm, .mod, .s3m, and Pxtone audio formats for music and SFX\\nSupport for high-resolution sprites (see SPRITE_SCALE in CommonDefines.h)\\nExtra TSC commands (TODO: link docs for these and the Creepy Curly NPC)\\n<MS4\\n<MIM\\n\"Creepy Curly\" NPC\\n\\n\\n", 
            "app_dls": 2383, 
            "md5": "0af8d92324997c8e59a80cc8e271ba6b"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/N-Xplorer.nro", 
            "updated": "25/03/2020", 
            "name": "N-Xplorer", 
            "license": "n/a", 
            "title": "N-Xplorer", 
            "url": "https://github.com/CompSciOrBust/N-Xplorer/releases", 
            "description": "Multi-functional file manager", 
            "author": "CompSciOrBust", 
            "changelog": "0.7.1\\n\\nThis update is unfinished but 0.7.1 contains some annoying bugs and my switch has hardware failure so I'll have to release this in it's current state. Be aware that some new features may not work as expected since I have been unable to thoroughly test them myself. Thanks to @muxi1 for doing testing for me.\\n\\nChanges:\\nFixed bug that causes segfault after installing a N-Xplorer update.\\nFixed bug that causes file extensions not to be recognized if a file name contains more than one dot.\\nZip extraction now extracts to a folder. Leave the name empty to extract to the current folder.\\nAdded ability to theme the settings UI.\\nFixed crash when copying a file smaller than 0.25 GB.\\nAdded more sorting options (not fully implemented due to problems mentioned above).\\n\\n0.7.0\\n\\nWhat's new?\\nChanged \"Copy\" in the sub menu to \"Select\" to clear up confusion.\\nAdded code for sorting the files by size and name (descending and ascending).\\nAltered behavior of the B button. End users shouldn't notice much of a difference.\\nAdded settings GUI.\\nBegan adding theme support.\\nAdded ability to mount saves (experimental).\\nImproved file copying speeds.\\nAdded zip extraction.\\nAdded in app self updater.\\nAnd probably other stuff I'm forgetting about.\\n\\nJust press minus to access the new settings menu.\\n\\n0.6.4\\n\\nAdded parental controls when accessing nand filesystems.\\nFixed bug that mounted the user partition to both user:/ and sys:/.\\nAdded GUI save options to the text editor (Save and exit, save as and exit, and exit without saving).\\nRemoved the negative button functionality in the text editor. That is now in the GUI.\\nProbably internal stuff I'm forgetting about.\\n\\n0.6.3\\n\\nThis release cleans up the code a bit and makes debugging easier using nxlink.\\nThe following new features were added:\\nSupport was added for the user and system partitions on the nand. Be careful when doing things here as you could brick your system or corrupt save data.\\nThe cursor will now remember it's position when going up a directory (pressing b).\\nIf you create a new folder but the name already exists it will append a number to the folder name (this works the same as creating new folder in Microsoft Windows).\\n\\n0.6.2\\n\\nThis release moved the logic and input to a separate thread from the GUI.\\nCopying files was made more stable.\\nQuick navigation was added by using the left and right buttons on the main explorer UI\\nSeconds was added to the clock.\\nImages can now be zoomed, rotated, and moved around the screen.\\nYou can now exit a text file without saving by pressing minus (this is only temporary until I make a better solution).\\nA message was added while deleting files so that you know the app isn't just frozen if it takes longer than expected.\\nPlus can now be used to exit the app from the main explorer UI more quickly (requested by muxi).\\nBugs were fixed and the app is more stable in general now.\\nProbably other stuff I'm forgetting.\\n\\nThanks to @muxi1 and qpwoei for helping to test this release.\\n\\n0.6.1\\n\\nThis release changes how the clipboard works and adds a on screen message while files are being copied. The clock will continue to run in a separate thread.", 
            "screens": 0, 
            "extracted": 9852, 
            "version": "0.7.1", 
            "filesize": 3998, 
            "details": "Multi-functional file manager for the Nintendo Switch\\n\\nHow to use\\nMain UI\\nUp / Down buttons to move up and down the list\\n\\nA to open a file / folder\\n\\nPlus / Y to open and close the sub menu\\n\\nText Editor\\nUp / Down change lines\\n\\nA edit line\\n\\nLeft deletes a line\\n\\nRight adds a line\\n\\nB save and exit\\n\\nImage Viewer\\nB exit\\n\\nCredits\\nLibNX and DevkitPro for making the toolchain.\\n\\nSpitzfire for the original logo which I modified.\\n\\nEveryone in the Team AtlasNX dev chat for general help in this and other projects.", 
            "app_dls": 23856, 
            "md5": "a752b72701b764674a692c49d10a6f44"
        }, 
        {
            "category": "game", 
            "binary": "/switch/REminiscence/REminiscence.nro", 
            "updated": "16/07/2018", 
            "name": "REminiscence", 
            "license": "none listed", 
            "title": "REminiscence", 
            "url": "https://github.com/Cpasjuste/REminiscence/releases", 
            "description": "REminiscence (flashback) engine", 
            "author": "Cpasjuste", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 40231, 
            "version": "1.0", 
            "filesize": 12842, 
            "details": "Here is the first release of the REminiscence (flashback) engine, initially developped by Gregory Montoir, for the Nintendo Switch.\\n\\nControls\\nA = ENTER\\nB = SPACE\\nX = SHIFT\\nY = BACK\\nPLUS = ESCAPE (menu)", 
            "app_dls": 3199, 
            "md5": "90a0c2de682e4a4887d2a4a3d456c693"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/In-Home-Switching/In-Home-Switching.nro", 
            "updated": "31/12/2018", 
            "name": "in-home-switching", 
            "license": "GPLv3", 
            "title": "In-Home-Switching", 
            "url": "https://github.com/jakibaki/In-Home-Switching/releases", 
            "description": "Video streaming from Windows to Nintendo Switch", 
            "author": "jakibaki, D-VAmpire", 
            "changelog": "v0.2\\n\\nMassive overall performance improvements\\nAudio support\\nIP showing in-App\\nOverclocking profiles\\nConfigs on PC, thanks to SunTheCourier\\n\\n\\nInitial release\\n\\n- Video streaming from Windows to Nintendo Switch\\n- Controller input from Switch to Windows", 
            "screens": 0, 
            "extracted": 12938, 
            "version": "0.2", 
            "filesize": 5139, 
            "details": "\\nThis is a homebrew that enables streaming of PC games to the Nintendo Switch!\\n\\nHave you ever been told by your parents that spending hours sitting in front of a PC was bad for you (like I was)? Well, now you can play your games portably anywhere in your house!\\n\\nThis project is fairly new, so please do not consider it totally stable. If you encounter issues, feel free to submit them.\\n\\n\\nFeatures:\\n\\n- Stream PC screen to a Nintendo Switch in your local network\\n- 720p (full Switch-Tablet display resolution)\\n- 40-60 FPS (if not see Troubleshooting)\\n- Low delay (again, see Troubleshooting)\\n- Capture controller input on Nintendo Switch\\n- Emulate an Xbox controller on the PC\\n- PC app offers picture quality adjustments\\n\\n\\nHow to Use:\\n\\nFor the PC App, you will need to execute In-Home-Switching.exe which you can download from:\\nhttps://github.com/jakibaki/In-Home-Switching/releases\\n\\nOn PC, Scp drivers must also be installed (just unzip and execute Driver Installer/ScpDriverInstaller.exe). Otherwise the program will crash silently.\\n\\nAlso please set your PC resolution to 1280x720p in Windows for getting much better performance of screen capturing while running the app.\\n\\nOn the Switch, find out its IP address (in the Internet settings) and start the app with your Switch CFW. Then type in the Switch's IP address on the PC app and hit the Connect button.\\n\\n\\nCurrent Limitations:\\n\\n- Only works with Windows 8 (64-bit) and newer\\n- No audio support atm\\n- No support for Switch CFW other than Atmosph\u00e8re or Kosmos\\n\\n\\nKnown issues:\\n\\n- So far Switch crashes when put to sleep with app running (please close app beforehand, we have not fixed this issue yet)\\n- App breaks when Switch changes from docked to handheld mode or vice-versa. Please quit the app before doing so.\\n\\n\\nFurther notices:\\n\\nThis app uses core overclocking to 1785 MHz on the Nintendo Switch. We use this measure in order to decode the incoming videos efficiently. As far as we know, there have been no reported cases of this damaging any devices. In other words, it is considered safe. Still we do not warrant for any potential device damage caused by this homebrew.\\n\\n\\nTroubleshooting:\\n\\n-- Nice videos, but sadly that delay makes it unplayable --\\n\\nIf you are experiencing delays greater than 0.1 seconds, either your PC is just too slow for your chosen quality options (try worsening image quality) or your local network is bad. Basically we need instant data transfer in your network to work properly (this has nothing to do with throughput, just latency).\\nSome WiFi-routers unfortunately just aren't up to the task.\\n\\n-- These framedrops hurt my eyes! --\\n\\nYour PC is probably too slow for encoding with the games/applications on. Try other applications, lower image quality and, if you haven't already, set your PC screen resolution to 1280x720p (saves scaling).\\n\\n-- No drops, but my framerate is just very low --\\n\\nWell, in our tests we had 60 FPS on Windows 10 with low image quality... I guess you can try the same strategies as for fixing framedrops, I hope that helps.\\n\\n\\nLicense:\\n\\nThis code is licensed GPLv3 and this has a reason: We do not want to see (or read about) any parts of this project in non-open-source software (everything that is not GPLv3 licensed). Please share the notion of free code for everyone.\\n\\n\\nCredits to:\\n\\n- ffmpeg for being such a powerful media tool that we use on PC and Switch.\\n- SwitchBrew for libNX and its ffmpeg inclusion\\n- Atmosph\u00e8re for being such a great Switch CFW\\n- Captura for showing us how to capture frame input with Windows Duplication API\\n- simontime for his switch-usb-screen-stream-sharp project for Windows\\n- ScpDriverInterface for the Xbox drivers on Windows", 
            "app_dls": 17088, 
            "md5": "f5d63d0667f5855565afccbee63bf6a2"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/pnes/pnes.nro", 
            "updated": "12/09/2023", 
            "name": "pNES", 
            "license": "n/a", 
            "title": "pNES", 
            "url": "https://github.com/Cpasjuste/pemu/releases", 
            "description": "Portable NES Emulator", 
            "author": "Cpasjuste", 
            "changelog": "6.7.1\\n\\ncommon: cleanup media loading code\\ncommon: add unknown files even if it doesn't exist in gamelist.xml\\ncommon: change menus items position\\ncommon: fix games paths starting with ./\\ncommon: fix medias paths with recalbox gamelist.xml format\\ncommon: add ability to use custom gamelist.xml file in roms folders, overriding embedded (romfs) gamelist.xml\\ncommon: add SHOW_AVAILABLE menu option to hide missing files/roms/systems from gamelist (restart required)\\npnes: bump nestopia to 1.52.0\\npnes: fix data paths (nestopia saves, etc...)\\n\\n6.6\\n\\ncommon: fix adding favorites in some cases\\ncommon: revert roms paths to default if not available\\npnes: should fix zip loading\\n\\n6.5\\n\\npgen: fix hidden roms when file extension len is 2 (switch/vita/ps4)\\nvita: fix fps counter\\npgen: fix sram loading\\ncommon: disable config overwrite by default\\ninput: fix inputs not always cleared before processing\\npgen: fix emulation for roms size > 8MB\\npnes: remove load_archive hacks (use libarchive)\\npnes: use 0ldsk00l repo\\nlinux: hopefully fix missing shared libaries\\n\\n6.4\\n\\npgen: check for missing mega-cd bios on loading\\npgen: save per game mega-cd backup ram\\npgen: fix state saving (vita)\\npgen: fix scd_bram_cart.brm size\\npgen: add sram saving support\\npsnes: remove deprecated high res option\\npsnes: add AUDIO_SYNC option (on: perfect audio, off: minor audio stuttering in favor of fps)\\nvita: add more optimisations flags (improve fps)\\nvita: add WAIT_RENDERING option (improve fps but not working with effects)\\ncommon: fix wrong keys assignment in help bar (hopefully)\\ncommon: improve audio handling\\n\\n5.2\\n\\ncommon: fix audio sync (50hz roms in psnes/pnes and a few games like seiken densetsu 3)\\ncommon(skins): make menu text outline bigger\\ncommon(skins): fix fonts vertical positions\\ncommon: fix font padding and outline position\\ncommon: update gamelists (move to emulationstation format, lower memory usage)\\npfbneo: fix some games detected as clones (X-Men - Konami, ...)\\nswitch (pnes/psnes): update romlist help texture\\nswitch: fix single joycon mode for new c2d input (thanks R-YaTian)\\nlinux: add buttons gfx, enable some joystick buttons (wip)\\ncommon: general improvements to enhance the user's experience...\\n\\n5.1\\n\\npnes: update gamelist.xml\\npnes: fix paths (for NstDatabase.xml, etc...)\\npnes: always force audio sync\\npnes: use romfs for NstDatabase.xml\\npnes: update nestopia to latest git revision (c103378)\\npnes: fix states menu\\npnes (ps4): fix datadir\\npnes/psnes: disable auto aspect ratio scaling mode\\npnes/psnes: improve scaling\\n\\n5.0\\n\\nfbneo: bump core to git rev e44cd75\\nfbneo: add system switch with fire buttons 5-6 (L/R)\\ninput: add menu1 and menu2 keys config option\\nupdate all databases\\nadd crt-geom-flat (for selected systems)\\nadd ps4 support\\nmany changes...\\n\\n4.4\\n\\npnes: update for latest pemu changes\\npfbn: add nes console support\\npfbn: update fbneo core to commit 89f2b6d\\nall: add \"big_preview\" skin\\nall: romlist: fix lower/upper cases sorting\\nall: romlist: don't filter on file extension, show any files in roms folder\\nall: load previews from default folders even if the game do not exist in database (\"media/mixrbv2/.png\", \"media/video/.mp4\")\\nall: add \"no preview\" image when no preview found\\nall: add a few effects to preview images/videos\\nall: further improvements to overall system stability and other minor adjustments have been made to enhance the user experience\\n\\n3.4\\n\\nfix uppercase roms not detected\\n\\n3.1\\n\\nskins: use zipped skins (put zipped skins in \"skins\" directory)\\nskins: add skin selection to main options menu\\nskins: change \"skin\" path to \"skins\"\\nskins: change \"ROM_ITEM\" name/type to \"TEXT\"\\nskins: add \"color_missing\", \"color_not_working\" and \"highlight_use_text_color\" options to \"ROM_LIST > TEXT\" skin config\\noptions menu: set states options menu at the first place, for easier in game access\\nstates menu: fix bug to return to main menu with back button\\nstates: allow loading a rom with it's state from the main rom menu\\nstates menu: add tween position for a better effect\\nswitch: input: use joystick click/press for either start (left joycon) or select (right joycon) on single joycon mode", 
            "screens": 0, 
            "extracted": 42045, 
            "version": "6.7.1", 
            "filesize": 15312, 
            "details": "Here is pNES, a NES emulator for the Nintendo Switch!\\npNES is based on the excellent Nestopia emulator!\\n\\nCapabilities\\n\\nSupport save states\\nSupport 2x, 3x, fit, fit 4/3 and fullscreen hardware scaling\\nSupport hardware filtering (shaders)\\nSupport titles, previews, and icons images (png), named as the rom name with png extension instead zip/sfc, in their respective directory (to be created if needed).\\nInstallation (roms)\\n\\ncopy roms to \"/switch/pnes/roms/\" directory on sdcard\\n\\nUsage\\n\\nPress (+) in the rom list to configure main options and default roms options\\nPress (-) in the rom list to configure per rom options\\nPress (+) AND (-) when in emulation to bring the options menu\\n\\nThanks\\n\\nScHlAuChi\\ndevkitPro and libnx people: yellows8, plutoo, profi200, WntrMute ....\\nScHlAuChi again :)", 
            "app_dls": 25846, 
            "md5": "0b61fa6b30a0f0777b1d734c4d758065"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/Fake-08/FAKE-08.nro", 
            "updated": "07/04/2024", 
            "name": "Fake-08", 
            "license": "MIT", 
            "title": "Fake-08", 
            "url": "https://github.com/jtothebell/fake-08/releases", 
            "description": "A Pico-8 player/emulator for consoles.", 
            "author": "jtothebell", 
            "changelog": "0.0.2.20\\n\\nAll Platforms\\n\\nAdd support for new stat values (46-56) for audio (thanks @fringd )\\nRewrite text rendering to support custom fonts and most remaining P8SCII control codes (audio control codes are parsed, but not played) and speed up text rendering (probably only noticeable on slow platforms like Bittboy and 3ds)\\nAdd a corssfade between notes to more closely match PICO-8 behavior and fix some audio clipping (thanks @fringd )\\nAdd custom instrument support (thanks @fringd )\\nadd inext function to z8lua", 
            "screens": 0, 
            "extracted": 7938, 
            "version": "0.0.2.20", 
            "filesize": 3000, 
            "details": "A Pico 8 player for homebrew consoles. Not related to or supported by Lexaloffle Software. Latest release includes releases for Nintendo 3DS, Nintendo Switch, Sony PS Vita, Nintendo Wii U, the Miyoo CFW for bittboy and similar consoles, and the Miyoo Mini.\\n\\nThe goal of Fake-08 is to make Pico-8 games playable on platforms that aren't officially supported. As such, I will only be providing builds for platforms that won't run Pico-8 proper.", 
            "app_dls": 423, 
            "md5": "ea087a1e5adee26e3253bcc8a4513881"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/CuteManga/CuteManga.nro", 
            "updated": "31/12/2021", 
            "name": "CuteManga", 
            "license": "GPLv3", 
            "title": "CuteManga", 
            "url": "https://github.com/darkxex/CuteManga/releases", 
            "description": "manga and comic reader", 
            "author": "darkxex", 
            "changelog": "1.0.4\\n\\nSimple fix for sort folders.\\nThis update has not been tested on the console, but in theory you should sort the folders alphabetically.\\n\\n1.0.3\\n\\nSimple fix for sort pages. \\ntemporal fix?\\n\\n1.0.2\\n\\nupdated to Atmosphere 13", 
            "screens": 0, 
            "extracted": 8799, 
            "version": "1.0.4", 
            "filesize": 3517, 
            "details": "manga and comic reader for Nintendo Switch.\\n\\nHow use\\n\\nCreate a folder in the root SD memory named \"CuteManga\" and put your \"Manga / Comic / Webtoon\" inside, if the folder has Latin characters (example: \u00f1, \u00e1, \u00ed) remove them first.", 
            "app_dls": 10480, 
            "md5": "9030e507979b87b98c7e2fa80f3415a3"
        }, 
        {
            "category": "game", 
            "binary": "/switch/2048.nro", 
            "updated": "21/12/2024", 
            "name": "2048", 
            "license": "MIT", 
            "title": "2048", 
            "url": "https://github.com/TooTallNate/switch-2048", 
            "description": "Port of the game 2048", 
            "author": "TooTallNate", 
            "changelog": "1.1.0\\n\\nThis version adds joystick control. Thank you @i0x0!\\n\\n1.0.0\\n\\nPackage updated to use TooTallNate's port.", 
            "screens": 0, 
            "extracted": 7034, 
            "version": "1.1.0", 
            "filesize": 2922, 
            "details": "This is a port of the original 2048 game (by Gabriele Cirulli) to Nintendo Switch using nx.js.\\n\\nThe core game logic was able to be used unmodified. The main component of this port is a Canvas-based rendering engine instead of the original DOM-based renderer.", 
            "app_dls": 5562, 
            "md5": "6a6c8f084d828121408522e6023e6afc"
        }, 
        {
            "category": "game", 
            "binary": "/switch/redalert/vanillatd.nro", 
            "updated": "14/01/2021", 
            "name": "Vanilla-Conquer", 
            "license": "GPLv3", 
            "title": "Vanilla-Conquer", 
            "url": "https://github.com/capsterx-switch/Vanilla-Conquer/releases", 
            "description": "Vanilla Conquer for switch", 
            "author": "capsterx-switch", 
            "changelog": "0-r6\\n\\nThis removes a huge vtable hack to replace cnc save/load games with a similar (hack) as redalert uses\\n\\nvcnc-redalert-v0-r4\\n\\n switch-utils so that scancode works for text input and so mouse events can be set\\na hack that somewhat seems to make saving not crash but there is likely\\na bug somewhere\\nMake it so each game can have it's own keymap\\nForce game to use a menu even if the intro is skipped\\nchanged default keymap so ZL=left mouse ZR=right mouse\\n\\nv0-r3\\n\\nUpdate switch-utils so that scancode works for text input and so mouse events can be set\\na hack that somewhat seems to make saving not crash but there is likely\\na bug somewhere\\nMake it so each game can have it's own keymap\\nForce game to use a menu even if the intro is skipped\\nchanged default keymap so ZL=left mouse ZR=right mouse\\n\\nv0-r2\\n\\nAdding support for redalert\\n\\nIt will look for files in:\\nsdmc:/switch/redalert/CD1/\\nsdmc:/switch/redalert/CD2/\\nsdmc:/switch/redalert/CD3/\\nsdmc:/switch/redalert/CD4/\\nsdmc:/switch/redalert/RADVD\\n\\nFor this to work the \"CD\" directory needs a file called \"CD_LABEL\" with the text of CD1, CD2, ... indicating the CD\\n\\nv0-r1\\n\\nInitial release\\n\\nTo install the game you need to unzip the release onto your sdcard. You will also need the original files from the CD. These are the ones I have\\nAUD.MIX CCLOCAL.MIX CONQUER.MIX DESEICNH.MIX DESERT.MIX GENERAL.MIX LOCAL.MIX MOVIES.MIX SCORES.MIX SOUNDS.MIX SPEECH.MIX TEMPERAT.MIX TEMPICNH.MIX TRANSIT.MIX UPDATE.MIX UPDATEC.MIX WINTER.MIX WINTICNH.MIX\\nthey are in the directory /switch/cnc/\\n\\nThere is a default keymapping in /switch/cnc/keymap.keys I have them currrently set to\\nTOUCH_MOUSE=TRUE\\n\\nDOUBLE_TOUCK_KEYBOARD=TRUE\\nRSTICK_MOUSE=TRUE\\nDPAD_ARROWS=TRUE\\nLSTICK_ARROWS=TRUE\\nMINUS=ESC\\nPLUS=ENTER\\nA=SPACE\\n\\nFor information on how the file format works, look at\\nhttps://github.com/capsterx-switch/switch-utils", 
            "screens": 0, 
            "extracted": 26733, 
            "version": "0-r6", 
            "filesize": 10284, 
            "details": "No extras. No bloat. No major changes. Just the games on your favourite platform.\\n\\nThis project aims to be a clean portable upstream for anyone wanting to mod the Remastered Collection or add features to the original standalone games.\\n\\nCurrent project goals are tracked as GitHub issues with the goal label.\\n\\nAll contributions towards project goals are welcome. Please use GitHub issues in advance to make sure your work will be accepted. If you are suggesting a new feature please bear in mind that we do not plan on adding gameplay changes. Work that do not fit the project will be recommended to be developed as a downstream project.\\n\\nDevelopers hang around The Assembly Armada Discord server if you feel like chatting.\\n\\n", 
            "app_dls": 343, 
            "md5": "a644f102bd9b51944f5a72030d2922c9"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/LaiNes/LaiNes.nro", 
            "updated": "26/07/2018", 
            "name": "laines", 
            "license": "BSD-2-Clause", 
            "title": "LaiNES", 
            "url": "https://github.com/Kevoot/LaiNESwitch", 
            "description": "NES Emulator for Nintendo Switch", 
            "author": "Kevoot", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2804, 
            "version": "1.4", 
            "filesize": 1502, 
            "details": "Original by AndreaOrru Port by Kevoot\\nCompact, cycle-accurate NES emulator in ~1000 lines of C++.\\n\\nThe emulator comes bundled with a simple GUI to navigate the filesystem and set preferences. Use DPAD and 'A' to operate it. 'R' toggles between emulation and menu.", 
            "app_dls": 20748, 
            "md5": "10a56270abd4d29241ec26d0116f1350"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/SkyMM-NX/SkyMM-NX.nro", 
            "updated": "03/07/2020", 
            "name": "SkyMM-NX", 
            "license": "MIT", 
            "title": "SkyMM-NX", 
            "url": "https://github.com/caseif/SkyMM-NX/releases", 
            "description": "Simple mod manager for Skyrim", 
            "author": "caseif", 
            "changelog": "1.1.2\\n\\nSkyMM-NX v1.2 fixes issues with the Atmosphere version check, and fixes compilation against newer libnx versions.\\n\\n1.1.1\\n\\nSkyMM-NX v1.1.1 amends the path detection to check the Exosphere version rather than the Horizon version. This fixes functionality on older Horizon firmwares using Atmosphere 0.10.x.\\n\\n1.1.0\\n\\nSkyMM-NX 1.1.0 adds support for Atmosphere 0.10.x, and now uses the new RomFS path when firmware 9.1.0+ is detected.\\n\\nAdditionally, this release implements persistent scrolling. The menu selection will now scroll automatically when a directional input is held.", 
            "screens": 0, 
            "extracted": 1276, 
            "version": "1.1.2", 
            "filesize": 362, 
            "details": "SkyMM-NX is a simple mod manager that runs on your Switch and provides an easy way to toggle mods on and off.\\n\\nSkyMM will attempt to discover all mods present in Skyrim's ROMFS on the SD card and present them through its interface. Through the interface, you can toggle mods on or off, or change the load order by holding Y. Note that the load order for pure replacement mods (lacking an ESP) will not be preserved when the respective mods are disabled.\\n\\nWhen the save function is invoked, the INI and Plugins files will be modified accordingly and saved to the SD card.\\n\\nCurrently, the app requires that all mods follow a standard naming scheme:\\n\\nBSA files with a suffix must use a hyphen with one space on either side between the base name and the suffix\\nExample: Static Mesh Improvement Mod - Textures.bsa\\nNote that a mod may have exactly one non-suffixed BSA file\\nBSA files with an associated ESP file must match the ESP's name, not including the suffix\\nExample: Static Mesh Improvement Mod - Textures.bsa matches Static Mesh Improvement Mod.esp\\nAll BSA files for a given mod must match each other in name\\nExample: Static Mesh Improvement Mod - Textures.bsa matches Static Mesh Improvement Mod - Meshes.bsa", 
            "app_dls": 5997, 
            "md5": "bc79ad3f40dcac8d82659c2110ea2d34"
        }, 
        {
            "category": "game", 
            "binary": "/switch/jumpnbump/jumpnbump.nro", 
            "updated": "12/06/2021", 
            "name": "jumpnbump", 
            "license": "n/a", 
            "title": "Jump n Bump", 
            "url": "https://github.com/rsn8887/jumpnbump/", 
            "description": "A simple but addictive multiplayer game", 
            "author": "rsn8887", 
            "changelog": "1.02\\n\\nRe-compile with 12.0.0 support\\n\\n1.01 \\n\\nRe-compile with 9.0.0 support\\n\\n1.00\\n\\nInitial Release", 
            "screens": 0, 
            "extracted": 8274, 
            "version": "1.02", 
            "filesize": 3381, 
            "details": "Switch port of the classic multiplayer-only MS-DOS game Jump'n'Bump by Brainchild Design, based on the SDL2 port by Felix Haedicke.\\n\\nJump'n'Bump is a simple but addictive multiplayer game. The goal is to stomp as many other rabbits as possible to win the game.\\n\\nThanks to my supporters on Patreon: Andyways, CountDuckula, Greg Gibson, Jesse Harlin, \u00d6zg\u00fcr Karter, Matthew Machnee, and RadicalR.\\n\\nThanks to the many developers of the game, such as Mattias Brynervall, Andreas Brynervall, Anders Nilsson, and many more.\\n\\nThanks to Felix Haedicke for porting the game to SDL2 and Cmake.\\n\\nControls\\n\\nLeft analog stick / Dpad = move the character, up to four controllers are supported\\nB / Y / A / X = Jump\\nPlus/Minus/Select/Start = ESC (restart game/advance through statistic screens)\\nR (on controller 1) = toggle aspect ratio between original (default), 4:3, and 16:9\\nL (on controller 1) = toggle split Joycon mode on/off (Switch only)\\n\\nPhysical keyboard controls via Bluetooth (Vita) and USB (Switch):\\nCursor keys = white rabbit move and jump\\na d w = yellow rabbit move and jump\\ni j l = gray rabbit move and jump\\nKeypad 4 / 8 / 6 = brown rabbit move and jump", 
            "app_dls": 1124, 
            "md5": "c9044286db12847a89e830837a0dcadb"
        }, 
        {
            "category": "_misc", 
            "binary": "/switch/sdl-hello.nro", 
            "updated": "22/06/2019", 
            "name": "test-pkg", 
            "license": "none", 
            "title": "Test", 
            "url": "n/a", 
            "description": "Test package", 
            "author": "Fortheusers", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 2048, 
            "version": "1.0", 
            "filesize": 739, 
            "details": "Dont mind me, I am just a test package", 
            "app_dls": 125, 
            "md5": "6312ff4401e509293e6c058d41221750"
        }, 
        {
            "category": "tool", 
            "binary": "none", 
            "updated": "02/11/2024", 
            "name": "LANHelperTesla", 
            "license": "GPLv2", 
            "title": "LANHelper (Tesla)", 
            "url": "https://github.com/matthew-5pl/LANHelper-Tesla", 
            "description": "LAN Play IP Generator for CFW users", 
            "author": "matte_f", 
            "changelog": "1.1.0\\n\\nThis release adds support for XLink Kai IP generation! It basically automates this process.\\nFixed a bug where pressing B on the main screen wouldn't close the overlay.", 
            "screens": 0, 
            "extracted": 1173, 
            "version": "1.1.0", 
            "filesize": 435, 
            "details": "A Tesla Overlay that lets you quickly generate and set valid and unique IP addresses for Switch LAN Play!\\nOnce you're done playing, you can also use LANHelper to quickly reset your IP address to be automatically assigned with DHCP.\\nBased on experience, using this overlay is much faster than opening Settings and changing the addresses from there.", 
            "app_dls": 371, 
            "md5": "7baade6cc61f23bd1128485ef96b1b29"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Arkanoid_NX/Arkanoid_NX.nro", 
            "updated": "30/12/2018", 
            "name": "ArkanoidNX", 
            "license": "GPLv3", 
            "title": "Arkanoid NX", 
            "url": "https://github.com/Manurocker95/ArkanoidNX/releases", 
            "description": "Arkanoid", 
            "author": "Manurocker95", 
            "changelog": "v1.0\\n\\nFirst Release", 
            "screens": 0, 
            "extracted": 27053, 
            "version": "1.0", 
            "filesize": 19846, 
            "details": "Arkanoid port for the nintendo switch.\\n\\nSplash screen, title screen and game screen\\nMusic and SFX\\nMusic and Images rendered with SDL2\\nSettings and game data saved in a JSON in switch/manurocker95/ArkanoidNX/data.sav\\nMultilanguage support (just Spanish and English for now)\\nResources loaded from RomFS", 
            "app_dls": 1829, 
            "md5": "3da4425063cabff97363e8b32fc4b96d"
        }, 
        {
            "category": "game", 
            "binary": "/switch/eldritch/eldritch.nro", 
            "updated": "30/03/2020", 
            "name": "Eldritch", 
            "license": "n/a", 
            "title": "Eldritch", 
            "url": "https://github.com/rohit-n/eldritch-reanimated/releases", 
            "description": "Eldritch Engine", 
            "author": "rohit-n", 
            "changelog": "n/a", 
            "screens": 4, 
            "extracted": 13696, 
            "version": "0.0.1", 
            "filesize": 7229, 
            "details": "This is an early port of Eldritch to the Nintendo Switch. You need the data files (eldritch-audio.cpk, eldritch-base.cpk, eldritch-meshes.cpk, eldritch-textures.cpk, and eldritch-world.cpk) from the Reanimated release (not the 2013 release) and to place them in the same folder as eldritch.nro. Then, place the folder in the \"switch\" folder in the root of your SD card.\\n\\n\\nThis distribution does not include most of the game's content, but configuration, script, and room files are included and are licensed the same as the source code. (All game content not included here is not covered by these license terms and may not be redistributed.)\\n\\n\\nThe game's .cpk files (not included here; you must purchase a copy of Eldritch to get them) can be unpacked with the FilePacker.exe tool. Deleting, renaming, or moving the .cpk files will force the game to load from loose files instead.", 
            "app_dls": 433, 
            "md5": "12d5cd0e64688d99d9b0c371906d1942"
        }, 
        {
            "category": "game", 
            "binary": "/switch/nzportable/nzportable.nro", 
            "updated": "05/02/2024", 
            "name": "NaziZombiesPortable", 
            "license": "GPLv3", 
            "title": "Nazi Zombies: Portable", 
            "url": "https://github.com/nzp-team/nzportable/", 
            "description": "Call of Duty: Zombies de-make, in Quake.", 
            "author": "NZ:P Team", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 88319, 
            "version": "nightly", 
            "filesize": 50690, 
            "details": "A Work-in-Progress Quake \"demake\" of the Zombies mode from Call of Duty.\\n\\nThe game itself is mostly feature-equivalent with Call of Duty: World at War on a generic level. Gameplay components are implemented, with some parity differences, but most World at War maps and their gimmicks are not yet represented. Various small features from Call of Duty: Black Ops are present, but not on as wide of a scale as compared to World at War. Bundled with a lot of Custom Maps created by community members.\\n\\nThe Nintendo Switch version is powered by Quakespasm-NX, a port of Quakespasm done by fgsfdsfgs.", 
            "app_dls": 8378, 
            "md5": "25d5bdda7c068c8f43c6808a2d58782a"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/scummvm/scummvm.nro", 
            "updated": "08/04/2024", 
            "name": "scummvm", 
            "license": "GPLv3", 
            "title": "ScummVM", 
            "url": "https://github.com/scummvm/scummvm/releases", 
            "description": "Point and Click Adventures.", 
            "author": "scummvm", 
            "changelog": "2.8.1\\n\\nThe ScummVM Team is proud to announce the first release of 2024 - Oh MMy!\\n\\nGeneral:\\nFixed GLSL version parsing on some OpenGL ES2 platforms.\\nDon't try to use shaders on old OpenGL implementations.\\nAGI:\\nFixed Space Quest 1 version 1.0X freezing in the skimmer.\\nFixed Mixed-Up Mother Goose message boxes during nursery rhymes.\\nFixed Mixed-Up Mother Goose graphics in Amiga version.\\nFixed Gold Rush clock time at Fast and Fastest speeds.\\nFixed Atari ST version of Manhunter 1 not starting.\\nFixed Tandy CoCo3 version of Leisure Suit Larry 1 not starting.\\nFixed Tandy CoCo3 unofficial ports not starting.\\nFixed Amiga menus in Space Quest 1, Manhunter 1, and Manhunter 2.\\nFixed Graham facing away from the king in King's Quest 1.\\nFixed Alexander getting stuck on the stairs in King's Quest 3.\\nFixed Larry being able to shoplift in Leisure Suit Larry 1.\\nFixed ducks not jumping at the start of Donald Duck's Playground.\\nFixed instant death in fan game \"Phil's Quest: The Search for Tolbaga\".\\nFixed buttons freezing in fan game \"DG: The AGIMouse Adventure\".\\nFixed unrecognized words in fan game \"V - The Graphical Adventure\".\\nAdded detection for Macintosh version of Mixed-Up Mother Goose.\\nAGS:\\nUpdated detection tables.\\nSimplified character import from Sierra games for QfG2 AGDI.\\nFixed graphical glitch affecting Unavowed and Heroine's Quest.\\nFixed partial outlines for some letters in Kathy Rain.\\nFixed crash in Alum.\\nAdded stub to prevent crash at the beginning of Falcon City.\\nBroken Sword 2:\\nFixed crash when quitting the game while it was paused.\\nMM:\\nEnabled engine, allowing MM1 and Xeen to be compiled.\\nAdded MT32/LAPC-1 support for Xeen engine.\\nFixed Xeen regression which caused some sound effects to stop abruptly.\\nmTropolis:\\nFixed crash in Muppet Treasure Island on some platforms.\\nFixed jewel puzzle in Muppet Treasure Island not being randomized.\\nNANCY:\\nFixed the telephone hints in Secrets Can Kill.\\nFixed the crashing and drawing issues on ARM machines when playing\\nMessage in a Haunted Mansion's maze minigame.\\nFixed the 'M' keyboard key not working in Message in a Haunted Mansion.\\nAllowed general keymaps to be shown in the engine Keymaps menu.\\nVirtual keyboard now correctly triggers on/off wherever text input is needed.\\nSCUMM:\\nFix screen corruption (and sometimes even crashes) in Mac Loom and\\nIndiana Jones and the Last Crusade, most noticeably when using menu\\nshortcut keys.\\nFix enabling/disabling of Open and Save in Mac Indiana Jones and the Last\\nCrusade.\\nTWINE:\\nFix ladder climbing regression.\\nFix scenery zoom issue.\\nFix animation glitches after using the holomap.\\nUltima:\\nFix Ultima VIII hidden minimap blocking keyring use.\\nFix Ultima VIII page breaks in books.\\nFix Ultima VIII text centering for plaques.\\nFix Ultima VIII crash on dragging items to screen edge.\\nFix Ultima VIII unexpected jumping on left click.\\nFix Ultima VIII camera during cutscenes for Shrine of the Ancient Ones.\\nFix Ultima VIII invalid placement of items within containers.\\nFix Ultima VIII never-ending lava sounds.\\nV-Cruise:\\nFixed crash in Reah: Face the Unknown and Schizm: Mysterious Journey\\nwhen music is muted.\\n\\n2.8.0\\n\\nThe ScummVM Team is proud to announce the final release of 2023 - Mysteries, Mammoths, and Muppets!\\n\\nNew games:\\nAdded support for macOS versions of Syberia and Syberia II.\\nAdded support for The Vampire Diaries, Nancy Drew: Secrets Can Kill,\\nNancy Drew: Stay Tuned for Danger, Nancy Drew: Message in a Haunted Mansion,\\nNancy Drew: Treasure in the Royal Tower and Nancy Drew: The Final Scene.\\nAdded support for Reah: Face the Unknown and Schizm: Mysterious Journey.\\nAdded support for Might and Magic Book One.\\nAdded support for Muppet Treasure Island.\\nAdded support for Primordia, Shardlight and Technobabylon.\\nAdded support for The Excavation of Hob's Barrow, Strangeland and Whispers\\nof a Machine.\\nAdded support for Stranga and Cloak and Dagger's AGS games.\\nAdded support for Adibou 1.\\nAdded support for Dark Side.\\nAdded support for Kingdom: The Far Reaches.\\nAdded support for Escape From Hell.\\nAdded support for Wrath of the Gods, Gadget: Invention, Travel and Adventure,\\nThe Dark Eye, and 4 other Director titles.\\nNew platforms:\\nAdded libretro new shiny port.\\nAdded Atari port.\\nGeneral:\\nAdded optional dependency for libvpx.\\nAdded optional dependency for libmikmod.\\nAdded support for PC98 font ROM.\\nAdded optional dependency for libsonivox, implementing EAS (Embedded Audio\\nSynthesis) sound driver.\\nAdded YUV422 and YUV444 support to Theora decoder.\\nImplemented specialized CPU routines for graphics blitting for ManagedSurface.\\nChanged default GM device to \"auto\" for better compatibility.\\nAGS:\\nSynced with upstream AGS 3.6.0.53.\\nSped up graphics manipulation on modern hardware with CPU-specific code.\\nAdded support for early font rendering, to match the original interpreter.\\nAdded support for playback of transcoded videos in place of unsupported codecs.\\nCompleted implementation of MOD audio playback.\\nFixed background music not looping in some games.\\nFixed game-breaking bugs in various games (e.g. Strangeland, Chronicle of Innsmouth)\\nMultiple updates to the game detection tables.\\nAsylum:\\nAdded support for Chinese Sanitarium.\\nDragons:\\nImplemented localizations for the copyright screen and main menu.\\nFreescape:\\nImproved collision and projectile detection using sweepAABB\\nGrimE:\\nAdded support for Chinese Grim Fandango.\\nAdded support for Russian Grim Fandango translations from Fargus,\\nENPY and 7Wolf.\\nKyra:\\nAdded support for Kyra1 Amiga French release and DOS Czech fan translation.\\nImproved game controls menu accuracy for all platforms.\\nAdded support for Chinese EOB2.\\nAdded support for the PC-98 version of EOB2.\\nMohawk:\\nGreatly improved the accurary of the code generation for the Domes in\\nRiven: The Sequel to Myst to match the original game.\\nPrivate:\\nAdded support for the Japanese Windows release.\\nSCUMM:\\nAdded support for unpacked RuSCUMM patches for Russian localizations.\\nAllow usage of the official Monkey Island 1 Roland MT-32 patch with any\\nEGA version, not just the English release.\\nCompletely rewritten sound code for all Humongous Entertainment games.\\nFaithfully implemented Mac GUI for Indiana Jones and the Last Crusade,\\nand Loom.\\nImplemented turning around animation when changing direction for Full\\nThrottle, The Dig and The Curse of Monkey Island.\\nAdded enhancement to Loom: Ctrl+D shows up list of drafts that has been\\ndiscovered.\\nFixed kanji characters rendering issue in Japanese SegaCD version of Monkey\\nIsland 1. Text rendering for this game is now pixel perfect.\\nImplemented complete support for the Macintosh and DOS/V Japanese versions\\nof Indiana Jones and the Fate of Atlantis distributed by MicroMouse.\\nImplemented network multiplayer support for Backyard Football,\\nBackyard Baseball 2001, and Backyard Football 2002.\\nSherlock:\\nAdded support for Chinese Serrated Scalpel.\\nAdded data to savegames whose lack could make savegames unwinnable.\\nSword1:\\nRewrote the palette fading system and the game timers to match the\\noriginal DOS version.\\nRewrote all the menu code to make it match the original. This includes\\nthe restoration of the Speed setting.\\nRestored the correct fonts and menu texts for all Russian versions of the game.\\nRewrote the audio engine to match the original. Compressed files are\\nstill supported.\\nTweaked the subtitles routine for the PSX version to match the original.\\nRestored George's idle animation.\\nRestored pause functionality: press \"P\"!\\nRestored debug commands: CTRL-G for toggling on-screen walkable grids,\\nCTRL-T for displaying debug information, SHIFT-M for displaying crosshairs\\nfor the mouse cursor and George's position, and keys 1 and 4 to toggle\\nrespectively slow and fast frame pacing mode.\\nRestored the correct font for the game over screen.\\nFixed other various small inaccuracies.\\nOverall the PC version of the game on ScummVM shouldn't differ\\nfrom the original executable anymore.\\nImplemented credits for the PSX version.\\nSword2:\\nAdded support for Chinese translation.\\nTinsel:\\nFix running out of soundreels error.\\nTwinE:\\nAdded support for Japanese translation.\\nUltima:\\nImprove Ultima VI responsiveness.\\nFix crash loading Ultima VI savegames when dialogs are open.\\nFix ordering of generated items in Ultima VI.\\nFix auto-readying throwing weapons in Ultima VI.\\nFix Ultima VI crash opening new-style spellbook gump.\\nFix Ultima VI actor doll and gump colors.\\nFix Ultima VI crash using look action on walls.\\nFix several other miscellaneous crashes.\\nFix spawners and projectiles to more closely match the original.\\nImproved Ultima VI AdLib support and added Roland MT-32 support.\\nFix multiple Ultima VIII render order issues.\\nAdd support for Ultima VIII Spanish fan translation.\\nSupport Pentagram save game files.\\nAdded configurable double-click time for Ultima VIII.\\nVoyeur:\\nAdded support for German fan translation.\\nXeen:\\nRenamed 'xeen' engine to 'mm' for Might & Magic.\\nAdded custom engine option to replace the health gems with HP/SP bars.\\nRISC OS port:\\nDouble buffering is now used in full screen mode when V-sync is enabled.\\nAdded support for hardware palettes.\\n\\n2.7.1\\n\\nGeneral:\\n\\nFixed playback speed for Theora videos.\\nAdded scummvm.log file viewer.\\nExposed ScummVM debug level in the GUI (Misc tab).\\nFixed shader scaler loading failing in certain conditions.\\nFixed some screen shaking effects (as in DOTT) causing a crash on SDL1 ports.\\nAGI:\\n\\nRestored possibility to pick arbitrary render mode in Game Options.\\nAGS:\\n\\nMultiple additions to game detection tables.\\nFixed crashes in various games (commercial and freeware).\\nFixed graphical priority errors when using computers in Resonance, Kathy Rain and Blackwell Convergence.\\nFix for some sounds not playing in \"The Cat Lady\" and other games.\\nReintroduced thumbnail creation for all savegames.\\nFixed regression for translation setting not being saved.\\nFixed translation bug in Zniw Adventure (linux version).\\nFixed wrong walkspeed in old games (e.g. Apprentice).\\nAdded small workaround for purple texts appearing transparent.\\nMinor changes to debug/error messages and code style.\\nImproved display of text.\\nCRYOMNI3D:\\n\\nFixed files access preventing to finish Versailles.\\nFreescape:\\n\\nAdded OpenGL shaders renderer.\\nGames are loading original images from the data files.\\nRefactored and expanded detection tables for Driller and other unsupported games.\\nReimplemented object/player collisions to be more robust.\\nHDB:\\n\\nFixed bug with inability to pick up red envelope with keyboard.\\nHypno:\\n\\nSupport rendering Korean font for Wetlands.\\nPrivate:\\n\\nDropped 16bit engine requirement.\\nSAGA:\\n\\nFixed loading resources from the Amiga release of ITE.\\nFixed crash or misbehaviors when handling certain actor actions.\\nSAGA2:\\n\\nFixed crash when hovering over certain spells.\\nSCUMM:\\n\\nFixed music volume regression in Loom.\\nFixed a crash in Full Throttle when pressing 'A' in debug mode.\\nSilence the warning for missing music files in Monkey Island 1 Ultimate Talkie.\\nFixed glitched or invisible cursor in Sam & Max when saving and reloading from\\nthe classic menu.\\nFixed several savegame loading issues and crashes for early FM-Towns games.\\nFixed original GUI banners not disappearing properly in some edge cases.\\nSword1:\\n\\nAdded detection for Czech and Polish versions with DXA cutscenes.\\nAdded detection for alternative French and Italian versions.\\nAdded detection for Brazilian version published by TecToy.\\nSword2:\\n\\nAdded support for GOG.com version.\\nAdded detection for alternate Polish version.\\nTinsel:\\n\\nFixed reading older Discworld II savegames.\\nFixed unaligned accesses.\\nTony:\\n\\nFixed unaligned accesses.\\nTouche:\\n\\nAdded support for Russian translation by old-games.ru.\\niOS port:\\n\\nFix default theme selection on modern devices.\\nBetter support for autostart configurations.\\nmacOS port:\\n\\nBetter support for autostart configurations.\\nRISC OS port:\\n\\nFixed crash on RISC OS 5 with games that require lots of RAM.\\n\\n2.7.0\\n\\nNew games:\\n\\nAdded support for Soldier Boyz.\\nAdded support for C64 and ZX Spectrum versions of GLK Scott Adams\\nInteractive Fiction games.\\nAdded support for GLK Scott Adams adventures 1-12 in the TI99/4A format.\\nAdded support for Obsidian.\\nAdded support for Pink Panther: Passport to Peril.\\nAdded support for Pink Panther: Hokus Pokus Pink.\\nAdded support for Adibou 2 \"Environment\", \"Read/Count 4 & 5\" and \"Read/Count 6 & 7\".\\nAdded support for Driller/Space Station Oblivion (DOS/EGA/CGA, Amiga, AtariST, ZX Spectrum and Amstrad CPC versions).\\nAdded support for Halls of the Dead: Faery Tale Adventure II.\\nAdded support for Chop Suey, Eastern Mind, and 16 other Director 3 and Director 4 titles.\\n\\n2.6.1\\n\\nGeneral:\\n\\nVarious improvements to the icon-based grid view in the ScummVM launcher.\\nFixed possible graphics corruptions when using the OpenGL renderer.\\n\\n2.6.0\\n\\nNew games:\\nAdded support for Sanitarium.\\nAdded support for Hades Challenge.\\nAdded support for Marvel Comics Spider-Man: The Sinister Six.\\nAdded support for The 11th Hour.\\nAdded support for Clandestiny.\\nAdded support for Tender Loving Care (CD-ROM Editions).\\nAdded support for Uncle Henry's Playhouse.\\nAdded support for Wetlands.\\nAdded support for Chewy: Esc from F5.\\n\\nGeneral:\\nThe project license has been upgraded to GPLv3+.\\nNow ScummVM requires C++11 for building.\\nRemoved support for VS2008, as it doesn't support C++11.\\nImplemented enhanced filtering in the Search box. See \"Understanding\\nthe search box\" in the documentation for details.\\nImplemented Icon view in GUI (GSoC task).\\nAdded support for the RetroWave OPL3 sound card.\\nAdded OpenDingux beta port.\\nRemoved Symbian port.\\nAdded the create_engine tool to aid when creating new engines.\\nFixed mouse capture in HiDPI mode.\\nThe GUI Options dialog now marks settings overridden via command lines in red.\\nIn GUI launcher it is now possible to group games by different categories.\\nGUI launcher has new game icons grid look.\\n\\n2.5.1\\n\\nGeneral:\\n- Ported ResidualVM GUI theme to remastered version.\\n- Fixed edge case for Punycode.\\n- Fixed checking for savegame overwrite in autosave slot.\\n- Fixed moving savegame to new slot for most engines.\\n- Scalers are now supported with the OpenGL graphics mode.\\n\\nAGOS:\\n- Fixed old Waxworks AdLib music regression.\\n\\nAGS:\\n- Detection list updates.\\n\\nGrim:\\n- Fixed default \"Talk Speed\" option value.\\n- Fixed black screen while entering save game name.\\n- OpenGL without shaders is preferred as default for Grim Fandango.\\n\\nKyra:\\n- Fixed graphical glitch in Legend of Kyrandia 3.\\n\\nSAGA:\\n- Fixed digitized music not looping in Inherit the Earth.\\n\\nSCUMM:\\n- Improved support for the high-resolution text in the 16-color Macintosh\\n- versions of Loom and Indiana Jones and the Last Crusade.\\n- Improved OPL3 sound emulation for Sam&Max.\\n- Fixed music not looping in The Dig.\\n- Fixed crash when loading savegames from Humongous Entertainment games.\\n\\nSherlock:\\n- Fixed crash using matches on lab table.\\n- Fixed character animation in Rose Tattoo.\\n- Fixed glitch opening map in Rose Tattoo.\\n- Fixed bell pull and fog horn sounds in Serrated Scalpel.\\n- Fixed inventory not updating in Serrated Scalpel after examining watch.\\n- Fixed fog overlay at Cleopatra's Needle in Rose Tattoo.\\n- Fixed graphic issues in Serrated Scalpel looking at items whilst inventory is open.\\n- Made Serrated Scalpel darts closer in speed to the original.\\n- Fixed crash when moving cursor past end of string in Rose Tattoo save dialog.\\n- Process pending key presses in the order they were made, not the most\\n- recent first.\\n- Fixed crash when using Delete key in Rose Tattoo save dialog.\\n- Fixed rare conversation bug in Serrated Scalpel that would happen when Lord\\n- Brumwell started talking to you while the inventory window was open.\\n- Resume animations in Serrated Scalpel after conversations. This fixes the\\n- bug where Jock Mahoney or Nobby Charleton would get stuck indefinitely,\\n- refusing to talk to you.\\n- Fixed various user interface glitches in both games.\\n\\nStark:\\n- Added OpenGL renderer (without shaders).\\n- Added TinyGL renderer.\\n- Fixed autosave handling.\\n\\nTwinE:\\n- Numerous bugfixes and stability improvements.\\n\\nXeen:\\n- Fixed crash on startup loading constants from xeen.ccs.\\n- Fixed spell selection aborting when characters were switched.\\n- Fixed some bad memory accesses.\\n- Various sound fixes.\\n- Fixed the monster item drop probabilities.\\n\\n2.5.0\\n\\n* Added support for Grim Fandango.\\n* Added support for The Longest Journey.\\n* Added support for Myst 3: Exile.\\n* Added support for Little Big Adventure.\\n* Added support for Red Comrades 1: Save the Galaxy.\\n* Added support for Red Comrades 2: For the Great Justice.\\n* Added support for Transylvania.\\n* Added support for Crimson Crown.\\n* Added support for OO-Topos.\\n* Added support for Glulx interactive fiction games.\\n* Added support for Lure of the Temptress Konami release.\\n* Added support for Private Eye.\\n* Added support for Spanish Blue Force.\\n* Added support for Spanish Ringworld.\\n* Added support for Spanish Amazon: Guardians of Eden.\\n* Added support for AGS Games versions 2.5+.\\n* Added support for Nightlong: Union City Conspiracy.\\n* Added support for The Journeyman Project 2: Buried in Time.\\n* Added support for Crusader: No Remorse.\\n* Added support for L-ZONE.\\n* Added support for Spaceship Warlock.\\n\\n2.2.0\\n\\n*  Autosaves are now supported for all the engines.\\n*  Errors are more likely to open the debugger, and be displayed, than just crash ScummVM.\\n*  Games are sorted in GUI ignoring the articles.\\n*  Now Hebrew is displayed correctly in GUI (requires FriBiDi library).\\n*  Updated the Roland MT-32 emulation code to Munt 2.4.0.\\n*  Added option to select the default voice for ports that support Text-to-Speech.\\n*  Added support for Discord Rich Presence integration on supported platforms (Windows Vista+, macOS 10.9+ 64 Bit)\\n*  Major improvements to the keymapper. \\n\\n2.1.0\\n\\nAppstore version changed from Cpajuste's fork to the official release.\\n\\n*  Improved GUI rendering and overall GUI performance.\\n*  Added stretch mode option to control how the display is stretched to the\\n    window or screen area.\\n*  Fixed incorrect cursor movement when it\u2019s controlled using the keyboard.\\n*  Updated the Roland MT-32 emulation code to Munt 2.3.0.\\n*  Improved unknown game variants reporting.\\n*  Enabled cloud support.\\n*  Added Text to Speech capabilities for better accessibility on some platforms.\\n\\n2.12-2\\n\\nfix crash in some games (sword1, ...)\\nfix audio in some games (mi3, ft...)\\nfix gpu crash on multiple launch (orange screen)", 
            "screens": 0, 
            "extracted": 177550, 
            "version": "2.8.1", 
            "filesize": 107753, 
            "details": "Here is a port of the excellent ScummVM engine to the switch.", 
            "app_dls": 24264, 
            "md5": "3a4dfbe7f1ac4d3d75d3054569c94696"
        }, 
        {
            "category": "game", 
            "binary": "/switch/PacManNX/PacManNX.nro", 
            "updated": "30/09/2019", 
            "name": "PacManNX", 
            "license": "GPLv2", 
            "title": "PacManNX", 
            "url": "https://github.com/KranKRival/PacManNX/releases", 
            "description": "PacMan Clone", 
            "author": "KranKRival", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 11675, 
            "version": "1.0.0", 
            "filesize": 5703, 
            "details": "A Clone of original PacMan For The Nintendo Switch made in C++ using SDL2", 
            "app_dls": 7227, 
            "md5": "3379c36802dffdcc05c61d17325ed4b8"
        }, 
        {
            "category": "game", 
            "binary": "/switch/TetrisNX/TetrisNX.nro", 
            "updated": "02/10/2019", 
            "name": "TetrisNX", 
            "license": "MIT", 
            "title": "TetrisNX", 
            "url": "https://github.com/KranKRival/TetrisNX/releases", 
            "description": "Tetris clone for the nintendo switch", 
            "author": "KranKRival", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 11998, 
            "version": "1.0.0", 
            "filesize": 6617, 
            "details": "Tetris clone made in C using SDL2 for the nintendo switch\\n\\nThis nintendo switch release slightly diffrent from the original source:\\n\\n1.Fixed broken sound / recode from scratch\\n2.Changed the screen aspects and some values to match the nintendo switch\\n3.Changed/Added some colors, it was way too colorless\\n4.Anhanced the controls and added held keys for full Tetris expirience\\n5.Some code changes and fixes\\n6.Removed usedless mouse on main screen and replaced with Keys\\n7.Also Added pause as there was none\\n8.Complete remove the wraped LOG\\n9.anyting else i have forgot about\\n\\nYo this 4 years old unfinished game is playble now :)", 
            "app_dls": 3272, 
            "md5": "082ce172d70b46f4bc31ca9c15e67f4d"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/RCMReboot/RCMReboot.nro", 
            "updated": "03/12/2018", 
            "name": "RCMReboot", 
            "license": "n/a", 
            "title": "RCMReboot", 
            "url": "https://gbatemp.net/download/rcmreboot.35294/", 
            "description": "Reboot into RCM", 
            "author": "hippydave", 
            "changelog": "v1.0f - Fixed release zip to get rid of hidden MacOS files. Actual files unchanged.\\nv1.0 - first version", 
            "screens": 0, 
            "extracted": 9784, 
            "version": "1.0f", 
            "filesize": 3825, 
            "details": "I do not condone using this app if your SD card is EXFAT formatted.\\nnatinusala & ctcaer pointed out that Atmosphere's method to reboot to RCM, and therefore the method used by this app, does not properly shutdown HOS so there is some unquantified risk of file corruption. Still use at your own risk on fat32, but just don't use it on exfat please.\\n\\nIntended for use on Switches that don't have AutoRCM installed.\\n\\nThis uses a new feature added to exosphere in Atmosphere 0.8.1, so it won't work in other CFWs unless they add it in a compatible way. Also Atmosphere 0.8.1 got a silent update with a bug fix to get this feature working, so if you already downloaded it before sometime on 1st Dec you might need to update it again (if it crashes with an orange screen instead of going to RCM, you need to update). There's a commit hash in the filename, make sure you have atmosphere-0.8.1-master-bd76e73 (or if you're living in the future, Atmosphere 0.8.2 or higher will be fine too). It sounds like it currently only works if you load Atmosphere using fusee-primary.bin, not if you use hekate to load Atmosphere as separate files (using hekate to load fusee-primary.bin is ok). This will likely be fixed when hekate is updated.\\n\\nThere are two versions included in the zip, each available as an .nro (put it in its folder inside the \"switch\" folder on the root of your sd card) and as an installable .nsp (install with the stupidly-named installer of your choice).\\n- RCMRebootInstant will reboot to RCM as soon as it loads.\\n- RCMReboot will give you a 5 second countdown with a chance to change your mind.\\n\\nThe reason RCMReboot is a much bigger file than the Instant version is that I used cpasjuste's cross2d library to put stuff on screen, mostly because I've been using it for the other project I'm working on and it saved me time. Sweet library, check it out.\\n\\nCredits to cpasjuste for the aforementioned cross2d, re.lax for nro2nsp (which uses hacbrewpack by the-4n), SciresM for Atmosphere, libnx, and for fixing the bugs in them I found while making this, and everyone else who worked on Atmosphere, libnx, devkitpro and all that good stuff.\\n\\nSource included for peace of mind, and in case of licence requirement. If I've got anything horribly wrong with licensing or credits just let me know. If you want to build it yourself you'll need libnx updated with the latest commit (which isn't in a release build at the time of writing), and to figure out the cross2d setup for the non-Instant version.", 
            "app_dls": 9063, 
            "md5": "9dd899444bdf8bf9fd6f9072ae774b58"
        }, 
        {
            "category": "emu", 
            "binary": "/switch/gambatte.nro", 
            "updated": "16/07/2018", 
            "name": "gambatte", 
            "license": "none listed", 
            "title": "Gambatte", 
            "url": "https://gbatemp.net/threads/retroarch-switch.492920/", 
            "description": "A GBC Retroarch Core", 
            "author": "Retroarch", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 3090, 
            "version": "beta 11_03_2018", 
            "filesize": 1088, 
            "details": "A very beta version of this core , games play from the SD card.\\nCurrent Issues\\nScreen settings\\nButton Config\\nAnalog input.", 
            "app_dls": 5949, 
            "md5": "0230d028b0cee2821841b4856759edda"
        }, 
        {
            "category": "game", 
            "binary": "/switch/100_Boxes_NX/100 Boxes NX.nro", 
            "updated": "01/02/2020", 
            "name": "100boxesNX", 
            "license": "MIT", 
            "title": "100 Boxes NX", 
            "url": "https://github.com/Cid2mizard/100_Boxes_NX/releases", 
            "description": "A simple yet challenging puzzle game.", 
            "author": "Cid2mizard", 
            "changelog": "1.1\\n\\nAdd music by Eric Matyas (www.soundimage.org).\\nUpdate with last sdl2.\\nClean code.\\n\\n1.0\\n\\nInitial Release", 
            "screens": 0, 
            "extracted": 10533, 
            "version": "1.1", 
            "filesize": 4571, 
            "details": "100 Boxes NX is a simple yet challenging puzzle game.\\n\\nGameplay: - Fill all the boxes of a 10x10 grid. If you move horizontally or vertically you must skip 2 boxes. If you move diagonally you must skip 1 box.\\n\\nControls : - Touch or D-pad + A : Discover Case - B : New Game - Plus : Exit\\n\\nOriginal game : - http://helmet.kafuka.org/", 
            "app_dls": 418, 
            "md5": "bbca286e0024be96b2762441d6d77cfb"
        }, 
        {
            "category": "concept", 
            "binary": "none", 
            "updated": "16/07/2018", 
            "name": "brewjsexamples", 
            "license": "N/A", 
            "title": "Brew.js Examples", 
            "url": "https://github.com/BrewJS/Switch/releases", 
            "description": "Javascript examples for Brew.js", 
            "author": "XorTroll", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 3257, 
            "version": "1.0", 
            "filesize": 3138, 
            "details": "Check the github page for usage info! https://github.com/BrewJS/Switch", 
            "app_dls": 1258, 
            "md5": "ff3e7711df317bcc7058cc049efdcc87"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/NX-Shell/NX-Shell.nro", 
            "updated": "08/08/2022", 
            "name": "NX-shell", 
            "license": "GPLv3", 
            "title": "NX-Shell", 
            "url": "https://github.com/joel16/NX-Shell/releases", 
            "description": "File Manager", 
            "author": "joel16", 
            "changelog": "4.01\\n\\nFixed rename bug introduced in v4.00\\nAdded option to disable extended font support. (Initially disabled by default -- this boosts the application start up speed)\\nAfter USB is unmounted via settings the device state will now be properly switch back to sdmc.\\n\\n3.20\\n\\nAdded support for extracting .ZIP archives.\\nFixed crashes when trying to exit the application after opening an image.\\nNow uses Use libnsbmp to decode BMP files. (This fixes issues loading certain BMP files).\\nDisabled window padding when displaying images so that the full screen images (1280x720) aren't bound to a scroll bar.\\nAdded a popup for viewing image properties such as filename, width and height. (Use the 'X' button to open this popup after opening an image).\\nAdded an option under settings to toggle filename display when viewing images.\\nAdded an option under settings to toggle logs. (Any failed FS functions will be logged if this option is enabled. Useful for debugging purposes). A restart of the application is required if this is enabled/disabled.\\nInitial implementation of a text reader for reading logs/configs (eventually to evolve into to an editor).\\nMany other under the hood changes/cleanups and consistency changes.\\n\\n3.10\\n\\nFixed crash when last open directory is a TitleID.\\nA storage bar is displayed below the current working directory indicator. (Based on the current active file system)\\nNX-Shell can now open various images formats. (BMP, GIF, JPG/JPEG, PGM, PPM, PNG, PSD, TGA and WEBP)\\nA progress bar will be displayed when files are being copied.\\nAdded checkboxes to select multiple files for copying/moving and deleting. (Only works if you're working from one directory)\\nAdded an option to select all checkboxes in a directory.\\nAdded an option to clear all selected files in a directory. (Note this also clears the copy/move path in the clipboard)\\nMinor UI adjustments. (Alignment fixes, popups/windows being out of place, better spacing between buttons, etc.)\\nNow based on Dear ImGui v1.7.8.\\nDisabled Dear ImGui's inifilename config.\\nFurther improvements to overall system stability and other minor adjustments have been made to enhance the user experience. (No but really though, there have been many under the hood changes, clean-ups and improvements)\\n\\n\\n3.01\\n\\nPlease delete the imgui.ini file before running this version, it will be regenerated with the accurate window size. This should fix the weird window issue introduced in the last release.\\n\\nThis build is currently in beta to gather feedback and improve the current codebase. A lot of NX-Shell's old features and functionalities are missing in this version. Some features may be deprecated entirely, and new ones may be introduced.\\n\\n3.00\\n\\n** This build is currently in beta to gather feedback and improve the current codebase. A lot of NX-Shell's old features and functionalities are missing in this version. Some features may be deprecated entirely, and new ones may be introduced. **\\n\\nFeatures:\\n\\nDelete files and folders.\\nCopy/Move files and folders.\\nRename files and folders (standard switch keyboard).\\nCreate files and folders (standard switch keyboard).\\nDisplays file properties such as size, time created, modified and accessed.\\nSorting options (Sort by name, date, size).\\nSet archive bit.\\n\\nUpdate: Controller input fixes, recompiled NRO from nightly build.\\n\\n2.11\\n\\nThis is a hot fix for v2.10 which resulted in issues with file deleting, copy/move etc. This also addresses the system version 9.00 fix.\\n\\nChange-log:\\n\\nFix FS logic which resulted in files not being deleted, copied or moved.\\nDisplay a message when deleting a file until it has been removed. (A progress bar is shown for deleting multiple files).\\n\\n2.10\\n\\nPlease note: The ebook reading feature has been removed, for more information look here. This is a minor release only updated for the urgent system version 9.00+ fix.\\n\\nChange-log:\\n\\nFix for system version v9.00+.\\nCleaned up audio decoder functions and updated dr_libs (flac/wav decoders)\\nOnly log data if developer options are enabled.\\nCleaned up FS functions and fix read/write for libnx v2.3.0\\nRemoved some unused textures and unnecessary scaling.\\nConserve zoom and rotation when navigating images (Vuelos)\\nDisable sleep for FTP mode, some FS functions (Cut/Copy) and in audio player.\\nClose the menu-bar when a device is selected.\\nHandle mounting other devices better. (No more redundant functions calls)\\nFix cancel button not reverting option menu in the second page.\\nRemove many redundant calls, and overall code clean up.\\n\\n\\n2.00\\n\\nUpdated SDL_FontCache as well as SDL2 to latest revisions available.\\nMajor music player changes:\\nAdded support for the following formats: IT, FLAC, MOD, OPUS, S3M and XM.\\nAll audio files now display timestamps (current and duration) as well as a progress bar.\\nAll audio formats display metadata (album, artist, title, etc) if found. Formats such as MP3, FLAC, OPUS will display a cover image if found.\\nAll audio formats are seekable via the touch screen. Simply drag your finger across the progress bar to select a location to seek to.\\nImplemented libarchive support:\\nAllows for the extraction of .7z, AR, ISO 9660, RAR, ZIP, AR, XAR as well as some other formats supported by libarchive.\\nDisplay a dialog asking for the user's confirmation before extracting an archive since some can take a while.\\nRemove usbComm service initialization which wasn't used and caused a crash on FW 7.0X+.\\nProperly make use of transparency when displaying dialogs, progress bars, and the menu bar.\\nAdded support for viewing .webp images.\\nDefault to 'No' for file deletion.\\nCleanup fake heap when setting a custom heap which caused RetroArch to crash if it was opened after closing NX-Shell.\\nDisplay a simple error dialog for failed file system functions. (an error code as well as the function that failed would be displayed).\\nFixed use of blend mode under SDL2 which caused transparency issues in some cases.\\n\\n1.20\\n\\nNow uses official software keyboard with text validation for creating/renaming folders and files.\\nRefactored FS code to support copying to/from other mount points. (copying files now uses internal fs functions)\\nProperly get free/max storage for each partition using FS rather than NS.\\nFixed progress bar from incorrectly blending into the background.\\nUpdate SDL_FontCache to v0.10 and revert back to using the Roboto font - which now properly displays accented characters such as \u00e9.\\nDisplay MP3 id3v2 cover art image if found.\\n\\n1.10\\n\\nBetter word wrapping on all platforms\\nFixed script errors that can prevent progress\\n\\n1.05\\n\\nNote: If you're updating this from an older version, it is recommended to delete your /switch/NX-Shell/ folder before you install this update. This is the last version where you'll have to do this. Future updates will automatically handle this.\\n\\nFeatures:\\n\\nMake use of the GPU hardware acceleration.\\nSwitch to internal FS functions to display directory list.\\nAdded config version to config files - If a new version is found where the config file needs to be changed, it will automatically be deleted and regenerated.\\nReplaced the executable icon with something more dark theme friendly.\\nLocal time is now supported.\\nDisplays file permissions in properties.\\nDisplay storage bar for current mounted device. (some devices/mount points don't have this)\\nAllow user to browse other user partitions from menu bar. (Very little can be done at this time, since it seems FS functions are locked out of using them).\\nLock applet during write/cut/copy/delete processes.\\nAdded a \"More...\" button in file options.\\nAdded a \"Refresh\" button refresh directory list.\\nAdded a \"New file\" button to create an empty file.\\nAdded a button to set archive bit on checked directories or currently highlighted/selected directories. - This\\nfeature is a work in progress. Don't use this with any important directories unless you know what you're\\ndoing. This feature can only be accessed if \"Developer options\" is enabled.\\nAdded a new options in Settings called \"Developer options\". If this toggle is set, any FS function that fails to execute properly will be logged in a file called debug.log, which can be found in /switch/NX-Shell/debug.log.\\nWrap CWD display if it gets too long.\\nImprove book reader controls in landscape mode (Right stick right/left should zoom in/out in landscape mode)\\n\\nFixes:\\n\\nFix last saved directories not properly being read due to having spaces in their names.\\nFix automatic scroll when selecting a checkbox.\\nFix exit key (PLUS) in music player, image viewer and settings.\\nBook reader no longer displays status bar after every page. Only displayed during zooming or if screen is touched in the middle or outside touch area depending on the orientation.\\nMany under the hood changes\\n\\n1.04\\n\\nFix progress bar colour in dark theme.\\nFix OSK highlighted colour.\\nFix 'B' causing refresh when attempting to navigate to parent directory.\\nImage viewer/Music Player: Only populate the directory list with entries once to avoid issues.\\nUse delta time for animation.\\nBook Reader: Fix next/prev in landscape mode.\\nFix sorting options not being loaded properly from config.", 
            "screens": 2, 
            "extracted": 8891, 
            "version": "4.01", 
            "filesize": 3529, 
            "details": "(Multi purpose file manager) to the Nintendo Switch.\\n\\n\\nFeatures:\\nDelete files and folders.\\nCopy/Move files and folders.\\nRename files and folders (standard switch keyboard).\\nCreate files and folders (standard switch keyboard).\\nDisplays file size\\nImage viewer (GIF, JPG, PNG, WEBP)\\nDisplays animated GIFs.\\nExtract various archives such as ZIP, RAR, 7Z, ISO 9660, AR, XAR and others supported by libarchive.\\nSorting options (Sort by name, date, size).\\nToggle dark theme.\\nAudio playback. (Following formats are supported: FLAC, IT, MOD, MP3, OGG, OPUS, S3M and WAV)\\nTouch screen in most cases.", 
            "app_dls": 216373, 
            "md5": "149a47027c4a3b309ed31c7a9d71b6be"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/nxdumptool/nxdt_rw_poc.nro", 
            "updated": "15/07/2024", 
            "name": "gcdumptool", 
            "license": "GPLv2", 
            "title": "nxdumptool", 
            "url": "https://github.com/DarkMatterCore/gcdumptool/releases", 
            "description": "Nintendo Switch Game Card Dump Tool", 
            "author": "DarkMatterCore", 
            "changelog": "rewrite_prerelease\\n\\nThis pre-release post will always hold a NRO build of the latest rewrite branch commit available at any given moment.\\n\\nPlease download the NRO from the asset list below and place it anywhere inside the /switch directory on your SD card. You can ignore the ELF file -- this is only provided for debugging purposes.\\n\\nRemember to run Lockpick_RCM beforehand to dump your Switch keys, which are required by nxdumptool.\\n\\nFor further information and support, please visit our Discord server.\\n\\nv1.1.15\\n\\nBuilt with latest devkitA64 and libnx.\\nRemoved AuthoringTool XML generation code to make it possible to dump NSPs from games that use NCAs with sparse / compressed FS sections. Bear in mind ExeFS / RomFS dumping won't still be possible -- using PC tools such as hactoolnet to retrieve data from these dumps is encouraged in the meantime.\\nThe NPDM ACID signature/private key patch option is now disabled by default.\\nUpdated removeConsoleDataFromTicket() to make it wipe other fields that weren't not being cleared.\\n\\nThis is only a bugfix release. I don't expect to release any new versions until the rewrite is finished - the only exception being fixing some kind of feature-breaking bug. Please understand.\\n\\nv1.1.14\\n\\nFixed support for HOS 12.0.x / AMS 0.19.x. If needed, TIPC serialization is now used to dispatch the AtmosphereHasService IPC request.\\n\\nv1.1.13\\n\\nFixed compatibility with latest libnx release.\\nNow using the AtmosphereHasService SM API extension to check if a service is running. More than a year and a half has passed since this feature was introduced in Atmosph\u00e8re, and it is now part of both SX OS and ReiNX, so it's a justified change. Fixes issues related to sysmodules and SM port exhaustion.\\nThis is only a bugfix release. I don't expect to release any new versions until the rewrite is finished - the only exception being fixing some kind of feature-breaking bug. Please understand.\\n\\nv1.1.12\\n\\nUPDATE: If you downloaded the NRO binary before 2020-11-10 01:25 AM (UTC-4), please re-download it again. Hotfixes for RomFS-related features, Atmosph\u00e8re 0.15.0 support and the ability to go back from the ID Offset selection screen were introduced. Not worthy of bumping the version number.\\n\\nFixed RomFS dumping/browsing support for games with base Program NCAs without a RomFS section (e.g. Fortnite, World of Tanks Blitz, etc.). Big thanks to bigkahuna666 for reporting the issue and providing with testing.\\nThis is only a bugfix release. I don't expect to release any new versions until the rewrite is finished - the only exception being fixing some kind of feature-breaking bug. Please understand.\\n\\n\\nv1.1.10\\n\\nBuilt using libnx v3.1.0.\\nUpdated save.c/h to reflect changes made by shchmue in Lockpick_RCM. Fixes crashes under HOS 10.0.0.\\nFixed a nasty stack corruption issue caused by improper handling of FatFs objects. Fixes ES savefile mounting errors throughout the application (e.g. batch mode, ticket dumping).\\n\\nv1.1.9\\n\\nBuilt using libnx commit d7e6207.\\nRemoved unnecessary code in NSP dumping steps.\\nImproved GitHub JSON parsing code.\\nAdded NSP/ExeFS/RomFS support for titles with multiple Program NCAs (populated ID offset fields). Big thanks to Cirosan and ITotalJustice for testing!\\nFixed compatibility with consoles that use the new PRODINFO key generation scheme. Big thanks to dimitriblaiddyd78 from GBAtemp for reporting the issue and providing with testing!\\nFixed ExeFS/RomFS browsing/dumping support for bundled-in game updates in gamecards.\\nRecursive directory removal after a failed HFS0/ExeFS/RomFS data dump is now optional.\\nFixed RomFS section dump support for titles that hold enough files in a single directory to exceed the max file count per directory limit in FAT32 (e.g. Animal Crossing: New Horizons).\\nIn order to overcome this problem, a secondary directory is created using the current RomFS directory name + a counter value (e.g. /Model -> /Model_0).\\nThis directory is used to save the rest of the data from the current RomFS directory until:\\nAll files from the current RomFS directory have been dumped, or...\\nThe directory reaches the max file count as well and another directory must be created to continue the process (e.g. /Model_0 -> /Model_1).\\nBig thanks to Michael18751, TechGeekGamer and SusejLav for testing!\\nButton presses are now retrieved from all connected controllers.\\nHOME button presses are now only blocked during dump operations. Fixes problems with homebrew forwarders and qlaunch replacements.\\nAdditionally, long HOME button presses are now blocked as well.\\nRemoved max entry count limit for HFS0/ExeFS/RomFS browsers. All filenames are now dynamically allocated, as it should have been from the very start.\\nUpdated NACP struct to reflect latest discoveries made by 0Liam.\\nThe application now displays a FW update warning when the contents from an inserted gamecard can't be parsed because they use an unsupported NCA keygen. Thanks to ITotalJustice for spotting it!\\nThis is only a bugfix release. I don't expect to release any new versions until the rewrite is finished - the only exception being fixing some kind of feature-breaking bug. Please understand.\\n\\nv1.1.8\\n\\nAdded compatibility with latest devkitA64 and libnx releases. Thanks to HookedBehemoth for porting the extra IPC calls used by the application to the new IPC system!\\nNow using global title contexts instead of global variables for each different title property (ID, version, source storage, etc.). Simplifies metadata retrieval functions.\\nRefactored the HFS0/IStorage parsing code, optimizing all gamecard reads performed by the application.\\nIncreased dump buffer sizes to 4 MiB.\\nNCA content size is now calculated and displayed for all titles.\\nContent size for updates and DLCs is displayed in the title selector from the NSP menus.\\nAdditionally, the application now displays the size for each title in the batch dump summary screen. Plus, an approximate total dump size is calculated according to the selected titles.\\nPlease bear in mind that the displayed information does not reflect output NSP dump sizes.\\nChanges to the HFS0, ExeFS and RomFS browsers:\\nFile sizes are now displayed for all file entries.\\nDumping a file/directory won't reset the cursor position anymore.\\nDisplayed lists are now lexicographically sorted.\\nIt is now possible to perform CRC32 checksum lookups using the No-Intro database. Big thanks to the folks from No-Intro.org!\\nThis new method requires a working Internet connection at runtime.\\nFor XCI dumps, this is merely offered as an alternative to the NSWDB.COM XML database method, without replacing it. A new option has been added to the XCI dump menu, which lets the user select the verification method they wish to use.\\nFor NSP dumps, on the other hand, this offers a way to actually validate dumps:\\nThe \"CRC32 checksum calculation\" feature, which was a bit pointless, has been entirely removed. The new \"Verify dump using No-Intro database\" option has taken its place.\\nNSP dump verification is achieved by just calculating the CRC32 checksum from the output CNMT NCA and performing a lookup using the No-Intro database. This works because of the way CNMT data is handled by the application:\\nThe SHA-256 checksum for each NCA is always recalculated during the dump process, and the CNMT NCA is always patched afterwards. However, if no NCA modifications are performed, the CNMT NCA ends up being identical to its original counterpart, because the content records won't have changed at all.\\nThis lets the application verify the NSP dump by performing a CRC32 checksum lookup using the CNMT NCA data, as long as no NCA modifications take place.\\nAs such, this method only works with SD card / eMMC titles, as long as the \"Generate ticket-less dump\" option is disabled.\\nThis option doesn't appear in gamecard-related menus, and it's not compatible with batch dumps.\\nBy popular demand, an option has been added in XCI, NSP and batch dump menus to change the naming scheme used with output files to the following:\\nXCI dumps:\\nSingle game: TitleName [TitleID][TitleVersion].\\nMultigame: TitleName1 [TitleID1][TitleVersion1] + TitleName2 [TitleID2][TitleVersion2] + ... + TitleNameN [TitleIDN][TitleVersionN].\\nNSP/Batch dumps: TitleName [TitleID][TitleVersion][TitleType].\\nThe \"Remember dumped titles\" feature available in batch mode isn't affected by this new setting - batch overrides will keep using the regular naming scheme.\\nAdded an option to include delta fragment NCAs in output NSP dumps from installed SD/eMMC updates. It is disabled by default.\\nAdded a small settings menu to the ExeFS/RomFS sections with the following options:\\nSplit files bigger than 4 GiB (FAT32 support): unlike previous versions, it is now possible to control if file splitting will take place for ExeFS/RomFS file dumps, instead of always splitting them. If this option is enabled, files bigger than 4 GiB will now be split and stored in a subdirectory with the archive bit set (like NSPs).\\nSave data to CFW directory (LayeredFS): enabling this option will save output data to the directory from the CFW you're running, using the LayeredFS layout.\\nAdded a new option to the batch mode menu to control if the batch dump process should halt on any errors. If disabled, it'll make the batch dump process wait for 5 seconds on any errors, then it will keep going.\\nFree SD card space is now always displayed on every UI state. It is also displayed and updated during batch mode operations.\\nExeFS submenu is now available for updates in the orphan content list (Y button menu).\\nIt is now possible to exit the application from the batch dump summary screen.\\nA warning is now displayed in the main menu if the application is launched using applet mode. NSP dumps from base applications and updates can fail if there's not enough heap available to hold the uncompressed main NSO while generating the programinfo.xml.\\nImproved XPath query used when looking for checksum matches in the NSWDB.COM XML database. Fixes CRC32 checksum lookup for multigame cartridges.\\nEmpty RomFS directories are now properly handled by the RomFS browser.\\nRemoved a BKTR RomFS section offset check that was causing trouble while trying to perform RomFS-related operations with some updates (e.g. Luigi's Mansion 3).\\nPhysical IStorage reads are now performed to retrieve NCAs from gamecards, instead of using ncmContentStorageReadContentIdFile(). Fixes gamecard NSP/ExeFS/RomFS operations under FW versions < 4.0.0.\\nFixed unaligned IStorage reads in manual file dumps files from HFS0 partitions in gamecards. Unaligned files dumped this way should no longer contain garbage data.\\nFixed a memory leak in the XML database verification code.\\nFixed an indexing bug in the RomFS browser that could potentially cause problems when performing any action from the root directory.\\nFixed gamecard hotswapping in gamecard-related submenus.\\nFixed a free SD card space check in sequential XCI/NSP dump procedures.\\nFixed a bug where the output dump name wouldn't be generated for orphan content when no base applications are installed, preventing the NSP dump procedure from starting. Thanks to snes878 for reporting this!\\nFixed a bug that prevented to retrieve the ticket for a bundled-in gamecard update from the Secure HFS0 partition during a NSP dump procedure. Thanks to snes878 for reporting this!\\nFixed a bug where a NSP dump process would stop if no personalized ticket certificate is found in the ES system savefile (e.g. when no titles with personalized titlekey crypto have been downloaded from the eShop). Thanks to satel for reporting this!\\nFixed a bug where an empty orphan content list would have been generated if no base applications are installed. Thanks to Newb_3DS#6287 for reporting this issue!\\n\\nv1.1.7\\n\\nTickets and RSA certificates are now properly parsed from their respective system savedata files, thanks to the efforts of shchmue!\\nSpeeds up ticket / titlekey retrieval for NSP/ExeFS/RomFS operations.\\nRemoves the need to bundle RSA certificates inside the application. Yay!\\nAs a bonus, the new XS00000024 personalized ticket certificate introduced in 9.0.0 is now supported. Thanks to SimonTime for providing insight on this matter!\\nAdded NSP dump support for pre-installed titles.\\nIf the selected title uses titlekey crypto and no ticket for it can be found, a prompt will be displayed, asking the user if they want to proceed anyway (even though content decryption won't be possible).\\nThis prompt will not appear in batch dump operations. The dump procedure will always go ahead.\\nSequential NSP dump operations will only display the prompt during their first run.\\nAdded a new Ticket submenu for SD/eMMC titles. It can be used to only dump the Ticket from a specific base application / update / DLC, without having to dump its entire NSP.\\nDumped tickets are stored in sdmc:/switch/nxdumptool/Ticket.\\nA configurable option is also available to remove console specific data from dumped tickets.\\nThe encrypted + decrypted title key is displayed during the dumping process, along with the Rights ID for the title.\\nJust so you know, if you want to dump tickets from base application updates bundled in gamecards, use the HFS0 browser.\\nAdded an option in NSP/batch dump menus to control the replacement of the NPDM RSA key/sig in Program NCAs from base applications and updates:\\nUp until now, replacing both the public RSA key in the ACID section from the main.npdm file (ExeFS) and the NPDM header signature (NCA header) has been the default, non-configurable behaviour whenever Program NCA modifications were needed.\\nThis option is enabled by default - if Program NCA modifications are needed, disabling this option will make the output NSP require ACID patches to function properly under any CFW (but at the same time, it will make the Program NCA verifiable by PC tools).\\nThe rest of the possible Program NCA modifications (content distribution change and/or Rights ID removal + key area replacement) will be applied when needed, even if this option is disabled.\\nChanges related to the orphan content menu (Y button):\\nParent base application name is now retrieved for orphan updates and DLCs whenever possible, and used in menus and output NSP dumps.\\nMoved the orphan content hint from the orphan content menu to the SD/eMMC menu.\\nChanged application behaviour regarding the Lockpick_RCM keys file existence:\\nSD/eMMC menu and NSP/ExeFS/RomFS related operations are now disabled if the keys file at \"sdmc:/switch/prod.keys\" is not available.\\nAn error message telling the user to run Lockpick_RCM will be displayed in the main menu if the keys file is not available.\\nAdditionally, error messages related to data decryption will now also suggest the user to run Lockpick_RCM.\\nChanges to the generated update NSPs (thanks to The-4n and suchmememanyskill):\\nDelta Fragments are, again, always excluded from output NSP dumps, regardless of their source storage and the selected dump settings.\\nPatch Extended Data is no longer wiped from the CNMT NCA in update NSPs - only the content records are replaced accordingly.\\nFurthermore, content records from Delta Fragments are preserved as well.\\nFixed CNMT PFS0 block hash calculation when the total PFS0 size exceeds the hash block size from the PFS0 superblock in the NCA header. Removes the 0x236E02 / 2002-4535 error in Goldleaf about an invalid PFS0, triggered by update NSPs with long a CNMT PFS0 section.\\nChanges to the generated NSP XMLs:\\nRequiredDownloadSystemVersion and IdOffset elements from the CNMT XML are now properly retrieved from their true locations in the CNMT NCA.\\nAdded support for the RuntimeParameterDelivery NACP field (introduced in HOS 9.X).\\nAdded support for the IARCGeneric value in the RatingAge NACP field (introduced in HOS 9.X).\\nFixed handling of PlayLogQueryableApplicationId values.\\nBig thanks to 0Liam for documenting these changes!\\nChanges related to the application update feature:\\nAdded a forced update prompt if the application is already on the latest version.\\nThe application update option will now be disabled after a successful update.\\nRemoved the FS service reinitialize step after closing the application's RomFS at startup. This was done because romfsExit() didn't close all open file handles to the NRO when I tested it with libnx v2.2.0 some time ago, thus making the application update fail. Nonetheless, the problem has been fixed.\\nFixed UI flickering when HFS0 partition data can't be retrieved from the gamecard.\\nFurthermore, a warning about nogc spoofing is now displayed under this particular case.\\nAdded an extra NSP offset validation step for sequential NSP dumps.\\nMinor codestyle fixes.\\n\\nv1.1.6\\n\\nAdded sequential dump support: it is now possible to start a XCI/NSP dump procedure even if there's not enough space available in the SD card!\\nNo setting has to be modified in order to enable this feature - the application will automatically ask the user if they want to use this mode if there's not enough space for the full dump.\\nAt least 1 GiB (2^30 bytes) of free space must be available in order to trigger this feature.\\nA file-based checkpoint system is used to keep track of the already dumped parts (\u00e0 la Hekate).\\nThe part(s) generated in each run must be transferred to a PC before continuing the process - except for the .xci.seq/.nsp.seq files used to keep track of the current dump status.\\nNSPs generated using this method will also include a .nsp.hdr file, which holds the PFS0 header data. The information from this header is filled after writing all the NCAs, thus it is saved as an additional file. This must be used as the first file (placed before .nsp.00) when merging all the parts into a full NSP.\\nThe following options are ignored when this feature is triggered:\\nSplit output dump (FAT32 support) (XCI/NSP). File splitting will take place, regardless of the filesystem used by the SD card. Additionally, the creation of a directory with the archive bit set isn't performed with NSP dumps.\\nCreate directory with archive bit set (XCI only).\\nCRC32 checksum calculation (NSP only). CRC32 checksum calculation is still available for XCI dumps.\\nThis feature is not compatible with batch dump operations.\\nGeneral changes to batch dump operations:\\nEntries from the summary list displayed in the batch dump menu can now be manually excluded from the dump operation before starting it.\\nIt is possible to disable all entries, enable all entries and/or handpick specific titles from the summary list, thus letting the user further customize the batch dump process.\\nA new option has been added to keep track of previous successful dumps created using batch mode: \"Remember dumped titles\".\\nIf enabled, a 0-byte file will be created for each successful dump in a separate subdirectory.\\nThese files act as an override: they will make the application skip the titles they represent in later batch mode operations even if the \"Skip already dumped titles\" option is disabled.\\nThis is specially useful if someone wants to skip titles that have already been successfully dumped using batch mode - even more so if their NSPs have already been moved or deleted from the SD card.\\nTo restore the original behaviour, simply delete the contents from the \"BatchOverrides\" subdirectory inside \"NSP\".\\nFree storage space is now properly recalculated after each successful dump during a batch mode operation.\\nUI code cleanup:\\nuiDrawString(), uiGetStrWidth() and uiPrintOption() are now compatible with variable argument lists, removing the need to format a string beforehand and pass its variable to any of those functions.\\nPreprocessor definitions are now used to specify RGB colors and for calculating vertical line coordinates, greatly simplifying calls to UI functions.\\nMenu code now properly waits for any user input before drawing changes to the screen.\\nOther minor coordinate fixes.\\nThe application is now capable of automatically reading/saving dump settings from/to a configuration file.\\nThe \"Split output dump\" option is, once again, enabled by default. FAT32 is the recommended filesystem for Switch SD cards if someone wants to use homebrew applications, so it's only logical to do this.\\nFilenames for NACP icons in NSPs now properly reflect the NCA ID from its respective content file if it was modified.\\nFixed a bug that prevented to dump a specific file in the RomFS section from any update.\\nFixed a bug in the RomFS block collision check code that prevented to generate NSP dumps from certain titles with a RomFS section in Control/Manual NCAs that falls under an edge case that wasn't being handled properly. Thanks to Zet-sensei for reporting this problem!\\n\\nv1.1.5\\n\\nBuilt with latest libnx release, in order to fix HID problems under HOS 9.0.0+.\\nAdded support for Korean and Chinese character sets.\\nAdded browsing/dumping support for RomFS sections in Data NCAs from DLCs.\\nCompatible with orphan DLCs (Y button) as well.\\nOutput directories for ExeFS/RomFS operations are now properly tagged as \"(BASE)\", \"(UPD)\" or \"(DLC)\" (RomFS only), depending on the title type being processed.\\nSome measures have been taken to help speed up dumping operations:\\nCPU boost mode type 1 is now used with appletSetCpuBoostMode - only effective under HOS 7.0.0+!\\nRemoved the need for dynamic memory allocations in NCA AES-CTR block decryption/encryption steps.\\nAlthough these changes get me some extra ~4 MiB/s in most operations, keep in mind this doesn't do much to help with RomFS dumps from titles with lots of (small) file entries. Even so, although the calculated ETA can sometimes be discouraging, the dump most likely won't take that much time - just let the process advance until it hits bigger files. Sequential write speeds for the inserted SD card still play a huge role in these cases.\\nMoved base output directory from \"sdmc:/nxdumptool/\" to \"sdmc:/switch/nxdumptool/\". Both the NSWreleases.xml file and the NRO binary are also expected to be inside this directory.\\n\\nv1.1.4\\n\\nFixed building with latest libnx release.\\nOptimized RomFS recursive file dump function to not rely on code recursion as much as before, avoiding stack memory exhaustion problems. Fixes crashes while dumping RomFS data from games with lots of file entries.\\nFixed a bug that made file splitting not take place while manually dumping a file bigger than 4 GiB from the RomFS section of any title.\\nReduced max part size for split files to 0xFFFF0000 bytes in all operations (except for XCI dumps when the \"Create directory with archive bit set\" option is disabled). Fixes file access problems if the parts are used inside a directory with the archive bit set.\\nRemoved the removeDirectory() function. fsdevDeleteDirectoryRecursively() is now used instead.\\nIf a HFS0/ExeFS/RomFS data dump operation is cancelled or fails, a message telling the user to wait until the output directory is fully deleted will now be displayed.\\nImproved the cancel button detection mechanism. Regardless of the ongoing operation, holding the button for 2 seconds will now consistently cancel it.\\nProgress bar movement is now smoother.\\n\\nv1.1.3\\n\\nGeneral changes to the NSP dumping procedure:\\nCorrected and updated CNMT XML and NACP XML generation. Thanks to 0Liam!\\nAdded NACP icon retrieval for each available language.\\nAdded legalinfo.xml retrieval.\\nAdded programinfo.xml generation.\\nChanged the PFS0 file order to the following:\\nNCA content files.\\nCNMT NCA.\\nCNMT XML.\\nprograminfo.xml (if available).\\nNACP icons (if available).\\nNACP XML (if available).\\nlegalinfo.xml (if available).\\nTicket + Certificate chain (if available).\\nThese changes essentially make the NSP dumps generated by the application comparable to Scene releases that follow the AuditingTool format (like those from groups like BigBlueBox or JRP), as long as the \"Remove console specific data\" option is enabled and the \"Generate ticket-less dump\" option is disabled. Happy dumping!\\nBecause of this, dumping update NSPs from gamecards will require the keys file at \"sdmc:/switch/prod.keys\" from now on (but only if the bundled update uses titlekey crypto). Base applications and DLCs can still be dumped from gamecards without needing a keys file.\\nAdded ExeFS/RomFS browsing/dumping from game updates.\\nUpon entering ExeFS/RomFS menus, it is now possible to select which update is going to be used for ExeFS/RomFS procedures.\\nIn order to dump ExeFS/RomFS content from a installed update for a gamecard title, its respective gamecard must be inserted in the console.\\nLikewise, in order to dump ExeFS/RomFS content from a installed update for a SD/eMMC title, its respective base application must be already installed as well.\\nAdded NSP batch dump mode. Press X while on the SD/eMMC title list to configure the batch dump options and start the process. Supports skipping already dumped titles, dumping selected title types (base applications, updates, DLCs) and dumping titles from a specific source storage (SD, eMMC).\\nAdded manual directory dumping feature to the RomFS browser. Just enter the directory to be dumped and then press the Y button.\\nAdded a forced XCI dump option when either the gamecard base application count or their Title IDs can't be retrieved (useful for rare Kiosk gamecards). Press Y at the error message screen to dump the cartridge image to \"gamecard.xci\".\\nDumped content information is now displayed in the gamecard menu.\\nAdditionally, if the XCI has already been dumped, information about it will be displayed as well.\\nThe displayed information about dumped content is now updated after each new dump procedure in both gamecard and SD/eMMC menus.\\nThe NPDM ACID patching procedure is now performed with Program NCAs from bundled gamecard updates and SD/eMMC titles if the \"Generate ticket-less dump\" option is enabled.\\nFixed XCI dumping under SX OS.\\nFixed a bug in the DLC NSP dump submenu that made it impossible to change the DLC to be dumped from the selected base application if more than a single DLC is available for it. Thanks to ckurtz22!\\nFixed a bug that made the application get stuck in an endless loop after selecting the SD/eMMC dump option from the main menu if no SD/eMMC titles are available. Thanks to ckurtz22!\\nFixed a bug that made the application return an empty title list if no SD card is inserted or if it contains a \"Nintendo\" directory from another console (even if there are installed titles in the eMMC). Thanks to ckurtz22!\\n\\n\\nv1.1.2\\nDelta fragment NCAs are now included in update NSPs dumped from SD/eMMC if the \"Generate ticket-less dump\" option is disabled.\\nIt is now possible to generate ticket-less NSP dumps from bundled updates in gamecards. Please bear in mind that this option requires the external \"sdmc:/switch/prod.keys\" file.\\nUI tweaks:\\nThe application now keeps track of the selected title in SD/eMMC and \"orphan\" content modes when entering a menu and then going back to the list.\\nAfter selecting a title in the SD/eMMC menu, information about content already dumped related to the selected title will now be displayed (BASE / UPD / DLC).\\nLikewise, after selecting a title in the \"orphan\" title list (Y button), an additional line will now display if the selected title has been dumped or not.\\nThis also informs the user if the dumps contain console-specific data.\\nThree additional entries will now be displayed in the \"orphan\" title list.\\nUpwards and downwards arrows will now be displayed for lists that exceed the max element count.\\nBecause of this change, max element count for the SD/eMMC title list had to be reduced from 4 to 3.\\nLeftwards and rightwards arrowheads are now displayed in menus with options.\\nA \"hint\" message is now displayed in the \"orphan\" content mode to let the user know they'll be able to find gamecard updates in that section.\\nIf a file has been already dumped, the application will display a prompt asking the user if they want to proceed anyway or not. This doesn't apply to full HFS0/ExeFS/RomFS data dumps.\\nIt is now possible to jump from the first list element to the last one and viceversa using the D-Pad Up/Down and Left Stick Up/Down. The Right Stick is still used exclusively for fast scrolling and won't be affected by this change.\\nFixed a bug where NSP/ExeFS/RomFS dumping would fail if the written entry count returned by ncmContentMetaDatabaseListApplication() didn't match the total entry count for the selected NSP dump type.\\nFixed a bug where NSP/ExeFS/RomFS dumping would fail if an invalid title index was used with ncmContentMetaDatabaseGet().\\n\\nv1.1.1\\n\\nProject name changed to nxdumptool. This is no longer a gamecard-only tool.\\nAdded ExeFS dumping/browsing support. This feature, along with the already available RomFS options, makes the application an excellent tool for modders!\\nAdded compatibility with FS process memory layout in the key retrieval procedure while using emuMMC. Thanks to shchmue!\\nDue to public demand, NSP dumping, ExeFS dumping/browsing and RomFS dumping/browsing support has been added for base applications, updates and DLCs available in both SD card and eMMC!\\nNow it's possible to select the source storage device (gamecard, SD card / eMMC) for any operation right after launching the application.\\nThe gamecard submenu works exactly like the main menu has worked up to this point (except for the update options, which are now displayed in the new main menu).\\nThe SD card / eMMC submenu shows installed base applications along with their icons. Upon selecting a title, a submenu with NSP and RomFS options will show up. It's also possible to dump updates/DLCs for an installed base application this way.\\nIf there's installed content (updates/DLCs) with missing base application titles, pressing Y on the SD card / eMMC submenu will display this \"orphan\" content list and let you dump titles from it nonetheless.\\nIt is possible to generate console-specific NSP dumps, dumps with modified tickets to remove console-specific data, and ticket-less dumps with standard NCA key area crypto.\\nTwo new options are available in the NSP dump submenus for SD/eMMC titles: \"Remove console specific data\" and \"Generate ticket-less dump\". The latter won't appear if the former isn't enabled.\\n\"Remove console specific data\" cleans console specific data fields from a \"personalized\" ticket and replaces its RSA titlekey block with a 16-byte encrypted titlekey, essentially converting it to a \"common\" ticket. This option has no effect if the title already uses a \"common\" ticket.\\n\"Generate ticket-less dump\" goes another step ahead by cleaning up the Rights ID field in every NCA content file that includes it, stores the decrypted titlekey in the NCA key area and then encrypts this area using standard crypto, removing the need for a tik/cert combination.\\nConsole-specific NSP dumps and dumps with modified tickets include both tik and cert files.\\nAll NSP dumps generated from installed SD/eMMC titles include both .cnmt.xml and .nacp.xml files whenever possible.\\nSadly, due to limitations in the methods currently used to perform key retrieval/derivation at runtime, NSP dumping, ExeFS dumping/browsing and RomFS dumping/browsing for SD/eMMC titles require the \"sdmc:/switch/prod.keys\" file. Specifically, these are the needed keys:\\neticket_rsa_kek.\\ntitlekek_## (varies from 00 to 1F).\\nAdditionally, ticket-less NSP dumps for SD/eMMC titles also require the following keys:\\nkey_area_key_application_## (varies from 00 to 1F).\\nkey_area_key_ocean_## (varies from 00 to 1F).\\nkey_area_key_system_## (varies from 00 to 1F).\\nAll gamecard-related operations can still be performed without the need for a keys file!\\nOutput data generated by the application will now be saved to its corresponding subdirectory in \"sdmc:/nxdumptool/\":\\nXCI dumps: \"sdmc:/nxdumptool/XCI/\".\\nNSP dumps: \"sdmc:/nxdumptool/NSP/\".\\nHFS0 data: \"sdmc:/nxdumptool/HFS0/\".\\nExeFS data: \"sdmc:/nxdumptool/ExeFS/\".\\nRomFS data: \"sdmc:/nxdumptool/RomFS/\".\\nCertificate dumps: \"sdmc:/nxdumptool/Certificate/\".\\nThe location for the NSWDB.COM XML database has been moved to \"sdmc:/nxdumptool/NSWreleases.xml\".\\nTickets from updates with titlekey crypto dumped from gamecards are now converted to regular \"common\" tickets before being written to the output NSP dump.\\nThe content distribution type for updates dumped from custom XCIs mounted through SX OS is now set to \"download\".\\nFixed a NCM service handle exhaustion bug if an error ocurred while reading the RomFS section entry from the Program NCA for any base application.\\nChanged the application icon yet again. Big thanks to RattletraPM!\\nMinor changes and other various general fixes.\\n\\nv1.1.0\\n\\nReplaced the application icon with a new, stylish one made by RattletraPM. Thanks a lot!\\nGamecard base application icons are now retrieved and displayed in the menu.\\nL/ZL/R/ZR buttons can now be used to change the displayed base application info if a multigame cart is inserted, instead of displaying everything right away.\\nThe Nintendo Extension shared font is now used to display bitmaps representing controller buttons and sticks instead of just using text to reference them.\\nReplaced the mbedtls-based AES and SHA-256 implementations with functions from the hardware accelerated cryptography API from libnx.\\nAdded an option to generate split XCI dumps using a directory with the archive bit set, just like split NSP dumps. It will only appear if \"Split output dump\" is enabled.\\nFixed ETA calculation.\\nEnabled ETA calculation in full HFS0 partition data dumps.\\nFixed CRC32 checksum calculation for gamecard certificate dumps.\\nAdded Program NCA RomFS section parser:\\nSupports filesystem dumping, filesystem browsing, manual file dumping and file splitting. Enjoy datamining your gamecards!\\nCompatible with multigame carts. You'll be able to choose which base application RomFS will be dumped/browsed from a submenu.\\nOutput files will be saved to: \"sdmc:/[GameName] v[GameVersion] ([TitleID]) (RomFS)/\".\\nAdded high contrast directory/file icons from GNOME project to file browsing modes (HFS0 / RomFS).\\nFixed the NSP generation code (based on 4NXCI / hacPack):\\nDelta Fragment NCAs are now discarded.\\nThe SHA-256 checksum is recalculated for every NCA content after being modified, resulting in new NCA IDs.\\nThe ACID public key is replaced in the NPDM section from the Program NCA. All the related NCA/PFS0 Superblock SHA-256 hashes are recalculated.\\nThe NPDM signature in the Program NCA header is now replaced as well.\\nThe content records from the Application CNMT are updated with proper SHA-256 hashes and new NCA IDs. All the related NCA/PFS0 Superblock hashes are recalculated.\\nNACP XMLs are now generated as well.\\nBecause of all these changes, the CRC32 checksum can't be calculated until the dump procedure is complete.\\nIf this option is enabled, the application will take extra time after the NSP dump has been completed to calculate the CRC32 checksum. Nonetheless, you'll be able to cancel this procedure.\\nA warning message will appear in the NSP dump menu if CRC32 checksum calculation is enabled to inform the user about this extra step.\\nFurthermore, the output CRC32 checksum will be different on each new dump. This is because the NPDM signature in the Program NCA header uses a random seed.\\nThis effectively makes the generated NSPs only need ES patches to work. ACID patches shouldn't be needed anymore.\\nAdded NSP dumping support for Patch and AddOnContent title types with gamecards that include bundled Updates/DLCs:\\nThe information displayed in the main menu now shows how many Updates/DLCs are bundled in the inserted gamecard (per application and in total).\\nIf a bundled gamecard update features a populated Rights ID bitfield, both its Ticket and Certificate will get added to the output NSP.\\nAdditionally, the NSP dump menu has been divided in three subcategories: base application, update and DLC.\\nEach submenu will only appear if the inserted gamecard holds at least one title belonging to the category it represents.\\nIf only the base application is included, like most gamecards, choosing the NSP dump option in the main menu will take you right to the base application dump menu.\\nOnce you enter a submenu, you'll be able to choose exactly which title to dump belonging to that category.\\nOutput update NSPs will not be modified in any way. Thus, unlike NSPs from base applications and DLCs, their CRC32 checksums will always be the same.\\nFixed the minimum system version field size in the extended CNMT header struct. Thanks to @0Liam !\\nChanged the naming convention for output NSP dumps:\\nBase application: \"sdmc:/[GameName] v[GameVersion] ([TitleID]) (BASE).nsp\".\\nUpdate: \"sdmc:/[GameName] v[UpdateVersion] ([UpdateTitleID]) (UPD).nsp\".\\nIf a matching base application isn't found: \"sdmc:/[UpdateTitleID] v[UpdateVersion] (UPD).nsp\".\\nDLC: \"sdmc:/[GameName] v[DLCVersion] ([DLCTitleID]) (DLC).nsp\".\\nIf a matching base application isn't found: \"sdmc:/[DLCTitleID] v[DLCVersion] (DLC).nsp\".\\nThe application is now able to retrieve the NCA header key and perform NCA key area decryption at runtime, using the SPL services. Thus, is isn't needed to run Lockpick beforehand anymore to dump NSPs (nor to dump/browse RomFS data).\\nIf the inserted gamecard includes a bundled update, its version number will now be used in the output filename for XCI, HFS0 and gamecard certificate dumps.\\nMinor improvements to the file splitting code.\\nAdditionally, the filename for the current part will now be displayed and updated for all operations if file splitting is enabled.\\nThe application update feature will now use the launch path from argv if it's available. Otherwise, it defaults to \"sdmc:/switch/gcdumptool.nro\".\\nCosmetic fixes to the UI layout.\\nNCM service resources are now properly closed.\\nRemoved unnecessary service (de)initializations.\\n\\nv1.0.8\\n\\nAdded proper metadata reading from multigame carts.\\nAdded gamecard -> NSP dump option:\\nCompatible with file splitting (for FAT32 support). The same layout from splitNSP.py is used: a directory with numbered part files (00, 01, etc.). The archive bit is enabled right away in this directory to allow HOS to treat it as if it were a whole file. This way, it can be used with any application with NSP-handling capabilities.\\nCompatible with CRC32 checksum calculation. Disclaimer: NSP dumps can't be verified against the XML database.\\nOutput NSPs contain a metadata XML file based on the information from the CNMT NCA for the application, which is decrypted using code from hactool. The necessary keyset is loaded from \"sdmc:/switch/prod.keys\", which can be generated using Lockpick.\\nIf a multigame cart is used, you'll be able to choose which application to dump from the menu.\\nDump verification process tweaked for multigame carts: it'll now look for a possible checksum match using the Title IDs from all bundled applications.\\nImproved error reporting in dumper.c when a write operation fails. Furthermore, if a write error is produced when trying to write data to an offset past the FAT32 file size limit (0xFFFFFFFF bytes), the application will suggest the user to enable the file splitting option.\\nTweaked part sizes for splitted dumps: XCI/raw partition/manual file dump part size now matches the one used by XCI-Cutter, while the NSP part size matches the one used by splitNSP.py.\\nMinor fixes to the UI code.\\n\\nv1.0.7\\n\\nFixed a segmentation fault when trying to free an invalid XML node data pointer when a Scene release from NSWReleases.xml with a matching Title ID misses data related to that node.\\nAdded a message suggesting the user to restart the application after a successful update.\\n\\nv1.0.6\\n\\nUpdated application codebase in order to make it compatible with the latest devkitA64 and libnx releases.\\nRemoved some fs-srv service functions from fsext.c/h that have been included in libnx (and fixed the ones that haven't).\\nRevamped the GFX code to replace the 8x8 ASCII font with the shared system font, using the pl service and FreeType.\\nEnabled (and fixed) the in-app update option. HTTPS compatibility is achieved through the mbedtls portlib.\\nDisabled screen dimming and auto sleep.\\nAdded file counter to partition browser.\\nChanged the naming convention for split gamecard dumps to *.xc[part number], in order to make them compatible with SX OS and other tools right away.\\nIncreased the delay after inserting a new gamecard by 1 second.\\nAdded a gamecard detection thread to monitor gamecard state changes in a better way. This thread is hooked to a gamecard detection kernel handle retrieved through an IEventNotifier object.\\nReplaced partition filesystem mounting through fs-srv service calls with manual HFS0 partition header parsing. This should fix issues when browsing the Logo partition from type 0x02 gamecards.\\nBlocked HOME button presses when running as a regular/system application instead of an applet. A warning message will be displayed whenever any operation is started if the application is running as an applet.\\nAdded detection for bundled FW versions 6.0.0 - 8.0\\n\\nv1.0.5:\\n\\nFixed game card version reading (now using the ncm service instead of retrieving it from the cached Control.nacp).\\nAdded ability to read and identify FW update versions bundled with game cards.\\nIn case an error occurs while reading the game card Title ID, the application will also display the FW version update bundled with it along with an explanation.\\nRemoved output XCI dump renaming based on the XML database from nswdb.com.\\nOutput naming scheme changed. Characters out of the ASCII range are replaced with underscores:\\nXCI dump: 'sdmc:/[GameName] v[GameVersion] ([TitleID]).xci'.\\nRaw partition dump: 'sdmc:/[GameName] v[GameVersion] ([TitleID]) - Partition [PartitionIndex] ([PartitionName]).hfs0'.\\nPartition data dump (directory): 'sdmc:/[GameName] v[GameVersion] ([TitleID]) - Partition [PartitionIndex] ([PartitionName])/'.\\nCertificate dump: 'sdmc:/[GameName] v[GameVersion] ([TitleID]) - Certificate ([CRC32]).bin'.\\nManual file dumps will now be saved to their corresponding directory instead of the SD card root.\\nAdded a XML database update option in the main menu.\\nAdded an update application option in the main menu. It isn't working at this moment because libcurl has problems dealing with secure connections, and as such the option has been disabled (pressing A on it does nothing). Nonetheless, the code to parse JSON responses from the GitHub API is pretty much ready, so it's just a matter of time.", 
            "screens": 0, 
            "extracted": 2703, 
            "version": "rewrite-prerelease", 
            "filesize": 1238, 
            "details": "Nintendo Switch Game Card Dump Tool\\n\\nMain features\\n\\nGenerates full Cartridge Image dumps (XCI) with optional certificate removal and optional trimming.\\nGenerates installable Nintendo Submission Packages (NSP) from base applications, updates and DLCs stored in the inserted game card.\\nCompatible with multigame carts.\\nCRC32 checksum calculation for XCI/NSP dumps.\\nFull XCI dump verification using XML database from NSWDB.COM (NSWreleases.xml).\\nXML database and in-app update via libcurl.\\nPrecise HFS0 raw partition dumping, using the root HFS0 header from the game card.\\nHFS0 partition file data dumping.\\nHFS0 partition file browser with manual file dump support.\\nRomFS section file data dumping.\\nRomFS section file browser with manual file dump support.\\nManual game card certificate dump.\\nFree SD card space checks in place.\\nFile splitting support for all operations.\\nGame card metadata retrieval using NCM and NS services.\\nDump speed calculation, ETA calculation and progress bar.", 
            "app_dls": 134163, 
            "md5": "905bb6d8ef87e34acd94623943d00d61"
        }, 
        {
            "category": "game", 
            "binary": "/switch/bs/bs.nro", 
            "updated": "03/10/2018", 
            "name": "bs", 
            "license": "n/a", 
            "title": "Bermuda Syndrome", 
            "url": "https://github.com/usineur/bermuda/releases", 
            "description": "Bermuda Syndrome engine reimplementation", 
            "author": "usineur", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 197938, 
            "version": "1.0", 
            "filesize": 146528, 
            "details": "This program is a re-implementation of the engine used in the game Bermuda\\nSyndrome made by Century Interactive and published by BMG in 1995. The original\\ndata files are required (retail or demo versions).\\n\\nThis rewrite is based on the reversing of the original Windows executable.\\n\\nControls:\\nKeys    \u202f\\nArrow Keys    Move Jack\\nA    Interact / Skip dialogues or cutscenes\\nB    Run / Put away weapon\\nX    Use weapon / Pull out weapon\\nY    Display bag\\n+    Open menu\\n-    Toggle 1:1 / fullscreen\\nL / R    Quick load / save\\nZL / ZR    Decrease / Increase game state slot\\n\\nCredits:\\n\\nCyx (Gr\u00e9gory Montoir) for original reverse work and modern engine.", 
            "app_dls": 760, 
            "md5": "477ab2c77b95ec407b0a981cffbafa08"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/ftpd/ftpd.nro", 
            "updated": "15/12/2024", 
            "name": "ftpd", 
            "license": "n/a", 
            "title": "ftpd", 
            "url": "https://github.com/mtheall/ftpd/releases/", 
            "description": "FTP Server for Switch", 
            "author": "mtheall, TuxSH", 
            "changelog": "3.2.1\\n\\nCenter 3DS window selector on top screen\\nUpdate to Dear ImGui v1.91.5\\nGeneral system stability improvements to enhance the user\u2019s experience\\n\\n3.2.0\\n\\nDSi wifi support with update to libnds-2.0.0\\nmDNS support\\nglob support\\nImGui stereoscopic effect on 3DS\\nRemoved CIA build for 3DS\\nDO NOT ASK ME TO SUPPORT CIA\\nBuild with CMake\\nUpdate to Dear ImGui v1.91.4\\nGeneral system stability improvements to enhance the user\u2019s experience\\n\\n3.1.0\\n\\nAccess Point mode on Switch\\nReset button for configuration\\nUpdate to Dear ImGui 1.83\\nGeneral system stability improvements to enhance the user\u2019s experience\\n\\n3.0.0\\n\\nEven better graphics than ever (Dear ImGui backend)\\nNDS support\\nExit button changed from B to PLUS/START\\nUser/Password support\\nScrollable log\\nStatus icons/text (battery/wifi/time)\\n\"Classic\" builds retain console interface\\nFurther improvements to overall system stability and other minor adjustments have been made to enhance the user experience\\n\\n2.3.1\\n\\nRebuild against latest toolchains\\nFurther improvements to overall system stability and other minor adjustments have been made to enhance the user experience\\n\\n2.3\\n\\nNew Supported Commands:\\nMLSD\\nMLST\\nSIZE\\nOther Features:\\nSwitch support\\nBacklight toggle (Start button)\\nMore compatibility with non-compliant clients\\nFurther improvements to overall system stability and other minor adjustments have been made to enhance the user experience\\n\\n2.2.0-947dc137\\nShow local IP address on Switch correctly.", 
            "screens": 0, 
            "extracted": 1982, 
            "version": "3.2.1", 
            "filesize": 987, 
            "details": "This is a port of ftpd for 3DS.\\nTo use it, run the application and then connect to your Switch's IP with an ftp program on port 5000.\\n\\n\\nContains both standard and classic versions.", 
            "app_dls": 224193, 
            "md5": "048fa2e3993eca0a54ac2e68d8c20e74"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/ptnx/powertoolsnx.nro", 
            "updated": "07/01/2019", 
            "name": "PowertoolsNX", 
            "license": "none", 
            "title": "PowertoolsNX", 
            "url": "https://github.com/CVFireDragon/PowerToolsNX/releases", 
            "description": "reboot or power off your Nintendo Switch", 
            "author": "CVFireDragon", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 292, 
            "version": "1.0", 
            "filesize": 132, 
            "details": "v1.0\\n\\nAdded a Warning label.\\nFixed a typo (thanks MODDED WARFARE on youtube for telling me)\\n\\nv0.3b\\n\\nAdded Reboot into RCM mode. Please don't use this on exFat... it will not go too well (thanks hippy dave for this being possible)\\n\\nv0.2\\n\\nAn app that can reboot or power off your Nintendo Switch\\n\\nTodo\\nMake a reboot into RCM option (probs not possible for a while)", 
            "app_dls": 8312, 
            "md5": "e66c51243fe85590021d64a97901dc51"
        }, 
        {
            "category": "game", 
            "binary": "/switch/HuntForTheShadowRider.nro", 
            "updated": "15/09/2022", 
            "name": "HuntfortheShadowRider", 
            "license": "GPLv3", 
            "title": "Hunt for the ShadowRider", 
            "url": "https://github.com/faithvoid/GodotNXPorts/", 
            "description": "Hunt for the Shadow Rider (Godot Port)", 
            "author": "bluestreak0, faithvoid", 
            "changelog": "This is version 1.0 listed as Untold to track versions better .. apologies for the confusion.", 
            "screens": 0, 
            "extracted": 71061, 
            "version": "Untold", 
            "filesize": 45738, 
            "details": "A port of bluestreak0's \"Hunt for the Shadow Rider\", using Stary2001's Godot build.\\n\\nControls:\\n\\n- D-Pad: Move (L+R) / Jump + Climb (Up) / Crouch (Down)\\n- B: Jump/Up (to make jumping a bit easier) / Cancel\\n- Y: Shoot\\n- Plus: Pause\\n- Minus: Quit\\n\\nOriginal Description:\\n\\nA rogue Shadow Rider has escaped to the year 2078. You are the only Hunter left who can take him down.\\n\\nThis is an open-source game made for the Open Jam 2019. The code is on github, at https://github.com/alexhuntley/Hunt-for-the-Shadow-Rider. It is under the GPLv3 license.\u200b", 
            "app_dls": 2257, 
            "md5": "92163407699f3d6d2987943df3555d74"
        }, 
        {
            "category": "game", 
            "binary": "/switch/HOTA/HOTA.nro", 
            "updated": "20/08/2018", 
            "name": "hota", 
            "license": ".", 
            "title": "hota", 
            "url": "https://github.com/usineur/hota", 
            "description": "Heart of the alien game", 
            "author": "usineur", 
            "changelog": "1.1\\n\\nGraphic filter can be disabled with '-' button\\n\\n1.2\\n\\nRevamp controls", 
            "screens": 0, 
            "extracted": 46220, 
            "version": "1.2", 
            "filesize": 37123, 
            "details": "Heart of The Alien open-source engine rewrite.\\n\\nSee the source Link for more info.", 
            "app_dls": 793, 
            "md5": "4f88953abb03a0cf77b17ed3679baf57"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/internal-speaker.nro", 
            "updated": "30/04/2024", 
            "name": "InternalSpeakers", 
            "license": "GPLv3", 
            "title": "Internal Speakers", 
            "url": "https://github.com/paulocode/switch_internal_speakers_nro", 
            "description": "Use internal speakers while docked", 
            "author": "paulocode", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 362, 
            "version": "1.0.0", 
            "filesize": 122, 
            "details": "This homebrew allows you to dock your switch while still using the internal speakers as audio output.\\n\\nWhy? Not all monitors have speakers.", 
            "app_dls": 600, 
            "md5": "5dc4edb2e529867486440f66bb3f1c25"
        }, 
        {
            "category": "game", 
            "binary": "/switch/GuitarNX/GuitarNX.nro", 
            "updated": "23/05/2020", 
            "name": "GuitarNX", 
            "license": "n/a", 
            "title": "GuitarNX", 
            "url": "https://github.com/Tijeras94/GuitarNX/releases", 
            "description": "A Guitar Hero like game", 
            "author": "Tijeras94", 
            "changelog": "0.0.1\\n\\nInitial Release", 
            "screens": 1, 
            "extracted": 61221, 
            "version": "0.0.1", 
            "filesize": 54750, 
            "details": "GuitarNX is a game based on the Guitar Hero video game in which we must play the colored notes that come towards us, the difficulty of the songs vary but contains 4 levels for each of which are ; Super Easy, Easy, Medium, Expert, all of them depending on the properties of the song.\\n\\nYou can add music from the format of \"Frets on fire\" : visit http://fretsonfire.wikidot.com/custom-songs", 
            "app_dls": 5520, 
            "md5": "ef992580ff93ff9e83a418a48e469c38"
        }, 
        {
            "category": "n/a", 
            "binary": "/switch/UselessHB.nro", 
            "updated": "16/08/2022", 
            "name": "useless", 
            "license": "n/a", 
            "title": "Useless Homebrew", 
            "url": "https://gbatemp.net/threads/useless-homebrew-for-nintendo-switch.497041/", 
            "description": "Display text and buttons", 
            "author": "Rydian, Tcm0", 
            "changelog": "1.1.3\\n\\nRecompiled with latest LibNX.\\n\\n1.1.2\\n\\nRecompiled with latest LibNX.", 
            "screens": 0, 
            "extracted": 309, 
            "version": "1.1.3", 
            "filesize": 122, 
            "details": "This is a port of the \"Useless Homebrew\" written by Rydian for the DS. It tries to mimic a \"useless machine\" that has a switch. Press \"A\" to switch the machine on and see what happens.\\n\\nThis game has flashing lights/colors. Please take care when playing, especially if you have epilepsy or a related disorder.", 
            "app_dls": 5491, 
            "md5": "738eaf7328f0d83d76b1947d08e9e0bc"
        }, 
        {
            "category": "advanced", 
            "binary": "none", 
            "updated": "05/10/2021", 
            "name": "switch-pl", 
            "license": "Apache v2", 
            "title": "switch-pl", 
            "url": "https://github.com/bandithedoge/switch-pl", 
            "description": "Full Polish translation of the Switch.", 
            "author": "bandithedoge & spaqin", 
            "changelog": "1.6.0\\n\\nThis release brings full support for 12.1.0 along with major improvements in our translation workflow.\\n\\n1.5.1\\n\\nThis update fixes a few untranslated lines in dataErase, common and setting.\\n\\n1.5\\n\\nThis version brings (hopefully) full 10.0.x support.\\n\\n1.4\\n\\nThis version changes 2 files with strings added in 9.1.0.\\n\\n1.3.1\\n\\nIf you downloaded 1.3, update immediately! 1.3 had a corrupted overlayDisp causing your Switch to crash every time it tried to show a notification (ie. when taking it out of the dock).\\n\\n1.3.0\\n\\nThis release adds (hopefully) full support for firmware 9.0.0.\\n\\n9.0.1 is still unconfirmed.\\n", 
            "screens": 0, 
            "extracted": 386, 
            "version": "1.6", 
            "filesize": 341, 
            "details": "This package installs for atmosphere only. it does work on other CFW's you would need to amend your paths to suit.\\n\\nWhat's not translated\\n- eShop (obviously)\\n- Health and Safety Information, Important Information, etc.\\n- \"Played for X hours\", \"Played X days ago\", etc.\\n- Some error messages\\n\\nSpecial thanks\\n- Migush - for providing a full dump of the Switch system menu\\n- Pekempy - for his awesome custom icon and label tutorial\\n- newget - for sending his unreleased Korean translation\\n- Everyone who helped in the Qcean Discord", 
            "app_dls": 4451, 
            "md5": "9909241c867dd6a6c420b24302f50477"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Minesweeper_NX/Minesweeper_NX.nro", 
            "updated": "19/09/2018", 
            "name": "minesweeper-NX", 
            "license": ".", 
            "title": "Minesweeper NX", 
            "url": "https://github.com/Cid2mizard/Minesweeper_NX/releases", 
            "description": "Minesweeper", 
            "author": "Cid2mizard", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 1286, 
            "version": "1.0", 
            "filesize": 600, 
            "details": "Minesweeper is a single-player puzzle video game. The objective of the game is to clear a rectangular board containing hidden mines without detonating any of them, with help from clues about the number of neighboring mines in each field. The game originates from the 1960s, and has been written for many computing platforms in use today.\\n\\nFeatures : - 3 difficulty levels (Easy, Normal & Hard) - Custom Level - Highscore\\n\\nControls : - Double Touch or D-pad + A : Menu Selection - Short Touch or Short A : Discover case/Delete flag - Long Touch or Long A : Place flag - B : Back to menu - X : Restart game - Plus : Exit game", 
            "app_dls": 2138, 
            "md5": "ee20c0f2c6b76ea2c3d630e51d0a6a78"
        }, 
        {
            "category": "game", 
            "binary": "/switch/megazeux/megazeux.nro", 
            "updated": "13/09/2024", 
            "name": "MegaZeux", 
            "license": "GPLv2", 
            "title": "Megazeux", 
            "url": "https://github.com/AliceLR/megazeux/releases", 
            "description": "MegaZeux is a game creation system", 
            "author": "AliceLR", 
            "changelog": "2.93b\\n\\nReleased on September 10th, 2024. 3DS build added September 11th, 2024.\\n\\n2.93\\n\\nReleased on December 31st, 2023. Flatpak package added January 2nd, 2023.\\n\\n2.92f\\n\\nReleased on November 22nd, 2020. Debian/Ubuntu/Raspbian packages added on November 26th, 2020.\\n\\n2.92e\\n\\nReleased July 20th, 2020.\\n\\n2.92d\\n\\nReleased on May 8th, 2020.\\n\\n2.92c\\n\\nReleased March 8th, 2020.", 
            "screens": 0, 
            "extracted": 12122, 
            "version": "2.93b", 
            "filesize": 4964, 
            "details": "MegaZeux is a game creation system originally released in 1994 and still being developed today. At DigitalMZX you'll find an enormous collection of MegaZeux games and a forum inhabited by friendly MegaZeux veterans. In-depth community info can be found in the MZX Wiki.\\n\\nYou can chat to the team @ https://discord.gg/XJCvb4P\\n\\nGames can be found here : https://vault.digitalmzx.net/search.php?browse=AllGames&desc=CACHE_downloadCount", 
            "app_dls": 1018, 
            "md5": "47aaf0f78f3907bf050016a45aa548a6"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Slinks-Adventure/slinks-adventure-v0.0.2pa-Switch.nro", 
            "updated": "24/05/2020", 
            "name": "Slinks-Adventure", 
            "license": "GPLv3", 
            "title": "Slink's Adventure", 
            "url": "https://github.com/leecloudvictor/Slinks-Adventure", 
            "description": "A neat little platformer", 
            "author": "kiiwiibiirb", 
            "changelog": "0.0.2-prealpha\\n\\nAdded Start Menu\\nRemoved Godot splash screen\\nAdded test music button for sound test (will be removed in v0.0.3-prealpha)\\nAdded lock and key. The hat being the key and the yellow squares being a \"locked door\"", 
            "screens": 0, 
            "extracted": 40332, 
            "version": "0.0.1-alpha", 
            "filesize": 17607, 
            "details": "Slink is just your average little dude (dude-et... thing???) but the evil Blink has taken away everyone's hats! Except for you. Now it's up to you to defeat Blink and they're army of henchmen... But without hurting them directly...?\\n\\nControls\\n\\nLeft stick/d-pad - Movement A - jump\\n\\nOrginal Repo has been moved closed : https://github.com/kiiwiibiirb/Slinks-Adventure/releases", 
            "app_dls": 326, 
            "md5": "0f0e6011c95294dcb31b2a75ffcf7c35"
        }, 
        {
            "category": "game", 
            "binary": "/switch/lugaru/lugaru.nro", 
            "updated": "15/01/2019", 
            "name": "Lugaru", 
            "license": "GPLv2", 
            "title": "Lugaru", 
            "url": "https://github.com/usineur/lugaru/releases", 
            "description": "ninja rabbit fighting game", 
            "author": "usineur", 
            "changelog": "v1.3-nx1\\n\\nFirst public release.", 
            "screens": 0, 
            "extracted": 48405, 
            "version": "1.3-nx1", 
            "filesize": 39121, 
            "details": "The game\\nLugaru (pronounced Loo-GAH-roo) is a cross-platform third-person action game. The main character, Turner, is an anthropomorphic rebel bunny rabbit with impressive combat skills. In his quest to find those responsible for slaughtering his village, he uncovers a far-reaching conspiracy involving the corrupt leaders of the rabbit republic and the starving wolves from a nearby den. Turner takes it upon himself to fight against their plot and save his fellow rabbits from slavery.\\n\\nHistory\\nLugaru was originally developed by David Rosen of Wolfire Games and was open sourced in 2010. It was made cross-platform with the help of Ryan C. Gordon.\\n\\nVarious forks were made at that time, and the most interesting developments were put back together under the OSS Lugaru organization, originally on Google Code and then on Bitbucket.\\n\\nThis new repository on GitLab is run by the same team, and aims at revitalizing the development effort to clean things up, ensuring the code base builds and runs fine on all supported platforms, and easing the packaging of Lugaru in Linux distributions.\\n\\nIdeally, the updated code base could also be used to update the Lugaru HD version sold by Wolfire Games once proven better than the current commercial builds.\\n\\nRun it through hbloader or hbmenu.nsp. Old Album method is not recommended (may cause crashes).\\nControls:\\nCheck in Options for current mapping. Press + to access menu (in-game).\\nNote that ZL and ZR are reserved for camera.", 
            "app_dls": 2294, 
            "md5": "6b60f8dec2afe2d8d4a2f3ee3cfd529b"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/ComicNX/ComicNX.nro", 
            "updated": "17/10/2019", 
            "name": "ComicNX", 
            "license": "GPLv2", 
            "title": "ComicNX", 
            "url": "https://github.com/HookedBehemoth/ComicNX/releases", 
            "description": "online comic browser for the Nintendo Switch", 
            "author": "HookedBehemoth", 
            "changelog": "1.2.0\\n\\n-Allow flipping of images by pressing X\\n-Greatly improved scrolling speed\\n-Show full pages again instead of \"sections\"\\n-Many under-the-hood changes\\n\\n1.1.0\\n\\n9.0.0 support\\nImplemented check for parental control\\n\\n\\n", 
            "screens": 0, 
            "extracted": 10724, 
            "version": "1.2.0", 
            "filesize": 4487, 
            "details": "Shitty comic-browser for your Nintendo Switch.\\n\\nThis uses my Plutonium fork because I rescale Image-Elements on reloading an Image and menuitems should be rescalled and centered.\\n\\nLicensing\\n\\nThis software is licensed under the terms of the GPLv2.\\n\\nCredits\\n\\nswitchbrew for the libnx project and the extensive documentation, research and tool development pertaining to the Nintendo Switch.\\ndevkitPro for the devkitA64 toolchain and libnx support.\\natlasnx for Swurl and some util methods\\nXorTroll for Plutonium", 
            "app_dls": 15536, 
            "md5": "d0ee79a0ac5a9549f2fb22cd8bbaaba9"
        }, 
        {
            "category": "tool", 
            "binary": "none", 
            "updated": "03/10/2023", 
            "name": "HOSInputDisplay", 
            "license": "GPLv3", 
            "title": "HOS-InputDisplay", 
            "url": "https://github.com/fruityloops1/HOS-InputDisplay", 
            "description": "Input display sysmodule", 
            "author": "fruityloops1", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 94, 
            "version": "1.3.2", 
            "filesize": 51, 
            "details": "Sysmodule that acts as a server for HOS-InputDisplay\\n\\nFeatures:\\nDisplays button inputs\\n3D Model to display gyro data (joycons/pro controller)\\nAutomatically detects controller color\\nUser configurable colors\\n\\nFind Windows/Linux client program at https://github.com/fruityloops1/HOS-InputDisplay/releases", 
            "app_dls": 300, 
            "md5": "49fc65d90f22062209d2e8b025076ff6"
        }, 
        {
            "category": "game", 
            "binary": "/switch/MarioBrosNX/files/MarioBrosNX.nro", 
            "updated": "18/09/2019", 
            "name": "MarioBrosNX", 
            "license": "GPLv2", 
            "title": "MarioBrosNX", 
            "url": "https://github.com/KranKRival/MarioBrosNX/releases", 
            "description": "A clone of nes super mario bros for the nintendo switch created in C++ and SDL2", 
            "author": "KranKRival", 
            "changelog": "1.3.2\\n\\nBring support for 9.0.0\\n\\n1.3.1\\n\\n1.Fixed small typo on loading screen\\n2.Reduced game size by 60\\n3.moved to png instead of bitmaps\\n4.Improved game stability", 
            "screens": 0, 
            "extracted": 27657, 
            "version": "1.3.2", 
            "filesize": 15458, 
            "details": "MarioBrosNX C++/SDL2, Created by \u0141ukasz Jakowski 2014, Ported to the Nintendo Switch By Krank/KuranKu 2019\\n\\nDisclaimer:\\n\\nAll ingame images and sound belong to its authors and none other, the right for mario bros title belongs to nintendo. this game created for fun and love of the community\\n\\nHAVE FUN MARIO!!!", 
            "app_dls": 21195, 
            "md5": "c0559980570d32fd440c94b95724af56"
        }, 
        {
            "category": "game", 
            "binary": "/switch/SudokuNX/SudokuNX.nro", 
            "updated": "16/09/2019", 
            "name": "SudokuNX", 
            "license": "GPLv3", 
            "title": "SudokuNX", 
            "url": "https://github.com/ZetaDesigns/SudokuNX/releases", 
            "description": "A Sudoku Game for the Nintendo Switch", 
            "author": "ZetaDesigns", 
            "changelog": "v1.0.1\\n\\nThis release does not have any new features, it is simply to make the app work with the recent changes to HID, now compiled with latest libnx", 
            "screens": 0, 
            "extracted": 8474, 
            "version": "1.0.1", 
            "filesize": 3388, 
            "details": "SudokuNX is an open-source Sudoku game for the Nintendo Switch.\\n\\nThis was actually my first project with SDL2.\\n\\nFeatures:\\n- create random Sudoku\\n- detect when Sudoku is solved\\n\\nTo-Do:\\n- Touchscreen input\\n- Difficulties\\n\\nIf you encounter any Issues or have feature requests feel free to open an Issue on the repository!\\n\\nSpecial Thanks to @Doodil who helped me a lot with the generator!", 
            "app_dls": 1318, 
            "md5": "753538aa2cf279084697b668cc0c9b35"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/prodinfoenabler/ProdInfoEnabler.nro", 
            "updated": "24/01/2020", 
            "name": "prodinfoenabler", 
            "license": "n/a", 
            "title": "prodinfoenabler", 
            "url": "https://github.com/darkxex/prodinfoenabler/releases", 
            "description": "enable and disable prodinfo writing.", 
            "author": "darkxex", 
            "changelog": "1.0.1\\n\\n9.1.0 Module is based in ancl.", 
            "screens": 0, 
            "extracted": 9858, 
            "version": "1.0.1", 
            "filesize": 4322, 
            "details": "ProdInfo Enabler\\n\\n\\nenable and disable prodinfo writing.\\n\\nThis application is based on the Benfah code.\\nThere is nothing to explain, just choose your firmware and press A.\\nWhen finished restart your console.", 
            "app_dls": 1058, 
            "md5": "55beef86864235935146519cb8d784f6"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Whats-in-the-box-NX/Whats_In_The_Box_NX.nro", 
            "updated": "30/12/2018", 
            "name": "Whats-in-the-box-NX", 
            "license": "GPLv3", 
            "title": "Whats in the box NX", 
            "url": "https://github.com/Manurocker95/WhatsInTheBoxNX/releases", 
            "description": "Whats in the box for Nintendo Switch", 
            "author": "Manurocker95", 
            "changelog": "v1.1\\n\\nSave data is added so you can close the game and continue in any time.", 
            "screens": 0, 
            "extracted": 13697, 
            "version": "1.1", 
            "filesize": 7259, 
            "details": "Whats in the Box for nintendo switch\\n\\nThe Dev has very little info on the application.", 
            "app_dls": 1520, 
            "md5": "a91c73ac6cd4bcacb9a82f1035c01b80"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/CalculateNX/CalculateNX.nro", 
            "updated": "18/09/2019", 
            "name": "CalculateNX", 
            "license": "n/a", 
            "title": "CalculateNX", 
            "url": "https://github.com/CompSciOrBust/CalculateNX/releases", 
            "description": "A simple calculator for the Nintendo Switch", 
            "author": "CompSciOrBust", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 8206, 
            "version": "1.0.1", 
            "filesize": 3276, 
            "details": "A simple calculator for the Nintendo Switch.\\n\\nI made this to learn how touchscreens work with SDL. Only handheld mode it supported.\\n\\nCredits\\n\\nLibNX and DevkitPro for making the toolchain.\\n\\nDalton Maag for the Ubuntu font.", 
            "app_dls": 1806, 
            "md5": "0e537071f0970d5c29807c4843f7feff"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/nso-icon-tool/nso-icon-tool.nro", 
            "updated": "16/11/2024", 
            "name": "nso-icon-tool", 
            "license": "GPLv3", 
            "title": "nso-icon-tool", 
            "url": "https://github.com/dslatt/nso-icon-tool", 
            "description": "Create custom avatars using NSO icons", 
            "author": "dslatt", 
            "changelog": "0.4.4\\n\\nAdded zhHans translation in #27; thanks to @WE1ZARD\\nFixed issue in ru translation file\\n\\n0.4.3\\n\\nReworked code that handles downloading/extracting the icon zipfile (#24 )\\n\\n0.4.2\\n\\nThis release adds the ability to use your own images when selecting icon components using the 'Frame', 'Character', or 'Background' sections. You can now use your own images and the NSO icon components together when creating your user icon.\\n\\nChanges:\\n\\nAdded 'custom' entry to icon component listing that allows you to select your own images to use as icon parts\\nDid some rework on the code to remove a dependency and cleanup some mess", 
            "screens": 0, 
            "extracted": 9977, 
            "version": "0.4.4", 
            "filesize": 3980, 
            "details": "nso-icon-tool allows you create custom avatars using icon elements used by NSO. You can also your own images to create avatars if desired.\\n\\nfeatures:\\naccess to an NSO icon element cache to create custom avatars\\nability to update element cache to access new additions\\nuse custom images when creating avatars", 
            "app_dls": 488, 
            "md5": "f5d655953098d69f8400f1b8edac87e9"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/mtp-server-nx/mtp-server-nx.nro", 
            "updated": "25/03/2020", 
            "name": "mtp-server-nx", 
            "license": "Apache v2", 
            "title": "MTP Server NX", 
            "url": "https://github.com/retronx-team/mtp-server-nx/releases", 
            "description": "A MTP Server implementation for Nintendo Switch", 
            "author": "Gillou68310", 
            "changelog": "1.3\\n\\nFix DB iteration on File / Folder Delete\\nThanks to RSDuck and turtle-insect\\n\\n1.1\\n\\nThis reduces startup times drastically, he also did the groundwork for a background service!\\nBuilt with libnx v2.5.0 for full 9.0.0 compat.\\n\\n1.0\\n\\nInitial Release", 
            "screens": 0, 
            "extracted": 983, 
            "version": "1.3", 
            "filesize": 389, 
            "details": "A port of https://manpages.ubuntu.com/manpages/xenial/man1/mtp-server.1.html for Nintendo Switch\\n\\nUsed to provide access to files over the MTP protocol, for use when connecting devices via USB.\\n\\nKnown Issues\\n\\nStartup takes long with a lot of Files on the SD Card, due to scanning\\nTransfer speed can still be improved\\nUntested on Horizon < 6.1", 
            "app_dls": 25579, 
            "md5": "024022acffd9aa434504138598044b47"
        }, 
        {
            "category": "tool", 
            "binary": "/switch/FlashCardsNX.nro", 
            "updated": "21/10/2019", 
            "name": "FlashCardsNX", 
            "license": "n/a", 
            "title": "FlashCardsNX", 
            "url": "https://github.com/CompSciOrBust/FlashCardsNX/releases", 
            "description": "A flash cards app for the Nintendo Switch", 
            "author": "CompSciOrBust", 
            "changelog": "2.1.2\\n\\nUnicode was already supported in the card select UI but I forgot to add it to the card UI. Also fixed a mistake in the prime numbers example where one question asked for primes between 97 and 100 instead of 90 and 100.\\nA exponents example set of cards was included.\\n\\n\\n\\n2.1.1\\n\\nFixed a bug when backing of the main UI and selecting a new set of cards.\\n\\n2.0\\n\\nPublic Release", 
            "screens": 0, 
            "extracted": 8667, 
            "version": "2.1.2", 
            "filesize": 3457, 
            "details": "A flash cards app for the Nintendo Switch\\n\\nThis is a rewrite of my Nintendo Switch flash cards app which I nver made public until now.\\n\\nHow to use\\nPlace a text file in /config/cards/ on your sd card. If multiple files are found you will be given the option of which one you want to use when starting the app.\\n\\nThe questions and answers are seperated on each line. A line containing a question should be followed by a line containing a answer.\\n\\n\\nCredits\\nLibNX and DevkitPro for making the toolchain.\\n\\nDalton Maag for the Ubuntu font.\\n\\nEveryone in the AtlasNX discord developer chat for helping me with the first version. This is a complete rewrite but I would not have been able to complete the first version without their help because it was my first SDL project.\\n\\nI got the icon a while ago and I can't remember who made it but it was marked as reuse with modification on Google Images.\\n\\n", 
            "app_dls": 675, 
            "md5": "b2e870cdad329329d17e04121631624a"
        }, 
        {
            "category": "game", 
            "binary": "/switch/McOsu/McEngine.nro", 
            "updated": "23/01/2022", 
            "name": "McOsu-NX", 
            "license": "GPLv3", 
            "title": "McOsu-NX", 
            "url": "https://github.com/McKay42/McOsu-NX/releases", 
            "description": "Custom unofficial osu! practice client", 
            "author": "McKay42", 
            "changelog": "33.00\\n\\nNon switch-specific changes from version 33: https://steamcommunity.com/games/607260/announcements/detail/3128313422581495579\\n\\n31.08\\n\\nNon switch-specific changes: https://steamcommunity.com/games/607260/announcements/detail/1691601090541194677\\n\\n29.31\\n\\nRecompiled with libnx v3.0.0 (to support input without hid-mitm)\\n\\n29.3\\n\\nKeyboard/Mouse support, with some limitations:\\nText typing is not supported, only raw keys/hotkeys/gameplay work\\nMouse sensitivity can only be set to \u2265 1.0, use DPI settings of your mouse if you want to go lower\\nImproved touch handling slightly\\nNon switch-specific changes", 
            "screens": 0, 
            "extracted": 74322, 
            "version": "33.00", 
            "filesize": 55800, 
            "details": "WARNING: Use HBL takeover or NSP HBL to launch, or you WILL run out of memory and crash!\\n\\nHow to use:\\nNOTE: You don't have to create any folder structures, everything is already prepared. Follow the guide on extracting beatmaps/skins below, and simply put them into /switch/McOsu/Songs/ or /switch/McOsu/Skins/ on your microSD card. Default beatmaps are already included, so just follow their structure.\\n\\nHow to add beatmaps/skins: https://steamcommunity.com/sharedfiles/filedetails/?id=880768265\\n\\nFAQ: https://steamcommunity.com/app/607260/discussions/0/1620599015885400990/\\n\\nThe game will give you a big fat warning on the main menu if it doesn't have access to enough memory (< 1 GB).\\n\\nAt least on my system, if you still launch HBL via the Album applet, then only ~400 MB out of 4 GB are available, and some of that is already used up. (This might not even be a problem anymore with newer Atmosphere/ReiNX/etc. versions.)\\n\\nI have only tested this on firmware 5.1, with a pretty old SD setup and RajNX (which is no longer maintained), but never change a running system you know.\\n\\nIf you get audio crackling after minimizing the game or going into sleep mode: To fix it, Go to Options > Audio > Restart SoundEngine (fix crackling)\\n\\nIf you are playing beatmaps with a lot of sliders visible at the same time, and consistently getting less than 60 fps, improve performance by enabling Options > Skin > \"Use slidergradient.png\"\\n\\nIf you get stuck at 0% loading forever, then the resource loader thread could not be created. Try restarting the game, HBL, and your system, in that order. This has only happened to me once, so it shouldn't be a problem.\\n\\nAll speed changing mods are unavailable (DT/HT/DC/NC, Speed/BPM Multiplier, Timewarp) because the audio library does not support varying playback speed (yet).\\n\\n", 
            "app_dls": 5708, 
            "md5": "4b38a2df8f0fadb631c17f0e8e31dbcf"
        }, 
        {
            "category": "game", 
            "binary": "/switch/taisei/taisei.nro", 
            "updated": "10/10/2024", 
            "name": "Taisei", 
            "license": "n/a", 
            "title": "taisei", 
            "url": "https://github.com/taisei-project/taisei/releases", 
            "description": "Touhou Project clone and fangame", 
            "author": "taisei-project", 
            "changelog": "1.4.2\\n\\nThis is a stable maintenance release. It features some bugfixes, optimizations, and other improvements backported from the v1.5 development tree.\\n\\nReworked gamepad input handling and configuration:\\nThe free/restricted axis distinction is gone; the joystick always operates in \"free\" mode.\\nAdded direction snapping functionality to help aid exact movement in cardinal and/or diagonal directions. The snapping angle can be adjusted from 0% (disabled) to 100% (similar to the old \"restricted\" mode). The snapping angle can also be biased towards cardinals or diagonals.\\nWhen the maximum zone is less than or equals dead zone, moving the character will always move at maximum speed (as in the old \"restricted\" mode).\\nMost of these settings are now visualized in the options menu and can be tested there.\\nChanged the default Spell Card (Bomb) and Power Surage gamepad bindings to Left Trigger and Right Trigger respectively.\\nIf autorestart is enabled for spell practice, it will now try to load a quicksave if one exists.\\nAdded a \"load quicksave\" option to the pause menu in practice modes.\\nCutscenes that have been seen before can now be completely skipped.\\nAdded an option to reset the config to last saved values.\\nReduced some sprite batching CPU overhead.\\nOptimized rendering of scenes with many lasers.\\nOptimized loading of webp files.\\nOptimized various math routines.\\nImproved performance of some shaders.\\nDue to bad OpenGL drivers, macOS releases now use ANGLE for rendering by default. This fixes serious performance issues on some Apple systems.\\nWorked around broken rendering in WebGL on Apple systems with certain versions of ANGLE (see #386). The ANGLE bug has been fixed upstream, but certain systems are known to still be affected, such as iOS 18.\\nFixed crashes related to opening the pause menu.\\nFixed the cutscene text spontaneously disappearing on some systems.\\nFixed laser rendering errors during screen-shake effects.\\nFixed some minor general rendering errors.\\nFixed rendering errors specific to WebGL and ANGLE on Windows.\\nFixed ongoing asynchronous tasks (e.g. screenshot encoding) sometimes failing to finish when exiting the game.\\nFixed some erroneous build warnings when building with Clang 18+.\\nFixed pseudo-random lookup order when a resource exists in multiple locations. This allows files placed in sub-packages to override those from 00-taisei.zip reliably.\\nRemoved the defunct gles20 renderer backend.\\nScreenshots now use asynchronous GPU downloads.\\nAdded --width and --height command line parameters.\\nThe default config can now be customized by adding a config.default file to the game's resources.\\nAdded documentation for previously undocumented environment variables to ENVIRON.rst.\\nAdded an experimental \"framedump\" mode that can be used to render videos; see ENVIRON.rst for details.\\nAdded a watchdog in kiosk mode that resets the game to the main menu and default settings after a period of inactivity.\\nAdded the TAISEI_KIOSK_PREVENT_QUIT environment variable to control whether Quit is available in kiosk mode.\\nAdded a some basic test programs for the renderer API.\\n\\n1.4.1\\n\\nThis is a stable maintenance release. It features some bugfixes and optimizations backported from the v1.5 development tree.\\n\\nFixed a crash that happened after a few minutes would pass without any input if the intro cutscene had previously played (#371).\\nFixed a crash when attempting to start a stage on OpenBSD systems (#372).\\nFixed heavy audio distortion on the Switch (#374).\\nThis was a matter of updating the SDK, and entailed no code changes on Taisei's side.\\nOn the Switch the resolution will now automatically adapt to the console's docked/undocked state.\\nThreaded loading is now enabled on the Switch.\\nOptimized a few hot paths in the game update loop.\\nOptimized the tree branch mesh in the Stage 2 background to avoid rendering a lot of tiny triangles.\\nWorked around a Meson issue that broke Emscripten builds (42a7e49).\\nEnabled some \"modern\" WASM features for the Emscripten build. This raises the browser version requirements for the official build to Chromium 91 or Firefox 89.\\nAdded a gamemode build option to control whether to enable GameMode integration on Linux.\\n\\n1.4\\n\\nThis is a major release, with substantially redesigned stages and bosses, new story, new backgrounds, and heavy internal rewrites.\\n\\n1.3.2\\n\\nThis is a stable maintenance release. It features various bugfixes, optimizations, and minor features backported from the v1.4 development tree.\\n\\nThere are no gameplay changes and this version should be replay-compatible with the initial v1.3 release.\\n\\n1.3.1\\n\\nSilent update : recompiled with latest libnx\\n\\nThis is a stable maintenance release. It features some important bugfixes and a few optimizations and visual improvements backported from the v1.4 development tree, as well as new character art by @afensorm.\\n\\nOther than fixing some rare game-breaking bugs, there are no gameplay changes and this version should be replay-compatible with the initial v1.3 release.\\n\\nSemi-official homebrew Switch binaries are now also available, thanks to @p-sam's porting efforts. Use at your own risk.", 
            "screens": 0, 
            "extracted": 189532, 
            "version": "1.4.2", 
            "filesize": 182126, 
            "details": "Taisei (\u6cf0\u897f, lit. Occident) is a free and open-source fangame of the T\u014dh\u014d series, written in C using SDL2 and OpenGL.\\n\\nBasically, it is a shoot \u2019em up game with lots of bullets (the genre is literally called bullet hell). It doesn\u2019t aim to rebuild a particular installment of the T\u014dh\u014d games, but is rather an original game set in the world of T\u014dh\u014d. Enjoy dodging through 6 stages full of new bullet patterns on four difficulty levels!\\n\\nIf you have never played T\u014dh\u014d before, you can have a look at our manual for an explanation of the controls and game mechanics. The game is mostly done and very playable, so feel free to give it a try!\\n\\nVisit our website at https://taisei-project.org/ for more information.\\n\\nThe license is linked here :\\n\\nhttps://github.com/taisei-project/taisei/blob/master/COPYING", 
            "app_dls": 15967, 
            "md5": "9a6e459edf3451ee6345e9a7dafbaa1e"
        }, 
        {
            "category": "game", 
            "binary": "/switch/postal/postal.nro", 
            "updated": "16/07/2018", 
            "name": "postal", 
            "license": ".", 
            "title": "Postal", 
            "url": "https://github.com/lantus/postal-nx/releases", 
            "description": "Postal game", 
            "author": "MVG", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 3628, 
            "version": "1.00", 
            "filesize": 1034, 
            "details": "Ported to the Switch by MVG. Original game by Running with Scissors in 1997\\n\\nOriginal Source Release - https://bitbucket.org/gopostal/postal-1-open-source\\nRunning with Scissors Website - http://runningwithscissors.com/\\n\\nWide Screen and Twin Stick optimized for the Nintendo Switch :)\\nRuns on 5.x firmware.\\n\\nPlace Postal Data files in 'res' folder. You can get Postal Redux for 1.99 on GoG.com or via other means.", 
            "app_dls": 8881, 
            "md5": "69d15bff151f4265a9ae3ba6bb0942bf"
        }, 
        {
            "category": "concept", 
            "binary": "/switch/wae.nro", 
            "updated": "04/11/2018", 
            "name": "wae", 
            "license": "GPLv3", 
            "title": "Do u no de wae", 
            "url": "https://github.com/3096/wae/releases/", 
            "description": "Sample program to display images", 
            "author": "3096", 
            "changelog": "n/a", 
            "screens": 0, 
            "extracted": 8425, 
            "version": "0.1", 
            "filesize": 1571, 
            "details": "A rushed meme, no audio working yet.\\nPress A to know de wae.\\nPress + to quit.", 
            "app_dls": 5485, 
            "md5": "5280191c23d45b006b1d4d0e1a0b1dee"
        }, 
        {
            "category": "n/a", 
            "binary": "/switch/appstore_survey/HBAS-Survey.nro", 
            "updated": "27/07/2020", 
            "name": "appstore_survey", 
            "license": "MIT", 
            "title": "HB App Store Survey", 
            "url": "n/a", 
            "description": "User feedback survey", 
            "author": "4TU Team", 
            "changelog": "Update survey link", 
            "screens": 0, 
            "extracted": 162, 
            "version": "1.0.1", 
            "filesize": 80, 
            "details": "Hello! We would like to better understand how our users are using the Homebrew App Store service.\\n\\nInstalling and running this app will open a website to a survey we kindly request you fill out detailing your experience with the service.\\n\\nThank you very much.\\n\\nIf you'd rather not install the app, you can also fill out the survey on a computer at http://fortheusers.org/survey\\n\\nAfter the survey, you can remove this app. App based on BrowseNX by crc32, and modified by sirocyl.", 
            "app_dls": 1431, 
            "md5": "777f8409755146b52ebbd70296de03c6"
        }, 
        {
            "category": "game", 
            "binary": "/switch/OpenArenaNX/OpenArenaNX.nro", 
            "updated": "29/06/2023", 
            "name": "OpenArenaNX", 
            "license": "GPLv2", 
            "title": "OpenArenaNX", 
            "url": "https://github.com/faithvoid/OpenArenaNX", 
            "description": "OpenArena (port)", 
            "author": "faithvoid", 
            "changelog": "v0.7.8.1 - Hotfix\\n\\nRe-compiled with the new libNX for newer firmwares!\\n\\nv0.7.8 - Renderer Upgrade\\n\\nAll builds now compile with renderergl2 as default. In my experience this makes a few things look a bit better, might(?) smooth out performance, and futureproofs everything a touch (in case someone wanted to implement a newer renderer engine later down the line).\\n\\nIf upgrading from a previous build, all you need to replace is OpenArenaNX.nro / Q3ArenaNX.nro\\n\\nv0.7.7 - Better Gyro Support\\n\\nGyro now automatically detects whether the user's controller is in handheld or wireless mode and adjusts the axis accordingly. Haven't tested with a pro controller, but would imagine it should work fine, as the fix specifically targets handheld mode. This means apart from finding slightly more natural gyro defaults for both handheld and wireless mode, the end user can enjoy seamless gyro controls between input methods.\\n\\nIf updating an older version, extract to the original folder and replace all files when prompted.\\n\\nv0.7.6 - Basic Gyro Support\\n\\nRewrote fgsfdsfgs's sdl_input_nx.c from ioquake3-nx to reference current HID refactor names, therefore enabling basic gyro support. (albeit technically incomplete due to no automatic switching of yaw axis to yaw/roll between controllers.)\\n\\nGyro can be enabled from the control settings in the main menu. The stock gyro configuration is meant for handheld use, so if you're using a pro/wireless controller you'll have to also type \"/in_gyromouse_yaw_axis 1\" (and if you want to go back to handheld type the last command with a 0 instead of 1). Gyro speed can be adjusted by adjusting the mouse speed.", 
            "screens": 0, 
            "extracted": 10785, 
            "version": "0.7.8.1", 
            "filesize": 4271, 
            "details": "A port of ioquake3 + OpenArena for the Nintendo Switch. Compatible with both controllers and keyboard + mouse controls! Based off of ioquake3 1.36 and OpenArena 3.00a.\\n\\nInstallation:\\n\\n- Copy baseoa from a free copy of OpenArena, making sure not to replace any files.\\n- Launch via HBMenu (by pressing R, not album!)\\n- Start fragging!\\n\\nKnown Issues:\\n- Sleep mode will crash the game and potentially Horizon. Still ironing out why this happens, so be cautious.\\n- A small amount of slowdown can happen during really hectic battles in larger maps.\\n- If you switch between controller and keyboard + mouse input mid-match, your camera may start spinning wildly. Just press ESC/+, click with your desired input, then press ESC/+ again and it should resolve it. This might not even be a real bug and might just be my wireless keyboard, but I'm putting it here just to be safe.\\n\\nOtherwise, the game works as you'd expect, and supports most, if not all mods that don't use dynamic libraries.", 
            "app_dls": 1036, 
            "md5": "e98da12bf0ddd99973d00935fd6a6ea7"
        }, 
        {
            "category": "game", 
            "binary": "/switch/Shasciw/Shasciw.nro", 
            "updated": "22/03/2019", 
            "name": "Shasciw", 
            "license": "n/a", 
            "title": "Shasciw", 
            "url": "https://github.com/R1ckyman/Shasciw/releases", 
            "description": "Switch homebrew game for two players", 
            "author": "R1ckyman", 
            "changelog": "v1.7.0\\n\\nImproved a lot the general controls.\\nAdded up to 8 players.\\nAdded a settings menu for selecting the players and controls.\\nImproved the keyboard for selecting names and letters.\\nOther changes in UI colors and objects.\\nA lot of bugs and crashed fixed.", 
            "screens": 0, 
            "extracted": 461, 
            "version": "1.7.0", 
            "filesize": 155, 
            "details": "Game info:\\nASCII shooter game for up to 8 players\\nThe objective is to eliminate the others player (or enemy team in the future).\\nTurn based game, with special objects to help you.\\nObjects which upgrades players stats.\\nTODO:\\nAdd settings.ini\\nAdd a team selector.\\nAdd save/load game.\\nControls\\nJoycons are held horizontal\\n\\n[Left Joycon]\\n\\n[Keyboard]\\nDPAD (\u2191,\u2193,\u2192,\u2190) to select a letter and SL to enter.\\nZL to switch caps.\\n[Game]\\nDPAD (\u2191,\u2193,\u2192,\u2190) for moving the character.\\nSL for action or to use a selected object.\\nSR to open the inventory.\\nAfter action selected, DPAD (\u2191,\u2193,\u2192,\u2190) to select the direction.\\n[Right Joycon]\\n\\n[Keyboard]\\nX,B,A,Y to select a letter and SL to enter.\\nSR to select caps.\\n[Game]\\nX,B,A,Y for moving the character.\\nSL for action or to use a selected object.\\nSR to open the inventory.\\nAfter action selected, X,B,A,Y to select the direction.", 
            "app_dls": 194, 
            "md5": "8fa0bfc60cc3c07c51916ef64bc711e3"
        }
    ]
}
